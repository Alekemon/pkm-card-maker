{"version":3,"sources":["pages/CardCreator/CardCreator.module.scss","pages/CardCreator/components/EnergyPicker/EnergyPicker.module.scss","App.module.scss","components/CardDisplay/CardDisplay.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","services.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/index.tsx","pages/CardCreator/components/EnergyPicker/index.tsx","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","relativePathPrefix","path","process","getCardOptions","a","fetch","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","imagePath","card","className","styles","id","backgroundImage","src","alt","name","formatText","hasSubname","subname","descriptionWrapper","description","illustrator","set","number","shortName","setIcon","rotation","setNumber","cardNumber","totalInSet","rarityIcon","hasWhiteText","imageLayer1","image","imageLayer2","EnergyCard","descriptionWrapperEnergy","typeImage","typeImageSpecial","PokemonCard","useEffect","moves","highestCost","forEach","move","totalAmount","energyCost","amount","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","Math","max","whiteText","namePokemon","rarity","hasNameOutline","nameOutline","subtype","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hasVStyle","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","text","map","i","key","moveMultiple","moveV","moveNameWrapper","moveCost","moveImages","moveType","returnValue","push","moveEnergy","formatMoveCost","moveDamage","damage","moveText","typeBar","hasBlackTopText","hasWhiteTopText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","noDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","CardDisplay","useState","setImagePath","supertype","baseSet","variation","getImage","options","folder","undefined","filePath","Object","values","param","Trainer","Energy","Pokemon","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","wrapper","button","role","aria-label","onClick","newMoveCost","find","title","splice","indexOf","connect","cardOptionsState","dispatch","bindActionCreators","importingCard","useRef","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","current","selectedIndex","value","newType","newSubtype","newVariation","newRarity","makeCard","navigator","clipboard","readText","then","cardObj","JSON","parse","newBaseSet","newSupertype","findIndex","t","newSet","newWeaknessType","newResistanceType","newRotation","newRarityIcon","catch","seperator","htmlFor","input","inputLabel","ref","inputField","onChange","currentTarget","disabled","hasSubtypes","subtypeOptional","includes","hasVariations","includesType","includesSubtype","includesVariation","min","horizontal","accept","target","files","window","URL","createObjectURL","inputCheckbox","checked","inputTextarea","getElementById","htmlToImage","toPng","dataUrl","download","writeText","stringify","App","store","header","headerCircle","content","CardCreator","footer","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.925fdfb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"input\":\"CardCreator_input__2bKy_\",\"horizontal\":\"CardCreator_horizontal__2ORLy\",\"inputField\":\"CardCreator_inputField__1c5d_\",\"inputLabel\":\"CardCreator_inputLabel__32xWl\",\"inputTextarea\":\"CardCreator_inputTextarea__3iCYP\",\"seperator\":\"CardCreator_seperator__1YR8e\",\"button\":\"CardCreator_button__2OfjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__2_WHG\",\"type\":\"EnergyPicker_type__2ib5D\",\"image\":\"EnergyPicker_image__21nPN\",\"button\":\"EnergyPicker_button__wxjLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"28.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"image\":\"CardDisplay_image__1Vf1q\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","export const relativePathPrefix = (path: string): string  => `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\n","import { relativePathPrefix } from \"services\";\n\nexport const getCardOptions = async () => {\n  try {\n    const response = await fetch(relativePathPrefix('/data/cardOptions.json'));\n    return response.json();\n  } catch(e) {\n    console.error(e);\n  }\n}\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\nimport { Card } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\nimport { relativePathPrefix } from 'services';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst TrainerCard: React.FC<Props> = ({ imagePath, card }) => {\n  return (\n    <div className={styles.card} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={styles.name}>{formatText(card.name)}</span>\n      {card.type?.hasSubname && <span className={styles.subname}>{formatText(card.subname)}</span>}\n      <div className={styles.descriptionWrapper}>\n        <p className={styles.description}>{formatText(card.description)}</p>\n      </div>\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n      {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`)}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default TrainerCard;\n","import React from 'react';\nimport { Card } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\nimport { relativePathPrefix } from 'services';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst EnergyCard: React.FC<Props> = ({ imagePath, card }) => {\n  return (\n    <div className={styles.card} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      {card.type?.shortName === 'Special' && <>\n        <span className={styles.name}>{formatText(card.name)}</span>\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n        {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n        {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n        <span className={styles.setNumber}>\n          {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n          {card.rarityIcon &&\n            <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`)}\n              alt={card.rarityIcon.name} className={styles.rarityIcon} />\n          }\n        </span>\n      </>}\n      {card.typeImage && <img src={card.typeImage}\n        className={`${styles.typeImage} ${card.type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />}\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default EnergyCard;\n","import React, { useEffect } from 'react';\nimport { Card, Move } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\nimport { relativePathPrefix } from 'services';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst PokemonCard: React.FC<Props> = ({ imagePath, card }) => {\n  useEffect(() => {\n    if(card.moves) {\n      let highestCost = 0;\n      card.moves.forEach((move) => {\n        let totalAmount: number = 0;\n        move.energyCost.forEach((energyCost) => totalAmount += energyCost.amount);\n        if(totalAmount > highestCost) {\n          highestCost = totalAmount;\n        }\n      });\n\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\n      moveNames.forEach((moveName) => {\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\n      });\n    }\n  }, [card.moves]);\n\n  const formatMoveCost = (move: Move) => {\n    let totalAmount: number = 0;\n    const moveImages = move.energyCost.map((moveType) => {\n      const returnValue: JSX.Element[] = [];\n      for(let i = 0; i < moveType.amount; i++) {\n        totalAmount++;\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\n      }\n      return returnValue;\n    });\n\n    if(totalAmount === 0) {\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\n    } else {\n      return moveImages;\n    }\n  }\n\n  return (\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline ? styles.nameOutline : ''}`}>\n        {formatText(card.name)}\n        {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\n        {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\n      </span>\n      <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\n        <span className={styles.hitpointsHP}>HP</span>\n        <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\n      </div>\n      {(card.subtype?.hasPrevolve && card.prevolveName) &&\n        <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\n      }\n      {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\n        <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\n      }\n      <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\n        {card.ability &&\n          <div className={styles.ability}>\n            <div className={styles.abilityNameWrapper}>\n              {card.subtype?.hasVStyle ?\n                <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\n                :\n                <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\n              }\n              <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\n            </div>\n            <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\n          </div>\n        }\n        {card.moves && (card.moves.map((move, i) =>\n          <div key={i}\n            className={`${i === 0 ? card.moves && card.moves.length > 1 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\n            {move.name &&\n              <div className={styles.moveNameWrapper}>\n                <div className={styles.moveCost}>\n                  {formatMoveCost(move)}\n                </div>\n                <span className={`${styles.moveName} moveName`}>{move.name}</span>\n                <span className={styles.moveDamage}>{move.damage}</span>\n              </div>\n            }\n            <p className={styles.moveText}>{formatText(move.text)}</p>\n          </div>\n        ))}\n      </div>\n      <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\n        {card.weaknessType &&\n          <span className={styles.weakness}>\n            <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\n            <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\n          </span>\n        }\n        {card.resistanceType &&\n          <span className={styles.resistance}>\n            <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\n            <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\n          </span>\n        }\n        <div className={styles.retreatCost}>\n          {Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\n            i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\n          )}\n        </div>\n      </div>\n      {!card.subtype?.noDescription &&\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n      }\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n      {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText || card.subtype?.hasVStyle? '_white' : ''}.png`)}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {(card.subtype?.hasPrevolve && card.prevolveImage) &&\n        <div className={styles.prevolveImageWrapper}>\n          <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\n        </div>\n      }\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default PokemonCard;\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'interfaces';\nimport TrainerCard from './Trainer';\nimport styles from './CardDisplay.module.scss';\nimport EnergyCard from './Energy';\nimport PokemonCard from './Pokemon';\nimport { relativePathPrefix } from 'services';\n\ninterface ImagePathOptions {\n  baseSet: string,\n  type: string,\n  subtype?: string,\n  variation?: string,\n  rarity?: string,\n  supertype?: string,\n}\n\ninterface Props {\n  card: Card,\n}\n\n\nconst CardDisplay: React.FC<Props> = ({ card }) => {\n  const [imagePath, setImagePath] = useState<string>();\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\n\n  useEffect(() => {\n    const getImage = (options: ImagePathOptions, folder: string | undefined = undefined): string => {\n      // Format the options according to the formatting defined in the README\n      let filePath: string = relativePathPrefix(`/assets/${supertype}/`);\n      if(folder) {\n        filePath += `${folder}/`;\n      }\n      Object.values(options).forEach((param: string, i: number) => {\n        if(param !== undefined && param !== 'default') {\n          if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\n            (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\n            (options.rarity === 'Promo' && param === 'Basic')) {\n            return;\n          }\n          if(i !== 0) {\n            filePath += '_';\n          }\n          filePath += param;\n          if(param === 'Rainbow') {\n            if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\n              filePath += `_${options.variation}`;\n            }\n          }\n          if(param === 'V' && !options.rarity) {\n            filePath += '_Basic';\n          }\n        }\n      });\n      return `${filePath}.png`;\n    }\n\n    if(supertype && type && baseSet) {\n      let imagePath: string;\n      switch(supertype) {\n        case 'Pokemon':\n          imagePath = getImage({ baseSet: baseSet.shortName, subtype: subtype?.shortName, variation: variation?.shortName,\n            rarity: rarity?.shortName, type: type.shortName }, type.shortName);\n          break;\n        case 'Energy':\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName });\n          break;\n        case 'Trainer':\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName, subtype: subtype?.shortName });\n          break;\n        default:\n          return;\n      }\n      setImagePath(imagePath);\n    }\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\n\n  if(supertype === 'Trainer') {\n    return <TrainerCard imagePath={imagePath} card={card} />\n  } else if(supertype === 'Energy') {\n    return <EnergyCard imagePath={imagePath} card={card} />\n  } else {\n    return <PokemonCard imagePath={imagePath} card={card} />\n  }\n}\n\nexport default CardDisplay;\n\nexport const formatText = (text: string | undefined) => {\n  if(text) {\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\n    if(chars) {\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\n      const textNoChars = text.split(/\\[.*?\\]/g);\n      const returnText: (JSX.Element | string)[] = [];\n      textNoChars.forEach((textElm, i) => {\n        returnText.push(textElm);\n        if(charsArr.length > i) {\n          if(charsArr[i].length > 1) {\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\n          } else {\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\n          }\n        }\n      });\n      return returnText;\n    } else {\n      return text;\n    }\n  } else {\n    return false;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport styles from './EnergyPicker.module.scss';\nimport { MoveType, Type } from 'interfaces';\nimport { relativePathPrefix } from 'services';\n\ninterface Props {\n  label: String,\n  types: Type[],\n  moveCost: MoveType[],\n  setMoveCost: (moveTypes: MoveType[]) => void,\n}\n\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    const newMoveTypes: MoveType[] = [];\n    types.forEach((type) => {\n      if(type.supertype === 'Pokemon') {\n        newMoveTypes.push({\n          type,\n          amount: 0,\n        });\n      }\n    });\n    setMoveTypes(newMoveTypes);\n  }, [types]);\n\n  return (\n    <div>\n      <span>{label}</span>\n      <div className={styles.wrapper}>\n        {moveTypes.map((moveType, i) =>\n          <div className={styles.type} key={i}>\n            <span className={styles.button} role='img' aria-label='arrow up' onClick={() => {\n              let newMoveCost: MoveType[] = [...moveCost];\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\n              if(type) {\n                type.amount = type.amount + 1;\n              } else {\n                type = {\n                  type: moveType.type,\n                  amount: 1,\n                }\n                newMoveCost.push(type);\n              }\n              setMoveCost(newMoveCost);\n            }}>🔺</span>\n            <img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\n            <span className={styles.button} role='img' aria-label='arrow down' onClick={() => {\n              let newMoveCost: MoveType[] = [...moveCost];\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\n              if(type) {\n                type.amount = type.amount - 1;\n                if(type.amount <= 0) {\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\n                }\n                setMoveCost(newMoveCost);\n              }\n            }}>🔻</span>\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default EnergyPicker;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { CardOptionsState } from 'reducers/cardOptions';\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card } from 'interfaces';\nimport { bindActionCreators } from 'redux';\nimport { requestCardOptions } from 'actions';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport styles from './CardCreator.module.scss';\nimport CardDisplay from 'components/CardDisplay';\nimport EnergyPicker from './components/EnergyPicker';\nimport { relativePathPrefix } from 'services';\n\ninterface Props {\n  cardOptionsState: CardOptionsState,\n  requestCardOptions: () => Object,\n}\n\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, requestCardOptions }) => {\n  const importingCard = useRef<boolean>(false);\n  // Selectors\n  const [supertype, setSupertype] = useState<string>('Pokemon');\n  const [type, setType] = useState<Type>();\n  const [baseSet, setBaseSet] = useState<BaseSet>();\n  const [set, setSet] = useState<Set>();\n  const [rotation, setRotation] = useState<Rotation>();\n  const [variation, setVariation] = useState<Variation>();\n  const [subtype, setSubtype] = useState<Subtype>();\n  const [rarity, setRarity] = useState<Rarity>();\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\n  const [weaknessType, setWeaknessType] = useState<Type>();\n  const [resistanceType, setResistanceType] = useState<Type>();\n  // Selector refs\n  const baseSetRef = useRef<HTMLSelectElement>(null);\n  const supertypeRef = useRef<HTMLSelectElement>(null);\n  const typeRef = useRef<HTMLSelectElement>(null);\n  const subtypeRef = useRef<HTMLSelectElement>(null);\n  const variationRef = useRef<HTMLSelectElement>(null);\n  const rarityRef = useRef<HTMLSelectElement>(null);\n  const setIconRef = useRef<HTMLSelectElement>(null);\n  const rotationRef = useRef<HTMLSelectElement>(null);\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\n  // Inputs\n  const [name, setName] = useState<string>('');\n  const [prevolveName, setPrevolveName] = useState<string>('');\n  const [hitpoints, setHitpoints] = useState<number>(100);\n  const [subname, setSubname] = useState<string>('');\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\n  const [retreatCost, setRetreatCost] = useState<number>(1);\n  const [description, setDescription] = useState<string>('');\n  const [illustrator, setIllustrator] = useState<string>('');\n  const [cardNumber, setCardNumber] = useState<string>('');\n  const [totalInSet, setTotalInSet] = useState<string>('');\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\n  const [imageLayer1, setImageLayer1] = useState<string>('');\n  const [imageLayer2, setImageLayer2] = useState<string>('');\n  const [typeImage, setTypeImage] = useState<string>('');\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\n  // Ability/Moves\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\n  const [abilityName, setAbilityName] = useState<string>('');\n  const [abilityText, setAbilityText] = useState<string>('');\n  const [move1Name, setMove1Name] = useState<string>('');\n  const [move1Damage, setMove1Damage] = useState<string>('');\n  const [move1Text, setMove1Text] = useState<string>('');\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\n  const [move2Name, setMove2Name] = useState<string>('');\n  const [move2Text, setMove2Text] = useState<string>('');\n  const [move2Damage, setMove2Damage] = useState<string>('');\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    requestCardOptions();\n  }, [requestCardOptions]);\n\n  useEffect(() => {\n    setType(cardOptionsState.cardOptions.types[0]);\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\n    setSet(cardOptionsState.cardOptions.sets[0]);\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\n  }, [cardOptionsState]);\n\n  /**\n   * Changes the types/subtypes etc to the first available one within their parent\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\n   */\n  useEffect(() => {\n    if(importingCard.current) {\n      return;\n    }\n    if(typeRef.current) {\n      const { selectedIndex, options } = typeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newType = cardOptionsState.cardOptions.types.find((a: Type) => a.id === +value);\n      if(newType && newType !== type) {\n        setType(newType);\n      }\n    } else {\n      setType(undefined);\n    }\n    if(subtypeRef.current) {\n      const { selectedIndex, options } = subtypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSubtype = cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +value);\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\n        setSubtype(newSubtype);\n      }\n    } else {\n      setSubtype(undefined);\n    }\n    if(variationRef.current) {\n      const { selectedIndex, options } = variationRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newVariation = cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +value);\n      if(newVariation && newVariation !== variation) {\n        setVariation(newVariation);\n      }\n    } else {\n      setVariation(undefined);\n    }\n    if(rarityRef.current) {\n      const { selectedIndex, options } = rarityRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newRarity = cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +value);\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\n        setRarity(newRarity);\n      }\n    } else {\n      setRarity(undefined);\n    }\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\n\n  /**\n   * Turns state data into a Card object\n   */\n  const makeCard = (): Card => ({\n    baseSet,\n    supertype,\n    type,\n    set,\n    variation,\n    subtype,\n    rarity,\n    name,\n    prevolveName,\n    prevolveImage,\n    hitpoints,\n    subname,\n    typeImage,\n    pokedexEntry,\n    ability: hasAbility ? {\n      name: abilityName,\n      text: abilityText,\n    } : undefined,\n    moves: [\n      {\n        name: move1Name,\n        text: move1Text,\n        damage: move1Damage,\n        energyCost: move1Cost,\n      },\n      ...(!hasAbility && hasSecondMove ? [{\n        name: move2Name,\n        text: move2Text,\n        damage: move2Damage,\n        energyCost: move2Cost,\n      }] : []),\n    ],\n    weaknessType,\n    weaknessAmount,\n    resistanceType,\n    resistanceAmount,\n    retreatCost,\n    illustrator,\n    cardNumber,\n    totalInSet,\n    rotation,\n    rarityIcon,\n    description,\n    backgroundImage,\n    imageLayer1,\n    imageLayer2,\n  });\n\n  const downloadCard = () => {\n    const card = document.getElementById('card');\n    if(card) {\n      htmlToImage.toPng(card)\n        .then((dataUrl) => {\n          download(dataUrl, `${name || 'card'}.png`);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const exportCard = () => {\n    navigator.clipboard.writeText(JSON.stringify(makeCard()));\n  }\n\n  /**\n   * Sets all card data, selectors and energy pickers to certain values based on stringified json\n   */\n  const importCard = () => {\n    navigator.clipboard.readText()\n      .then((value: string) => {\n        const cardObj = JSON.parse(value);\n        importingCard.current = true;\n        // Base values\n        setName(cardObj.name);\n        setPrevolveName(cardObj.prevolveName);\n        setPrevolveImage(relativePathPrefix(cardObj.prevolveImage));\n        setHitpoints(cardObj.hitpoints);\n        setSubname(cardObj.subname);\n        setTypeImage(relativePathPrefix(cardObj.typeImage));\n        setPokedexEntry(cardObj.pokedexEntry);\n        setWeaknessAmount(cardObj.weaknessAmount);\n        setResistanceAmount(cardObj.resistanceAmount);\n        setRetreatCost(cardObj.retreatCost);\n        setIllustrator(cardObj.illustrator);\n        setCardNumber(cardObj.cardNumber);\n        setTotalInSet(cardObj.totalInSet);\n        setDescription(cardObj.description);\n        setBackgroundImage(relativePathPrefix(cardObj.backgroundImage));\n        setImageLayer1(relativePathPrefix(cardObj.imageLayer1));\n        setImageLayer2(relativePathPrefix(cardObj.imageLayer2));\n        if(cardObj.ability) {\n          setHasAbility(true);\n          setAbilityName(cardObj.ability.name);\n          setAbilityText(cardObj.ability.text);\n        }\n        setMove1Name(cardObj.moves[0].name);\n        setMove1Damage(cardObj.moves[0].damage);\n        setMove1Text(cardObj.moves[0].text);\n        setMove1Cost(cardObj.moves[0].energyCost);\n        if(cardObj.moves[1]) {\n          setHasSecondMove(true);\n          setMove2Name(cardObj.moves[1].name);\n          setMove2Damage(cardObj.moves[1].damage);\n          setMove2Text(cardObj.moves[1].text);\n          setMove2Cost(cardObj.moves[1].energyCost);\n        }\n        // Selectors\n        const newBaseSet: BaseSet | undefined = cardOptionsState.cardOptions.baseSets.find((a) => a.id === cardObj.baseSet.id);\n        if(newBaseSet) {\n          setBaseSet(newBaseSet);\n          if(baseSetRef.current && newBaseSet) {\n            baseSetRef.current.selectedIndex = cardOptionsState.cardOptions.baseSets.indexOf(newBaseSet);\n          }\n        } else {\n          if(baseSetRef.current) {\n            baseSetRef.current.selectedIndex = 0;\n          }\n          setBaseSet(undefined);\n        }\n        const newSupertype = cardObj.supertype;\n        if(newSupertype) {\n          setSupertype(newSupertype);\n          if(supertypeRef.current) {\n            supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => t.value === newSupertype);\n          }\n        } else {\n          if(supertypeRef.current) {\n            supertypeRef.current.selectedIndex = 0;\n          }\n          setSupertype('Pokemon');\n        }\n        const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.type.id);\n        if(newType) {\n          setType(newType);\n          if(typeRef.current) {\n            typeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newType);\n          }\n        } else {\n          if(typeRef.current) {\n            typeRef.current.selectedIndex = 0;\n          }\n          setType(undefined);\n        }\n        if(cardObj.subtype) {\n          const newSubtype: Subtype | undefined = cardOptionsState.cardOptions.subtypes.find((a) => a.id === cardObj.subtype.id);\n          if(newSubtype) {\n            setSubtype(newSubtype);\n            if(subtypeRef.current) {\n              subtypeRef.current.selectedIndex = cardOptionsState.cardOptions.subtypes.indexOf(newSubtype);\n            }\n          }\n        } else {\n          if(subtypeRef.current) {\n            subtypeRef.current.selectedIndex = 0;\n          }\n          setSubtype(undefined);\n        }\n        if(cardObj.set) {\n          const newSet: Set | undefined = cardOptionsState.cardOptions.sets.find((a) => a.id === cardObj.set.id);\n          if(newSet) {\n            setSet(newSet);\n            if(setIconRef.current) {\n              setIconRef.current.selectedIndex = cardOptionsState.cardOptions.sets.indexOf(newSet);\n            }\n          }\n        } else {\n          if(setIconRef.current) {\n            setIconRef.current.selectedIndex = 0;\n          }\n          setSubtype(undefined);\n        }\n        if(cardObj.weaknessType) {\n          const newWeaknessType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.weaknessType.id);\n          if(newWeaknessType) {\n            setWeaknessType(newWeaknessType);\n            if(weaknessTypeRef.current) {\n              weaknessTypeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newWeaknessType);\n            }\n          }\n        } else {\n          if(weaknessTypeRef.current) {\n            weaknessTypeRef.current.selectedIndex = 0;\n          }\n          setWeaknessType(undefined);\n        }\n        if(cardObj.resistanceType) {\n          const newResistanceType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.resistanceType.id);\n          if(newResistanceType) {\n            setResistanceType(newResistanceType);\n            if(resistanceTypeRef.current) {\n              resistanceTypeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newResistanceType);\n            }\n          }\n        } else {\n          if(resistanceTypeRef.current) {\n            resistanceTypeRef.current.selectedIndex = 0;\n          }\n          setResistanceType(undefined);\n        }\n        if(cardObj.rotation) {\n          const newRotation: Rotation | undefined = cardOptionsState.cardOptions.rotations.find((a) => a.id === cardObj.rotation.id);\n          if(newRotation) {\n            setRotation(newRotation);\n            if(rotationRef.current) {\n              rotationRef.current.selectedIndex = cardOptionsState.cardOptions.rotations.indexOf(newRotation);\n            }\n          }\n        } else {\n          if(rotationRef.current) {\n            rotationRef.current.selectedIndex = 0;\n          }\n          setRotation(undefined);\n        }\n        if(cardObj.variation) {\n          const newVariation: Variation | undefined = cardOptionsState.cardOptions.variations.find((a) => a.id === cardObj.variation.id);\n          if(newVariation) {\n            setVariation(newVariation);\n            if(variationRef.current) {\n              variationRef.current.selectedIndex = cardOptionsState.cardOptions.variations.indexOf(newVariation);\n            }\n          }\n        } else {\n          if(variationRef.current) {\n            variationRef.current.selectedIndex = 0;\n          }\n          setVariation(undefined);\n        }\n        if(cardObj.rarity) {\n          const newRarity: Rarity | undefined = cardOptionsState.cardOptions.rarities.find((a) => a.id === cardObj.rarity.id);\n          if(newRarity) {\n            setRarity(newRarity);\n            if(rarityRef.current) {\n              rarityRef.current.selectedIndex = cardOptionsState.cardOptions.rarities.indexOf(newRarity);\n            }\n          }\n        } else {\n          if(rarityRef.current) {\n            rarityRef.current.selectedIndex = 0;\n          }\n          setRarity(undefined);\n        }\n        if(cardObj.rarityIcon) {\n          const newRarityIcon: RarityIcon | undefined = cardOptionsState.cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIcon.id);\n          if(newRarityIcon) {\n            setRarityIcon(newRarityIcon);\n            if(rarityIconRef.current) {\n              rarityIconRef.current.selectedIndex = cardOptionsState.cardOptions.rarityIcons.indexOf(newRarityIcon);\n            }\n          }\n        } else {\n          if(rarityIconRef.current) {\n            rarityIconRef.current.selectedIndex = 0;\n          }\n          setRarityIcon(undefined);\n        }\n        importingCard.current = false;\n      })\n      .catch(console.error);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div>\n        <button className={styles.button} onClick={importCard}>Import from clipboard</button>\n        <div className={styles.seperator}>\n          <label htmlFor='baseSet' className={styles.input}>\n            <span className={styles.inputLabel}>{'Base Set'}</span>\n            <select id='baseSet' ref={baseSetRef} name='baseSet' className={styles.inputField}\n              onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='supertype' className={styles.input}>\n            <span className={styles.inputLabel}>{'Supertype'}</span>\n            <select id='supertype' ref={supertypeRef} name='supertype' className={styles.inputField} onChange={e => setSupertype(e.currentTarget.value)}>\n              <option value={'Pokemon'}>{'Pokémon'}</option>\n              <option value={'Trainer'}>{'Trainer'}</option>\n              <option value={'Energy'}>{'Energy'}</option>\n            </select>\n          </label>\n          <label htmlFor='type' className={styles.input}>\n            <span className={styles.inputLabel}>{'Type'}</span>\n            <select ref={typeRef} id='type' name='type' className={styles.inputField}\n              onChange={e => setType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                if(supertype !== value.supertype) {\n                  return false;\n                } else {\n                  return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </select>\n          </label>\n          {type?.hasSubtypes && supertype !== 'Energy' &&\n            <label htmlFor='subtype' className={styles.input}>\n              <span className={styles.inputLabel}>{'Subtype'}</span>\n              <select ref={subtypeRef} id='subtype' name='subtype' className={styles.inputField}\n                onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\n                {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\n                {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\n                  if(!value.types.includes(type?.id || 0)) {\n                    return false;\n                  } else {\n                    return <option value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </select>\n            </label>\n          }\n          {subtype?.hasVariations && supertype !== 'Energy' && supertype !== 'Trainer' &&\n            <label htmlFor='variation' className={styles.input}>\n              <span className={styles.inputLabel}>{'Variation'}</span>\n              <select ref={variationRef} id='variation' name='variation' className={styles.inputField}\n                onChange={e => setVariation(cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\n                  if(!value.subtypes.includes(subtype?.id || 0)) {\n                    return false;\n                  } else {\n                    return <option value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </select>\n            </label>\n          }\n          {supertype !== 'Energy' && supertype !== 'Trainer' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) &&\n            <label htmlFor='rarity' className={styles.input}>\n              <span className={styles.inputLabel}>{'Rarity'}</span>\n              <select ref={rarityRef} id='rarity' name='rarity' className={styles.inputField}\n                onChange={e => setRarity(cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\n                <option value={'default'}>{'Default'}</option>\n                {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\n                  const includesType: boolean = type?.rarities.includes(value.id) || false;\n                  const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\n                  const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\n                  if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\n                    || (includesSubtype && (includesVariation || !variation))\n                    || includesVariation) {\n                    return <option value={value.id} key={i}>{value.name}</option>;\n                  } else {\n                    return false;\n                  }\n                })}\n              </select>\n            </label>\n          }\n          {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n            <label htmlFor='set' className={styles.input}>\n              <span className={styles.inputLabel}>{'Set Icon'}</span>\n              <select ref={setIconRef} id='set' name='set' className={styles.inputField}\n                onChange={e => setSet(cardOptionsState.cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\n                  <option value={value.id} key={i}>{value.name}</option>\n                )}\n              </select>\n            </label>\n            <label htmlFor='rotation' className={styles.input}>\n              <span className={styles.inputLabel}>{'Rotation'}</span>\n              <select ref={rotationRef} id='rotation' name='rotation' className={styles.inputField}\n                onChange={e => setRotation(cardOptionsState.cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\n                  <option value={value.id} key={i}>{value.name}</option>\n                )}\n              </select>\n            </label>\n            <label htmlFor='rarityIcon' className={styles.input}>\n              <span className={styles.inputLabel}>{'Rarity Icon'}</span>\n              <select ref={rarityIconRef} id='rarityIcon' name='rarityIcon' className={styles.inputField}\n                onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\n                <option value={'none'}>{'None'}</option>\n                {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\n                  <option value={value.id} key={i}>{value.name}</option>\n                )}\n              </select>\n            </label>\n          </>}\n        </div>\n        {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n          <div className={styles.seperator}>\n            <label htmlFor='name' className={styles.input}>\n              <span className={styles.inputLabel}>{'Name'}</span>\n              <input type='text' id='name' name='name' className={styles.inputField}\n                value={name} onChange={e => setName(e.currentTarget.value)} />\n            </label>\n            {supertype === 'Pokemon' &&\n              <label htmlFor='hitpoints' className={styles.input}>\n                <span className={styles.inputLabel}>{'Hitpoints'}</span>\n                <input type='number' max='999' min='0' id='hitpoints' name='hitpoints' className={styles.inputField}\n                  value={hitpoints} onChange={e => setHitpoints(+e.currentTarget.value)} />\n              </label>\n            }\n            {subtype?.hasPrevolve && <>\n              <label htmlFor='prevolveName' className={styles.input}>\n                <span className={styles.inputLabel}>{'Prevolve Name'}</span>\n                <input type='text' id='prevolveName' name='prevolveName' className={styles.inputField}\n                  value={prevolveName} onChange={e => setPrevolveName(e.currentTarget.value)} />\n              </label>\n              <label htmlFor='prevolveImage' className={`${styles.input} ${styles.horizontal}`}>\n                <span className={styles.inputLabel}>{'Prevolve Image'}</span>\n                <input type='file' accept='image/*' id='prevolveImage' name='prevolveImage' className={styles.inputField} onChange={e => {\n                  if(e.target.files && e.target.files[0]) {\n                    setPrevolveImage(window.URL.createObjectURL(e.target.files[0]));\n                  } else {\n                    setPrevolveImage('');\n                  }\n                }} />\n              </label>\n            </>}\n            {subtype?.hasPokedexEntry &&\n              <label htmlFor='pokedexEntry' className={`${styles.input} ${styles.horizontal}`}>\n                <span className={styles.inputLabel}>{'Pokédex Entry'}</span>\n                <input type='text' id='pokedexEntry' name='pokedexEntry' className={styles.inputField}\n                  value={pokedexEntry} onChange={e => setPokedexEntry(e.currentTarget.value)} />\n              </label>\n            }\n            {type?.hasSubname &&\n              <label htmlFor='subname' className={styles.input}>\n                <span className={styles.inputLabel}>{'Subname'}</span>\n                <input type='text' id='subname' name='subname' className={styles.inputField}\n                  value={subname} onChange={e => setSubname(e.currentTarget.value)} />\n              </label>\n            }\n          </div>\n          {supertype === 'Pokemon' && <>\n            <div className={styles.seperator}>\n              <label htmlFor='hasAbility' className={styles.input}>\n                <span className={styles.inputLabel}>{'Has Ability'}</span>\n                <input type='checkbox' id='hasAbility' name='hasAbility' className={styles.inputCheckbox}\n                  checked={hasAbility} onChange={e => setHasAbility(e.currentTarget.checked)} />\n              </label>\n              {hasAbility && <>\n                <label htmlFor='abilityName' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Ability Name'}</span>\n                  <input type='text' id='abilityName' name='abilityName' className={styles.inputField}\n                    value={abilityName} onChange={e => setAbilityName(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='abilityText' className={`${styles.input} ${styles.horizontal}`}>\n                  <span className={styles.inputLabel}>{'Ability Text'}</span>\n                  <textarea id='abilityText' name='abilityText' className={`${styles.inputField} ${styles.inputTextarea}`}\n                    value={abilityText} onChange={e => setAbilityText(e.currentTarget.value)}></textarea>\n                </label>\n              </>}\n            </div>\n            <div className={styles.seperator}>\n              <label htmlFor='move1Name' className={styles.input}>\n                <span className={styles.inputLabel}>{'Move Name'}</span>\n                <input type='text' id='move1Name' name='move1Name' className={styles.inputField}\n                  value={move1Name} onChange={e => setMove1Name(e.currentTarget.value)} />\n              </label>\n              <label htmlFor='move1Damage' className={styles.input}>\n                <span className={styles.inputLabel}>{'Move Damage'}</span>\n                <input type='text' id='move1Damage' name='move1Damage' className={styles.inputField}\n                  value={move1Damage} onChange={e => setMove1Damage(e.currentTarget.value)} />\n              </label>\n              <label htmlFor='move1Text' className={`${styles.input} ${styles.horizontal}`}>\n                <span className={styles.inputLabel}>{'Move Text'}</span>\n                <textarea id='move1Text' name='move1Text' className={`${styles.inputField} ${styles.inputTextarea}`}\n                  value={move1Text} onChange={e => setMove1Text(e.currentTarget.value)}></textarea>\n              </label>\n              <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\n            </div>\n            {!hasAbility && <div className={styles.seperator}>\n              <label htmlFor='hasSecondMove' className={styles.input}>\n                <span className={styles.inputLabel}>{'Has Second Move'}</span>\n                <input type='checkbox' id='hasSecondMove' name='hasSecondMove' className={styles.inputCheckbox}\n                  checked={hasSecondMove} onChange={e => setHasSecondMove(e.currentTarget.checked)} />\n              </label>\n              {hasSecondMove && <>\n                <label htmlFor='move2Name' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Move Name'}</span>\n                  <input type='text' id='move2Name' name='move2Name' className={styles.inputField}\n                    value={move2Name} onChange={e => setMove2Name(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='move2Damage' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Move Damage'}</span>\n                  <input type='text' id='move2Damage' name='move2Damage' className={styles.inputField}\n                    value={move2Damage} onChange={e => setMove2Damage(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='move2Text' className={`${styles.input} ${styles.horizontal}`}>\n                  <span className={styles.inputLabel}>{'Move Text'}</span>\n                  <textarea id='move2Text' name='move2Text' className={`${styles.inputField} ${styles.inputTextarea}`}\n                    value={move2Text} onChange={e => setMove2Text(e.currentTarget.value)}></textarea>\n                </label>\n                <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\n              </>}\n            </div>}\n            <div className={styles.seperator}>\n              <label htmlFor='weaknessType' className={styles.input}>\n                <span className={styles.inputLabel}>{'Weakness Type'}</span>\n                <select ref={weaknessTypeRef} id='weaknessType' name='weaknessType' className={styles.inputField}\n                  onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                  {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                      if(supertype !== value.supertype) {\n                        return false;\n                      } else {\n                        return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                      }\n                  })}\n                </select>\n              </label>\n              <label htmlFor='weaknessAmount' className={styles.input}>\n                <span className={styles.inputLabel}>{'Weakness Amount'}</span>\n                <input type='number' max='99' min='0' id='weaknessAmount' name='weaknessAmount' className={styles.inputField}\n                  value={weaknessAmount} onChange={e => setWeaknessAmount(+e.currentTarget.value)} />\n              </label>\n              <label htmlFor='resistanceType' className={styles.input}>\n                <span className={styles.inputLabel}>{'Resistance Type'}</span>\n                <select ref={resistanceTypeRef} id='resistanceType' name='resistanceType' className={styles.inputField}\n                  onChange={e => setResistanceType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                  <option value={'none'}>{'None'}</option>\n                  {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                    if(supertype !== value.supertype) {\n                      return false;\n                    } else {\n                      return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                    }\n                  })}\n                </select>\n              </label>\n              {resistanceType &&\n                <label htmlFor='resistanceAmount' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Weakness Amount'}</span>\n                  <input type='number' max='99' min='0' id='resistanceAmount' name='resistanceAmount' className={styles.inputField}\n                    value={resistanceAmount} onChange={e => setResistanceAmount(+e.currentTarget.value)} />\n                </label>\n              }\n              <label htmlFor='retreatCost' className={styles.input}>\n                <span className={styles.inputLabel}>{'Retreat Cost'}</span>\n                <input type='number' max='5' min='0' id='retreatCost' name='retreatCost' className={styles.inputField}\n                  value={retreatCost} onChange={e => setRetreatCost(+e.currentTarget.value)} />\n              </label>\n            </div>\n          </>}\n          {!subtype?.noDescription && <div className={styles.seperator}>\n            <label htmlFor='description' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Description'}</span>\n              <textarea id='description' name='description' className={`${styles.inputField} ${styles.inputTextarea}`}\n                value={description} onChange={e => setDescription(e.currentTarget.value)}></textarea>\n            </label>\n          </div>}\n          <div className={styles.seperator}>\n            {supertype !== 'Energy' &&\n              <label htmlFor='illustrator' className={styles.input}>\n                <span className={styles.inputLabel}>{'Illustrator'}</span>\n                <input type='text' id='illustrator' name='illustrator' className={styles.inputField}\n                  value={illustrator} onChange={e => setIllustrator(e.currentTarget.value)} />\n              </label>\n            }\n            <label htmlFor='cardNumber' className={styles.input}>\n              <span className={styles.inputLabel}>{'Card Number'}</span>\n              <input type='string' id='cardNumber' name='cardNumber' className={styles.inputField}\n                value={cardNumber} onChange={e => setCardNumber(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='totalInSet' className={styles.input}>\n              <span className={styles.inputLabel}>{'Total In Set'}</span>\n              <input type='string' id='totalInSet' name='totalInSet' className={styles.inputField}\n                value={totalInSet} onChange={e => setTotalInSet(e.currentTarget.value)} />\n            </label>\n          </div>\n        </>}\n        <div className={styles.seperator}>\n          <label htmlFor='backgroundImage' className={`${styles.input} ${styles.horizontal}`}>\n            <span className={styles.inputLabel}>{'Background Image'}</span>\n            <input type='file' accept='image/*' id='backgroundImage' name='backgroundImage' className={styles.inputField} onChange={e => {\n              if(e.target.files && e.target.files[0]) {\n                setBackgroundImage(window.URL.createObjectURL(e.target.files[0]));\n              } else {\n                setBackgroundImage('');\n              }\n            }} />\n          </label>\n          <label htmlFor='imageLayer1' className={`${styles.input} ${styles.horizontal}`}>\n            <span className={styles.inputLabel}>{'Card Image'}</span>\n            <input type='file' accept='image/*' id='imageLayer1' name='imageLayer1' className={styles.inputField} onChange={e => {\n              if(e.target.files && e.target.files[0]) {\n                setImageLayer1(window.URL.createObjectURL(e.target.files[0]));\n              } else {\n                setImageLayer1('');\n              }\n            }} />\n          </label>\n          <label htmlFor='imageLayer2' className={`${styles.input} ${styles.horizontal}`}>\n            <span className={styles.inputLabel}>{'Top Image'}</span>\n            <input type='file' accept='image/*' id='imageLayer2' name='imageLayer2' className={styles.inputField} onChange={e => {\n              if(e.target.files && e.target.files[0]) {\n                setImageLayer2(window.URL.createObjectURL(e.target.files[0]));\n              } else {\n                setImageLayer2('');\n              }\n            }} />\n          </label>\n          {supertype === 'Energy' &&\n            <label htmlFor='typeImage' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Type Image'}</span>\n              <input type='file' accept='image/*' id='typeImage' name='typeImage' className={styles.inputField} onChange={e => {\n                if(e.target.files && e.target.files[0]) {\n                  setTypeImage(window.URL.createObjectURL(e.target.files[0]));\n                } else {\n                  setTypeImage('');\n                }\n              }} />\n            </label>\n          }\n        </div>\n        <button className={styles.button} onClick={downloadCard}>Download as image</button>\n        <button className={styles.button} onClick={exportCard}>Export to clipboard</button>\n      </div>\n      <CardDisplay card={makeCard()} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport CardCreatorPage from 'pages/CardCreator';\nimport styles from './App.module.scss';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className={styles.wrapper}>\n        <header className={styles.header}>\n          <div className={styles.headerCircle} />\n        </header>\n        <div className={styles.content}>\n          <CardCreatorPage />\n        </div>\n        <footer className={styles.footer} />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}