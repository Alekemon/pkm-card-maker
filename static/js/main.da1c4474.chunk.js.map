{"version":3,"sources":["pages/CardCreator/CardCreator.module.scss","pages/CardCreator/components/EnergyPicker/EnergyPicker.module.scss","App.module.scss","components/CardDisplay/CardDisplay.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/index.tsx","pages/CardCreator/components/EnergyPicker/index.tsx","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","getCardOptions","a","fetch","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","imagePath","card","className","styles","id","backgroundImage","src","alt","name","formatText","subname","descriptionWrapper","description","illustrator","set","number","shortName","setIcon","rotation","setNumber","cardNumber","totalInSet","rarityIcon","hasWhiteText","imageLayer1","image","imageLayer2","EnergyCard","descriptionWrapperEnergy","typeImage","typeImageSpecial","PokemonCard","useEffect","moves","highestCost","forEach","move","totalAmount","energyCost","amount","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","Math","max","whiteText","namePokemon","rarity","hasNameOutline","nameOutline","subtype","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hasVStyle","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","text","map","i","key","moveMultiple","moveV","moveNameWrapper","moveCost","moveImages","moveType","returnValue","push","moveEnergy","formatMoveCost","moveDamage","damage","moveText","typeBar","hasBlackTopText","hasWhiteTopText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","hasDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","CardDisplay","useState","setImagePath","supertype","baseSet","variation","getImage","options","folder","undefined","filePath","Object","values","param","Trainer","Energy","Pokemon","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","EnergyPicker","label","onUpdate","moveTypes","setMoveTypes","newMoveTypes","wrapper","button","onClick","currentType","filter","title","connect","cardOptionsState","dispatch","bindActionCreators","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","typeRef","useRef","subtypeRef","variationRef","rarityRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setcardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","hasSubname","current","selectedIndex","value","newType","newSubtype","newVariation","newRarity","htmlFor","input","inputLabel","inputField","onChange","currentTarget","ref","disabled","hasSubtypes","subtypeOptional","includes","hasVariations","includesType","includesSubtype","includesVariation","min","accept","target","files","window","URL","createObjectURL","horizontal","inputCheckbox","checked","inputTextarea","getElementById","htmlToImage","toPng","then","dataUrl","download","catch","App","store","header","headerCircle","content","CardCreator","footer","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.da1c4474.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"input\":\"CardCreator_input__2bKy_\",\"horizontal\":\"CardCreator_horizontal__2ORLy\",\"inputField\":\"CardCreator_inputField__1c5d_\",\"inputLabel\":\"CardCreator_inputLabel__32xWl\",\"inputTextarea\":\"CardCreator_inputTextarea__3iCYP\",\"button\":\"CardCreator_button__2OfjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__2_WHG\",\"type\":\"EnergyPicker_type__2ib5D\",\"image\":\"EnergyPicker_image__21nPN\",\"button\":\"EnergyPicker_button__wxjLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"28.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"image\":\"CardDisplay_image__1Vf1q\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","export const getCardOptions = async () => {\r\n  try {\r\n    const response = await fetch('/data/cardOptions.json');\r\n    return response.json();\r\n  } catch(e) {\r\n    console.error(e);\r\n  }\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\nimport { Card } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst TrainerCard: React.FC<Props> = ({ imagePath, card }) => {\n  return (\n    <div className={styles.card} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={styles.name}>{formatText(card.name)}</span>\n      <span className={styles.subname}>{formatText(card.subname)}</span>\n      <div className={styles.descriptionWrapper}>\n        <p className={styles.description}>{formatText(card.description)}</p>\n      </div>\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`} alt={card.set.name} className={styles.setIcon} />}\n      <img src={`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`} alt={card.rotation?.name} className={styles.rotation} />\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default TrainerCard;\n","import React from 'react';\nimport { Card } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst EnergyCard: React.FC<Props> = ({ imagePath, card }) => {\n  return (\n    <div className={styles.card} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      {card.type?.shortName === 'Special' && <>\n        <span className={styles.name}>{formatText(card.name)}</span>\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n        {card.set && <img src={`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`} alt={card.set.name} className={styles.setIcon} />}\n        <img src={`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`} alt={card.rotation?.name} className={styles.rotation} />\n        <span className={styles.setNumber}>\n          {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n          {card.rarityIcon &&\n            <img src={`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`}\n              alt={card.rarityIcon.name} className={styles.rarityIcon} />\n          }\n        </span>\n      </>}\n      {card.typeImage && <img src={card.typeImage}\n        className={`${styles.typeImage} ${card.type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />}\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default EnergyCard;\n","import React, { useEffect } from 'react';\nimport { Card, Move } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst PokemonCard: React.FC<Props> = ({ imagePath, card }) => {\n  useEffect(() => {\n    if(card.moves) {\n      let highestCost = 0;\n      card.moves.forEach((move) => {\n        let totalAmount: number = 0;\n        move.energyCost.forEach((energyCost) => totalAmount += energyCost.amount);\n        if(totalAmount > highestCost) {\n          highestCost = totalAmount;\n        }\n      });\n\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\n      moveNames.forEach((moveName) => {\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\n      });\n    }\n  }, [card.moves]);\n\n  const formatMoveCost = (move: Move) => {\n    let totalAmount: number = 0;\n    const moveImages = move.energyCost.map((moveType) => {\n      const returnValue: JSX.Element[] = [];\n      for(let i = 0; i < moveType.amount; i++) {\n        totalAmount++;\n        returnValue.push(<img src={`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`} className={styles.moveEnergy} alt='' key={i} />);\n      }\n      return returnValue;\n    });\n\n    if(totalAmount === 0) {\n      return <img src='/assets/icons_symbols/types/Empty_border.png' className={styles.moveEnergy} alt='' />;\n    } else {\n      return moveImages;\n    }\n  }\n\n  return (\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline ? styles.nameOutline : ''}`}>\n        {formatText(card.name)}\n        {card.subtype?.hasVSymbol && <img src='/assets/icons_symbols/other/v_icon.png' className={styles.nameIcon} alt='' />}\n        {card.subtype?.hasVMaxSymbol && <img src='/assets/icons_symbols/other/vmax_icon.png' className={styles.nameIcon} alt='' />}\n      </span>\n      <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\n        <span className={styles.hitpointsHP}>HP</span>\n        <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\n      </div>\n      {(card.subtype?.hasPrevolve && card.prevolveName) &&\n        <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\n      }\n      {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\n        <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\n      }\n      <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\n        {card.ability &&\n          <div className={styles.ability}>\n            <div className={styles.abilityNameWrapper}>\n              {card.subtype?.hasVStyle ?\n                <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src='/assets/icons_symbols/other/ability_v.png' alt='' />\n                :\n                <img className={styles.abilityIcon} src='/assets/icons_symbols/other/ability.png' alt='' />\n              }\n              <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\n            </div>\n            <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\n          </div>\n        }\n        {card.moves && (card.moves.map((move, i) =>\n          <div key={i}\n            className={`${i === 0 ? card.moves && card.moves.length > 1 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\n            {move.name &&\n              <div className={styles.moveNameWrapper}>\n                <div className={styles.moveCost}>\n                  {formatMoveCost(move)}\n                </div>\n                <span className={`${styles.moveName} moveName`}>{move.name}</span>\n                <span className={styles.moveDamage}>{move.damage}</span>\n              </div>\n            }\n            <p className={styles.moveText}>{formatText(move.text)}</p>\n          </div>\n        ))}\n      </div>\n      <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\n        {card.weaknessType &&\n          <span className={styles.weakness}>\n            <img className={styles.weaknessIcon} src={`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`} alt='' />\n            <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\n          </span>\n        }\n        {card.resistanceType &&\n          <span className={styles.resistance}>\n            <img className={styles.resistanceIcon} src={`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`} alt='' />\n            <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\n          </span>\n        }\n        <div className={styles.retreatCost}>\n          {Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\n            i < 5 && <img key={i} className={styles.retreatCostIcon} src='/assets/icons_symbols/types/Colorless.png' alt='' />\n          )}\n        </div>\n      </div>\n      {card.subtype?.hasDescription &&\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n      }\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`} alt={card.set.name} className={styles.setIcon} />}\n      <img src={`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`} alt={card.rotation?.name} className={styles.rotation} />\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText || card.subtype?.hasVStyle? '_white' : ''}.png`}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {(card.subtype?.hasPrevolve && card.prevolveImage) &&\n        <div className={styles.prevolveImageWrapper}>\n          <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\n        </div>\n      }\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default PokemonCard;\n","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'interfaces';\r\nimport TrainerCard from './Trainer';\r\nimport styles from './CardDisplay.module.scss';\r\nimport EnergyCard from './Energy';\r\nimport PokemonCard from './Pokemon';\r\n\r\ninterface ImagePathOptions {\r\n  baseSet: string,\r\n  type: string,\r\n  subtype?: string,\r\n  variation?: string,\r\n  rarity?: string,\r\n  supertype?: string,\r\n}\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\nconst CardDisplay: React.FC<Props> = ({ card }) => {\r\n  const [imagePath, setImagePath] = useState<string>();\r\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\r\n\r\n  useEffect(() => {\r\n    const getImage = (options: ImagePathOptions, folder: string | undefined = undefined): string => {\r\n      // Format the options according to the formatting defined in the README\r\n      let filePath: string = `/assets/${supertype}/`;\r\n      if(folder) {\r\n        filePath += `${folder}/`;\r\n      }\r\n      Object.values(options).forEach((param: string, i: number) => {\r\n        if(param !== undefined && param !== 'default') {\r\n          if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\r\n            (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\r\n            (options.rarity === 'Promo' && param === 'Basic')) {\r\n            return;\r\n          }\r\n          if(i !== 0) {\r\n            filePath += '_';\r\n          }\r\n          filePath += param;\r\n          if(param === 'Rainbow') {\r\n            if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\r\n              filePath += `_${options.variation}`;\r\n            }\r\n          }\r\n          if(param === 'V' && !options.rarity) {\r\n            filePath += '_Basic';\r\n          }\r\n        }\r\n      });\r\n      return `${filePath}.png`;\r\n    }\r\n\r\n    if(supertype && type && baseSet) {\r\n      let imagePath: string;\r\n      switch(supertype) {\r\n        case 'Pokemon':\r\n          imagePath = getImage({ baseSet: baseSet.shortName, subtype: subtype?.shortName, variation: variation?.shortName,\r\n            rarity: rarity?.shortName, type: type.shortName }, type.shortName);\r\n          break;\r\n        case 'Energy':\r\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName });\r\n          break;\r\n        case 'Trainer':\r\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName, subtype: subtype?.shortName });\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      setImagePath(imagePath);\r\n    }\r\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\r\n\r\n  if(supertype === 'Trainer') {\r\n    return <TrainerCard imagePath={imagePath} card={card} />\r\n  } else if(supertype === 'Energy') {\r\n    return <EnergyCard imagePath={imagePath} card={card} />\r\n  } else {\r\n    return <PokemonCard imagePath={imagePath} card={card} />\r\n  }\r\n}\r\n\r\nexport default CardDisplay;\r\n\r\nexport const formatText = (text: string | undefined) => {\r\n  if(text) {\r\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\r\n    if(chars) {\r\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\r\n      const textNoChars = text.split(/\\[.*?\\]/g);\r\n      const returnText: (JSX.Element | string)[] = [];\r\n      textNoChars.forEach((textElm, i) => {\r\n        returnText.push(textElm);\r\n        if(charsArr.length > i) {\r\n          if(charsArr[i].length > 1) {\r\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\r\n          } else {\r\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\r\n          }\r\n        }\r\n      });\r\n      return returnText;\r\n    } else {\r\n      return text;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './EnergyPicker.module.scss';\r\nimport { MoveType, Type } from 'interfaces';\r\n\r\ninterface Props {\r\n  label: String,\r\n  types: Type[],\r\n  onUpdate: (moveTypes: MoveType[]) => void,\r\n}\r\n\r\nconst EnergyPicker: React.FC<Props> = ({ label, types, onUpdate }) => {\r\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const newMoveTypes: MoveType[] = [];\r\n    types.forEach((type) => {\r\n      if(type.supertype === 'Pokemon') {\r\n        newMoveTypes.push({\r\n          type,\r\n          amount: 0,\r\n        });\r\n      }\r\n    });\r\n    setMoveTypes(newMoveTypes);\r\n  }, [types]);\r\n\r\n  useEffect(() => {\r\n    onUpdate(moveTypes);\r\n  }, [moveTypes]);\r\n\r\n  return (\r\n    <div>\r\n      <span>{label}</span>\r\n      <div className={styles.wrapper}>\r\n        {moveTypes.map((moveType, i) =>\r\n          <div className={styles.type} key={i}>\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveTypes: MoveType[] = moveTypes;\r\n              const currentType: MoveType = newMoveTypes.filter((a) => a.type === moveType.type)[0];\r\n              currentType.amount = currentType.amount + 1;\r\n              newMoveTypes = [...newMoveTypes];\r\n              setMoveTypes(newMoveTypes);\r\n            }}>🔺</span>\r\n            <img src={`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveTypes: MoveType[] = moveTypes;\r\n              const currentType: MoveType = newMoveTypes.filter((a) => a.type === moveType.type)[0];\r\n              if(currentType.amount - 1 >= 0) {\r\n                currentType.amount = currentType.amount - 1;\r\n              }\r\n              newMoveTypes = [...newMoveTypes];\r\n              setMoveTypes(newMoveTypes);\r\n            }}>🔻</span>\r\n            <span>{moveType.amount}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnergyPicker;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { CardOptionsState } from 'reducers/cardOptions';\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType } from 'interfaces';\nimport { bindActionCreators } from 'redux';\nimport { requestCardOptions } from 'actions';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport styles from './CardCreator.module.scss';\nimport CardDisplay from 'components/CardDisplay';\nimport EnergyPicker from './components/EnergyPicker';\n\ninterface Props {\n  cardOptionsState: CardOptionsState,\n  requestCardOptions: () => Object,\n}\n\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, requestCardOptions }) => {\n  // Selectors\n  const [supertype, setSupertype] = useState<string>('Pokemon');\n  const [type, setType] = useState<Type>();\n  const [baseSet, setBaseSet] = useState<BaseSet>();\n  const [set, setSet] = useState<Set>();\n  const [rotation, setRotation] = useState<Rotation>();\n  const [variation, setVariation] = useState<Variation>();\n  const [subtype, setSubtype] = useState<Subtype>();\n  const [rarity, setRarity] = useState<Rarity>();\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\n  const [weaknessType, setWeaknessType] = useState<Type>();\n  const [resistanceType, setResistanceType] = useState<Type>();\n  const typeRef = useRef<HTMLSelectElement>(null);\n  const subtypeRef = useRef<HTMLSelectElement>(null);\n  const variationRef = useRef<HTMLSelectElement>(null);\n  const rarityRef = useRef<HTMLSelectElement>(null);\n  // Inputs\n  const [name, setName] = useState<string>('');\n  const [prevolveName, setPrevolveName] = useState<string>('');\n  const [hitpoints, setHitpoints] = useState<number>(100);\n  const [subname, setSubname] = useState<string>('');\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\n  const [retreatCost, setRetreatCost] = useState<number>(1);\n  const [description, setDescription] = useState<string>('');\n  const [illustrator, setIllustrator] = useState<string>('');\n  const [cardNumber, setcardNumber] = useState<string>('');\n  const [totalInSet, setTotalInSet] = useState<string>('');\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\n  const [imageLayer1, setImageLayer1] = useState<string>('');\n  const [imageLayer2, setImageLayer2] = useState<string>('');\n  const [typeImage, setTypeImage] = useState<string>('');\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\n  // Ability/Moves\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\n  const [abilityName, setAbilityName] = useState<string>('');\n  const [abilityText, setAbilityText] = useState<string>('');\n  const [move1Name, setMove1Name] = useState<string>('');\n  const [move1Damage, setMove1Damage] = useState<string>('');\n  const [move1Text, setMove1Text] = useState<string>('');\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\n  const [move2Name, setMove2Name] = useState<string>('');\n  const [move2Text, setMove2Text] = useState<string>('');\n  const [move2Damage, setMove2Damage] = useState<string>('');\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    requestCardOptions();\n  }, [requestCardOptions]);\n\n  useEffect(() => {\n    setType(cardOptionsState.cardOptions.types[0]);\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\n    setSet(cardOptionsState.cardOptions.sets[0]);\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\n  }, [cardOptionsState]);\n\n  useEffect(() => {\n    if(subname && !type?.hasSubname) {\n      setSubname('');\n    }\n  }, [type, subname]);\n\n  useEffect(() => {\n    if(typeRef.current) {\n      const { selectedIndex, options } = typeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newType = cardOptionsState.cardOptions.types.filter((a: Type) => a.id === +value)[0];\n      if(newType && newType !== type) {\n        setType(newType);\n      }\n    } else {\n      setType(undefined);\n    }\n    if(subtypeRef.current) {\n      const { selectedIndex, options } = subtypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSubtype = cardOptionsState.cardOptions.subtypes.filter((a: Subtype) => a.id === +value)[0];\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\n        setSubtype(newSubtype);\n      }\n    } else {\n      setSubtype(undefined);\n    }\n    if(variationRef.current) {\n      const { selectedIndex, options } = variationRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newVariation = cardOptionsState.cardOptions.variations.filter((a: Variation) => a.id === +value)[0];\n      if(newVariation && newVariation !== variation) {\n        setVariation(newVariation);\n      }\n    } else {\n      setVariation(undefined);\n    }\n    if(rarityRef.current) {\n      const { selectedIndex, options } = rarityRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newRarity = cardOptionsState.cardOptions.rarities.filter((a: Rarity) => a.id === +value)[0];\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\n        setRarity(newRarity);\n      }\n    } else {\n      setRarity(undefined);\n    }\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\n\n  const downloadCard = () => {\n    const card = document.getElementById('card');\n    if(card) {\n      htmlToImage.toPng(card)\n        .then((dataUrl) => {\n          download(dataUrl, `${name || 'card'}.png`);\n        })\n        .catch(console.error);\n    }\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div>\n        <label htmlFor='baseSet' className={styles.input}>\n          <span className={styles.inputLabel}>{'Base Set'}</span>\n          <select id='baseSet' name='baseSet' className={styles.inputField}\n            onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.filter((a: BaseSet) => a.id === +e.currentTarget.value)[0])}>\n            {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\n              <option value={value.id} key={i}>{value.name}</option>\n            )}\n          </select>\n        </label>\n        <label htmlFor='supertype' className={styles.input}>\n          <span className={styles.inputLabel}>{'Supertype'}</span>\n          <select id='supertype' name='supertype' className={styles.inputField} onChange={e => setSupertype(e.currentTarget.value)}>\n            <option value={'Pokemon'}>{'Pokémon'}</option>\n            <option value={'Trainer'}>{'Trainer'}</option>\n            <option value={'Energy'}>{'Energy'}</option>\n          </select>\n        </label>\n        <label htmlFor='type' className={styles.input}>\n          <span className={styles.inputLabel}>{'Type'}</span>\n          <select ref={typeRef} id='type' name='type' className={styles.inputField}\n            onChange={e => setType(cardOptionsState.cardOptions.types.filter((a: Type) => a.id === +e.currentTarget.value)[0])}>\n            {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n              if(supertype !== value.supertype) {\n                return false;\n              } else {\n                return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n              }\n            })}\n          </select>\n        </label>\n        {type?.hasSubtypes && supertype !== 'Energy' &&\n          <label htmlFor='subtype' className={styles.input}>\n            <span className={styles.inputLabel}>{'Subtype'}</span>\n            <select ref={subtypeRef} id='subtype' name='subtype' className={styles.inputField}\n              onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.filter((a: Subtype) => a.id === +e.currentTarget.value)[0])}>\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\n              {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\n                if(!value.types.includes(type?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </select>\n          </label>\n        }\n        {subtype?.hasVariations && supertype !== 'Energy' && supertype !== 'Trainer' &&\n          <label htmlFor='variation' className={styles.input}>\n            <span className={styles.inputLabel}>{'Variation'}</span>\n            <select ref={variationRef} id='variation' name='variation' className={styles.inputField}\n              onChange={e => setVariation(cardOptionsState.cardOptions.variations.filter((a: Variation) => a.id === +e.currentTarget.value)[0])}>\n              {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\n                if(!value.subtypes.includes(subtype?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </select>\n          </label>\n        }\n        {supertype !== 'Energy' && supertype !== 'Trainer' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) &&\n          <label htmlFor='rarity' className={styles.input}>\n            <span className={styles.inputLabel}>{'Rarity'}</span>\n            <select ref={rarityRef} id='rarity' name='rarity' className={styles.inputField}\n              onChange={e => setRarity(cardOptionsState.cardOptions.rarities.filter((a: Rarity) => a.id === +e.currentTarget.value)[0])}>\n              <option value={'default'}>{'Default'}</option>\n              {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\n                  || (includesSubtype && (includesVariation || !variation))\n                  || includesVariation) {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                } else {\n                  return false;\n                }\n              })}\n            </select>\n          </label>\n        }\n        {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n          <label htmlFor='set' className={styles.input}>\n            <span className={styles.inputLabel}>{'Set Icon'}</span>\n            <select id='set' name='set' className={styles.inputField}\n              onChange={e => setSet(cardOptionsState.cardOptions.sets.filter((a: Set) => a.id === +e.currentTarget.value)[0])}>\n              {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='rotation' className={styles.input}>\n            <span className={styles.inputLabel}>{'Rotation'}</span>\n            <select id='rotation' name='rotation' className={styles.inputField}\n              onChange={e => setRotation(cardOptionsState.cardOptions.rotations.filter((a: Rotation) => a.id === +e.currentTarget.value)[0])}>\n              {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='rarityIcon' className={styles.input}>\n            <span className={styles.inputLabel}>{'Rarity Icon'}</span>\n            <select id='rarityIcon' name='rarityIcon' className={styles.inputField}\n              onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.filter((a: RarityIcon) => a.id === +e.currentTarget.value)[0])}>\n              <option value={'none'}>{'None'}</option>\n              {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='name' className={styles.input}>\n            <span className={styles.inputLabel}>{'Name'}</span>\n            <input type='text' id='name' name='name' className={styles.inputField}\n              value={name} onChange={e => setName(e.currentTarget.value)} />\n          </label>\n          {supertype === 'Pokemon' &&\n            <label htmlFor='hitpoints' className={styles.input}>\n              <span className={styles.inputLabel}>{'Hitpoints'}</span>\n              <input type='number' max='999' min='0' id='hitpoints' name='hitpoints' className={styles.inputField}\n                value={hitpoints} onChange={e => setHitpoints(+e.currentTarget.value)} />\n            </label>\n          }\n          {subtype?.hasPrevolve && <>\n            <label htmlFor='prevolveName' className={styles.input}>\n              <span className={styles.inputLabel}>{'Prevolve Name'}</span>\n              <input type='text' id='prevolveName' name='prevolveName' className={styles.inputField}\n                value={prevolveName} onChange={e => setPrevolveName(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='prevolveImage' className={styles.input}>\n              <span className={styles.inputLabel}>{'Prevolve Image'}</span>\n              <input type='file' accept='image/*' id='prevolveImage' name='prevolveImage' className={styles.inputField} onChange={e => {\n                if(e.target.files && e.target.files[0]) {\n                  setPrevolveImage(window.URL.createObjectURL(e.target.files[0]));\n                } else {\n                  setPrevolveImage('');\n                }\n              }} />\n          </label>\n          </>}\n          {subtype?.hasPokedexEntry &&\n            <label htmlFor='pokedexEntry' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Pokédex Entry'}</span>\n              <input type='text' id='pokedexEntry' name='pokedexEntry' className={styles.inputField}\n                value={pokedexEntry} onChange={e => setPokedexEntry(e.currentTarget.value)} />\n            </label>\n          }\n          {type?.hasSubname &&\n            <label htmlFor='subname' className={styles.input}>\n              <span className={styles.inputLabel}>{'Subname'}</span>\n              <input type='text' id='subname' name='subname' className={styles.inputField}\n                value={subname} onChange={e => setSubname(e.currentTarget.value)} />\n            </label>\n          }\n          {supertype === 'Pokemon' && <>\n            <label htmlFor='hasAbility' className={styles.input}>\n              <span className={styles.inputLabel}>{'Has Ability'}</span>\n              <input type='checkbox' id='hasAbility' name='hasAbility' className={styles.inputCheckbox}\n                checked={hasAbility} onChange={e => setHasAbility(e.currentTarget.checked)} />\n            </label>\n            {hasAbility && <>\n              <label htmlFor='abilityName' className={styles.input}>\n                <span className={styles.inputLabel}>{'Ability Name'}</span>\n                <input type='text' id='abilityName' name='abilityName' className={styles.inputField}\n                  value={abilityName} onChange={e => setAbilityName(e.currentTarget.value)} />\n              </label>\n              <label htmlFor='abilityText' className={`${styles.input} ${styles.horizontal}`}>\n                <span className={styles.inputLabel}>{'Ability Text'}</span>\n                <textarea id='abilityText' name='abilityText' className={`${styles.inputField} ${styles.inputTextarea}`}\n                  value={abilityText} onChange={e => setAbilityText(e.currentTarget.value)}></textarea>\n              </label>\n            </>}\n            <label htmlFor='move1Name' className={styles.input}>\n              <span className={styles.inputLabel}>{'Move Name'}</span>\n              <input type='text' id='move1Name' name='move1Name' className={styles.inputField}\n                value={move1Name} onChange={e => setMove1Name(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='move1Damage' className={styles.input}>\n              <span className={styles.inputLabel}>{'Move Damage'}</span>\n              <input type='text' id='move1Damage' name='move1Damage' className={styles.inputField}\n                value={move1Damage} onChange={e => setMove1Damage(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='move1Text' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Move Text'}</span>\n              <textarea id='move1Text' name='move1Text' className={`${styles.inputField} ${styles.inputTextarea}`}\n                value={move1Text} onChange={e => setMove1Text(e.currentTarget.value)}></textarea>\n            </label>\n            <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} onUpdate={setMove1Cost} />\n            {!hasAbility && <>\n              <label htmlFor='hasSecondMove' className={styles.input}>\n                <span className={styles.inputLabel}>{'Has Second Move'}</span>\n                <input type='checkbox' id='hasSecondMove' name='hasSecondMove' className={styles.inputCheckbox}\n                  checked={hasSecondMove} onChange={e => setHasSecondMove(e.currentTarget.checked)} />\n              </label>\n              {hasSecondMove && <>\n                <label htmlFor='move2Name' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Move Name'}</span>\n                  <input type='text' id='move2Name' name='move2Name' className={styles.inputField}\n                    value={move2Name} onChange={e => setMove2Name(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='move2Damage' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Move Damage'}</span>\n                  <input type='text' id='move2Damage' name='move2Damage' className={styles.inputField}\n                    value={move2Damage} onChange={e => setMove2Damage(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='move2Text' className={`${styles.input} ${styles.horizontal}`}>\n                  <span className={styles.inputLabel}>{'Move Text'}</span>\n                  <textarea id='move2Text' name='move2Text' className={`${styles.inputField} ${styles.inputTextarea}`}\n                    value={move2Text} onChange={e => setMove2Text(e.currentTarget.value)}></textarea>\n                </label>\n                <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} onUpdate={setMove2Cost} />\n              </>}\n            </>}\n            <label htmlFor='weaknessType' className={styles.input}>\n              <span className={styles.inputLabel}>{'Weakness Type'}</span>\n              <select id='weaknessType' name='weaknessType' className={styles.inputField}\n                onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.filter((a: Type) => a.id === +e.currentTarget.value)[0])}>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                    if(supertype !== value.supertype) {\n                      return false;\n                    } else {\n                      return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                    }\n                })}\n              </select>\n            </label>\n            <label htmlFor='weaknessAmount' className={styles.input}>\n              <span className={styles.inputLabel}>{'Weakness Amount'}</span>\n              <input type='number' max='99' min='0' id='weaknessAmount' name='weaknessAmount' className={styles.inputField}\n                value={weaknessAmount} onChange={e => setWeaknessAmount(+e.currentTarget.value)} />\n            </label>\n            <label htmlFor='resistanceType' className={styles.input}>\n              <span className={styles.inputLabel}>{'Resistance Type'}</span>\n              <select id='resistanceType' name='resistanceType' className={styles.inputField}\n                onChange={e => setResistanceType(cardOptionsState.cardOptions.types.filter((a: Type) => a.id === +e.currentTarget.value)[0])}>\n                <option value={'none'}>{'None'}</option>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                    if(supertype !== value.supertype) {\n                      return false;\n                    } else {\n                      return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                    }\n                })}\n              </select>\n            </label>\n            {resistanceType &&\n              <label htmlFor='resistanceAmount' className={styles.input}>\n                <span className={styles.inputLabel}>{'Weakness Amount'}</span>\n                <input type='number' max='99' min='0' id='resistanceAmount' name='resistanceAmount' className={styles.inputField}\n                  value={resistanceAmount} onChange={e => setResistanceAmount(+e.currentTarget.value)} />\n              </label>\n            }\n            <label htmlFor='retreatCost' className={styles.input}>\n              <span className={styles.inputLabel}>{'Retreat Cost'}</span>\n              <input type='number' max='5' min='0' id='retreatCost' name='retreatCost' className={styles.inputField}\n                value={retreatCost} onChange={e => setRetreatCost(+e.currentTarget.value)} />\n            </label>\n          </>}\n          <label htmlFor='description' className={`${styles.input} ${styles.horizontal}`}>\n            <span className={styles.inputLabel}>{'Description'}</span>\n            <textarea id='description' name='description' className={`${styles.inputField} ${styles.inputTextarea}`}\n              value={description} onChange={e => setDescription(e.currentTarget.value)}></textarea>\n          </label>\n          {supertype !== 'Energy' &&\n            <label htmlFor='illustrator' className={styles.input}>\n              <span className={styles.inputLabel}>{'Illustrator'}</span>\n              <input type='text' id='illustrator' name='illustrator' className={styles.inputField}\n                value={illustrator} onChange={e => setIllustrator(e.currentTarget.value)} />\n            </label>\n          }\n          <label htmlFor='cardNumber' className={styles.input}>\n            <span className={styles.inputLabel}>{'Card Number'}</span>\n            <input type='string' id='cardNumber' name='cardNumber' className={styles.inputField}\n              value={cardNumber} onChange={e => setcardNumber(e.currentTarget.value)} />\n          </label>\n          <label htmlFor='totalInSet' className={styles.input}>\n            <span className={styles.inputLabel}>{'Total In Set'}</span>\n            <input type='string' id='totalInSet' name='totalInSet' className={styles.inputField}\n              value={totalInSet} onChange={e => setTotalInSet(e.currentTarget.value)} />\n          </label>\n        </>}\n        <label htmlFor='backgroundImage' className={styles.input}>\n          <span className={styles.inputLabel}>{'Background Image'}</span>\n          <input type='file' accept='image/*' id='backgroundImage' name='backgroundImage' className={styles.inputField} onChange={e => {\n            if(e.target.files && e.target.files[0]) {\n              setBackgroundImage(window.URL.createObjectURL(e.target.files[0]));\n            } else {\n              setBackgroundImage('');\n            }\n          }} />\n        </label>\n        <label htmlFor='imageLayer1' className={styles.input}>\n          <span className={styles.inputLabel}>{'Card Image'}</span>\n          <input type='file' accept='image/*' id='imageLayer1' name='imageLayer1' className={styles.inputField} onChange={e => {\n            if(e.target.files && e.target.files[0]) {\n              setImageLayer1(window.URL.createObjectURL(e.target.files[0]));\n            } else {\n              setImageLayer1('');\n            }\n          }} />\n        </label>\n        <label htmlFor='imageLayer2' className={styles.input}>\n          <span className={styles.inputLabel}>{'Top Image'}</span>\n          <input type='file' accept='image/*' id='imageLayer2' name='imageLayer2' className={styles.inputField} onChange={e => {\n            if(e.target.files && e.target.files[0]) {\n              setImageLayer2(window.URL.createObjectURL(e.target.files[0]));\n            } else {\n              setImageLayer2('');\n            }\n          }} />\n        </label>\n        {supertype === 'Energy' &&\n          <label htmlFor='typeImage' className={styles.input}>\n            <span className={styles.inputLabel}>{'Type Image'}</span>\n            <input type='file' accept='image/*' id='typeImage' name='typeImage' className={styles.inputField} onChange={e => {\n              if(e.target.files && e.target.files[0]) {\n                setTypeImage(window.URL.createObjectURL(e.target.files[0]));\n              } else {\n                setTypeImage('');\n              }\n            }} />\n          </label>\n        }\n        <button className={styles.button} onClick={downloadCard}>Download as image</button>\n      </div>\n      <CardDisplay card={{\n        baseSet,\n        supertype,\n        type,\n        set,\n        variation,\n        subtype,\n        rarity,\n        name,\n        prevolveName,\n        prevolveImage,\n        hitpoints,\n        subname,\n        typeImage,\n        pokedexEntry,\n        ability: hasAbility ? {\n          name: abilityName,\n          text: abilityText,\n        } : undefined,\n        moves: [\n          {\n            name: move1Name,\n            text: move1Text,\n            damage: move1Damage,\n            energyCost: move1Cost,\n          },\n          ...(!hasAbility && hasSecondMove ? [{\n            name: move2Name,\n            text: move2Text,\n            damage: move2Damage,\n            energyCost: move2Cost,\n          }] : []),\n        ],\n        weaknessType,\n        weaknessAmount,\n        resistanceType,\n        resistanceAmount,\n        retreatCost,\n        illustrator,\n        cardNumber,\n        totalInSet,\n        rotation,\n        rarityIcon,\n        description,\n        backgroundImage,\n        imageLayer1,\n        imageLayer2,\n      }} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport CardCreatorPage from 'pages/CardCreator';\nimport styles from './App.module.scss';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className={styles.wrapper}>\n        <header className={styles.header}>\n          <div className={styles.headerCircle} />\n        </header>\n        <div className={styles.content}>\n          <CardCreatorPage />\n        </div>\n        <footer className={styles.footer} />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}