{"version":3,"sources":["components/FormElements/EnergyPicker/EnergyPicker.module.scss","App.module.scss","components/CardDisplay/CardDisplay.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","services.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/index.tsx","components/FormElements/InputLabel/index.tsx","components/FormElements/Checkbox/index.tsx","components/FormElements/EnergyPicker/index.tsx","components/FormElements/ImageInput/index.tsx","components/FormElements/Input/index.tsx","components/FormElements/Select/index.tsx","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/FormElements/Form.module.scss","pages/CardCreator/CardCreator.module.scss"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","relativePathPrefix","path","process","getCardOptions","a","fetch","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","imagePath","card","className","styles","id","backgroundImage","src","alt","name","formatText","hasSubname","subname","descriptionWrapper","description","illustrator","set","number","shortName","setIcon","rotation","setNumber","cardNumber","totalInSet","rarityIcon","hasWhiteText","imageLayer1","image","imageLayer2","EnergyCard","descriptionWrapperEnergy","typeImage","typeImageSpecial","PokemonCard","useEffect","moves","highestCost","forEach","move","totalAmount","energyCost","amount","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","Math","max","whiteText","namePokemon","rarity","hasNameOutline","nameOutline","subtype","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hasVStyle","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","text","map","i","key","moveMultiple","moveV","moveNameWrapper","moveCost","moveImages","moveType","returnValue","push","moveEnergy","formatMoveCost","moveDamage","damage","moveText","typeBar","hasBlackTopText","hasWhiteTopText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","noDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","CardDisplay","useState","setImagePath","supertype","baseSet","variation","getImage","options","folder","undefined","filePath","Object","values","param","Trainer","Energy","Pokemon","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","InputLabel","horizontal","children","htmlFor","input","inputLabel","Checkbox","checked","setter","onChange","currentTarget","inputField","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","wrapper","button","role","aria-label","onClick","newMoveCost","find","title","splice","indexOf","ImageInput","target","files","window","URL","createObjectURL","accept","Input","value","min","inputTextarea","Select","selectRef","ref","connect","cardOptionsState","dispatch","bindActionCreators","importingCard","useRef","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","current","selectedIndex","newType","newSubtype","newVariation","newRarity","makeCard","navigator","clipboard","readText","then","cardObj","reduce","result","typeId","newBaseSet","baseSetId","newSupertype","findIndex","t","subtypeId","setId","newSet","weaknessTypeId","newWeaknessType","resistanceTypeId","newResistanceType","rotationId","newRotation","variationId","rarityId","rarityIconId","newRarityIcon","importCard","JSON","parse","catch","seperator","hasSubtypes","subtypeOptional","includes","hasVariations","includesType","includesSubtype","includesVariation","disabled","getElementById","htmlToImage","toPng","dataUrl","download","exportCard","cardToImportedCard","writeText","stringify","App","store","header","headerCircle","content","CardCreator","footer","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4bdd8522.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__1gcFF\",\"type\":\"EnergyPicker_type__3zMxj\",\"image\":\"EnergyPicker_image__n99hQ\",\"button\":\"EnergyPicker_button__3c3pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"29.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"image\":\"CardDisplay_image__1Vf1q\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","import { ImportedCard, Card, Move, MoveType } from 'interfaces';\r\n\r\nexport const relativePathPrefix = (path: string): string  => `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\r\n\r\nexport const cardToImportedCard = (card: Card): ImportedCard => ({\r\n  supertype: card.supertype,\r\n  name: card.name,\r\n  subname: card.subname,\r\n  backgroundImage: card.backgroundImage,\r\n  imageLayer1: card.imageLayer1,\r\n  imageLayer2: card.imageLayer2,\r\n  typeImage: card.typeImage,\r\n  cardNumber: card.cardNumber,\r\n  totalInSet: card.totalInSet,\r\n  hitpoints: card.hitpoints,\r\n  illustrator: card.illustrator,\r\n  weaknessAmount: card.weaknessAmount,\r\n  resistanceAmount: card.resistanceAmount,\r\n  retreatCost: card.retreatCost,\r\n  ability: card.ability,\r\n  prevolveName: card.prevolveName,\r\n  prevolveImage: card.prevolveImage,\r\n  pokedexEntry: card.pokedexEntry,\r\n  description: card.description,\r\n  baseSetId: card.baseSet?.id,\r\n  setId: card.set?.id,\r\n  typeId: card.type?.id,\r\n  weaknessTypeId: card.weaknessType?.id,\r\n  resistanceTypeId: card.resistanceType?.id,\r\n  subtypeId: card.subtype?.id,\r\n  rarityId: card.rarity?.id,\r\n  variationId: card.variation?.id,\r\n  rotationId: card.rotation?.id,\r\n  rarityIconId: card.rarityIcon?.id,\r\n  moves: card.moves?.map((move: Move) => ({\r\n    name: move.name,\r\n    damage: move.damage,\r\n    text: move.text,\r\n    energyCost: move.energyCost.map((moveType: MoveType) => ({\r\n      amount: moveType.amount,\r\n      typeId: moveType.type.id,\r\n    })),\r\n  })),\r\n});\r\n","import { relativePathPrefix } from \"services\";\r\n\r\nexport const getCardOptions = async () => {\r\n  try {\r\n    const response = await fetch(relativePathPrefix('/data/cardOptions.json'));\r\n    return response.json();\r\n  } catch(e) {\r\n    console.error(e);\r\n  }\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\r\nimport { Card } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  imagePath?: string,\r\n  card: Card,\r\n}\r\n\r\nconst TrainerCard: React.FC<Props> = ({ imagePath, card }) => {\r\n  return (\r\n    <div className={styles.card} id='card'>\r\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\r\n      <span className={styles.name}>{formatText(card.name)}</span>\r\n      {card.type?.hasSubname && <span className={styles.subname}>{formatText(card.subname)}</span>}\r\n      <div className={styles.descriptionWrapper}>\r\n        <p className={styles.description}>{formatText(card.description)}</p>\r\n      </div>\r\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\r\n      {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\r\n      {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\r\n      <span className={styles.setNumber}>\r\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\r\n        {card.rarityIcon &&\r\n          <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`)}\r\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\r\n        }\r\n      </span>\r\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\r\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\r\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrainerCard;\r\n","import React from 'react';\r\nimport { Card } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  imagePath?: string,\r\n  card: Card,\r\n}\r\n\r\nconst EnergyCard: React.FC<Props> = ({ imagePath, card }) => {\r\n  return (\r\n    <div className={styles.card} id='card'>\r\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\r\n      {card.type?.shortName === 'Special' && <>\r\n        <span className={styles.name}>{formatText(card.name)}</span>\r\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\r\n          <p className={styles.description}>{formatText(card.description)}</p>\r\n        </div>\r\n        {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\r\n        {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\r\n        <span className={styles.setNumber}>\r\n          {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\r\n          {card.rarityIcon &&\r\n            <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`)}\r\n              alt={card.rarityIcon.name} className={styles.rarityIcon} />\r\n          }\r\n        </span>\r\n      </>}\r\n      {card.typeImage && <img src={card.typeImage}\r\n        className={`${styles.typeImage} ${card.type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />}\r\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\r\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\r\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnergyCard;\r\n","import React, { useEffect } from 'react';\nimport { Card, Move } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText } from './index';\nimport { relativePathPrefix } from 'services';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst PokemonCard: React.FC<Props> = ({ imagePath, card }) => {\n  useEffect(() => {\n    if(card.moves) {\n      let highestCost = 0;\n      card.moves.forEach((move) => {\n        let totalAmount: number = 0;\n        move.energyCost.forEach((energyCost) => totalAmount += energyCost.amount);\n        if(totalAmount > highestCost) {\n          highestCost = totalAmount;\n        }\n      });\n\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\n      moveNames.forEach((moveName) => {\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\n      });\n    }\n  }, [card.moves]);\n\n  const formatMoveCost = (move: Move) => {\n    let totalAmount: number = 0;\n    const moveImages = move.energyCost.map((moveType) => {\n      const returnValue: JSX.Element[] = [];\n      for(let i = 0; i < moveType.amount; i++) {\n        totalAmount++;\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\n      }\n      return returnValue;\n    });\n\n    if(totalAmount === 0) {\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\n    } else {\n      return moveImages;\n    }\n  }\n\n  return (\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline ? styles.nameOutline : ''}`}>\n        {formatText(card.name)}\n        {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\n        {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\n      </span>\n      <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\n        <span className={styles.hitpointsHP}>HP</span>\n        <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\n      </div>\n      {(card.subtype?.hasPrevolve && card.prevolveName) &&\n        <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\n      }\n      {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\n        <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\n      }\n      <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\n        {card.ability &&\n          <div className={styles.ability}>\n            <div className={styles.abilityNameWrapper}>\n              {card.subtype?.hasVStyle ?\n                <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\n                :\n                <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\n              }\n              <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\n            </div>\n            <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\n          </div>\n        }\n        {card.moves && (card.moves.map((move, i) =>\n          <div key={i}\n            className={`${i === 0 ? card.moves && card.moves.length > 1 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\n            {move.name &&\n              <div className={styles.moveNameWrapper}>\n                <div className={styles.moveCost}>\n                  {formatMoveCost(move)}\n                </div>\n                <span className={`${styles.moveName} moveName`}>{move.name}</span>\n                <span className={styles.moveDamage}>{move.damage}</span>\n              </div>\n            }\n            <p className={styles.moveText}>{formatText(move.text)}</p>\n          </div>\n        ))}\n      </div>\n      <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\n        {card.weaknessType &&\n          <span className={styles.weakness}>\n            <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\n            <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\n          </span>\n        }\n        {card.resistanceType &&\n          <span className={styles.resistance}>\n            <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\n            <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\n          </span>\n        }\n        <div className={styles.retreatCost}>\n          {card.retreatCost && Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\n            i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\n          )}\n        </div>\n      </div>\n      {!card.subtype?.noDescription &&\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n      }\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n      {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText || card.subtype?.hasVStyle? '_white' : ''}.png`)}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {(card.subtype?.hasPrevolve && card.prevolveImage) &&\n        <div className={styles.prevolveImageWrapper}>\n          <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\n        </div>\n      }\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default PokemonCard;\n","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'interfaces';\r\nimport TrainerCard from './Trainer';\r\nimport styles from './CardDisplay.module.scss';\r\nimport EnergyCard from './Energy';\r\nimport PokemonCard from './Pokemon';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface ImagePathOptions {\r\n  baseSet: string,\r\n  type: string,\r\n  subtype?: string,\r\n  variation?: string,\r\n  rarity?: string,\r\n  supertype?: string,\r\n}\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\n\r\nconst CardDisplay: React.FC<Props> = ({ card }) => {\r\n  const [imagePath, setImagePath] = useState<string>();\r\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\r\n\r\n  useEffect(() => {\r\n    const getImage = (options: ImagePathOptions, folder: string | undefined = undefined): string => {\r\n      // Format the options according to the formatting defined in the README\r\n      let filePath: string = relativePathPrefix(`/assets/${supertype}/`);\r\n      if(folder) {\r\n        filePath += `${folder}/`;\r\n      }\r\n      Object.values(options).forEach((param: string, i: number) => {\r\n        if(param !== undefined && param !== 'default') {\r\n          if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\r\n            (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\r\n            (options.rarity === 'Promo' && param === 'Basic')) {\r\n            return;\r\n          }\r\n          if(i !== 0) {\r\n            filePath += '_';\r\n          }\r\n          filePath += param;\r\n          if(param === 'Rainbow') {\r\n            if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\r\n              filePath += `_${options.variation}`;\r\n            }\r\n          }\r\n          if(param === 'V' && !options.rarity) {\r\n            filePath += '_Basic';\r\n          }\r\n        }\r\n      });\r\n      return `${filePath}.png`;\r\n    }\r\n\r\n    if(supertype && type && baseSet) {\r\n      let imagePath: string;\r\n      switch(supertype) {\r\n        case 'Pokemon':\r\n          imagePath = getImage({ baseSet: baseSet.shortName, subtype: subtype?.shortName, variation: variation?.shortName,\r\n            rarity: rarity?.shortName, type: type.shortName }, type.shortName);\r\n          break;\r\n        case 'Energy':\r\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName });\r\n          break;\r\n        case 'Trainer':\r\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName, subtype: subtype?.shortName });\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      setImagePath(imagePath);\r\n    }\r\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\r\n\r\n  if(supertype === 'Trainer') {\r\n    return <TrainerCard imagePath={imagePath} card={card} />\r\n  } else if(supertype === 'Energy') {\r\n    return <EnergyCard imagePath={imagePath} card={card} />\r\n  } else {\r\n    return <PokemonCard imagePath={imagePath} card={card} />\r\n  }\r\n}\r\n\r\nexport default CardDisplay;\r\n\r\nexport const formatText = (text: string | undefined) => {\r\n  if(text) {\r\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\r\n    if(chars) {\r\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\r\n      const textNoChars = text.split(/\\[.*?\\]/g);\r\n      const returnText: (JSX.Element | string)[] = [];\r\n      textNoChars.forEach((textElm, i) => {\r\n        returnText.push(textElm);\r\n        if(charsArr.length > i) {\r\n          if(charsArr[i].length > 1) {\r\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\r\n          } else {\r\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\r\n          }\r\n        }\r\n      });\r\n      return returnText;\r\n    } else {\r\n      return text;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  horizontal?: boolean,\r\n}\r\n\r\nconst InputLabel: React.FC<Props> = ({ shortName, name, horizontal, children }) =>\r\n  <label htmlFor={shortName} className={`${styles.input} ${horizontal ? styles.horizontal : ''}`}>\r\n    <span className={styles.inputLabel}>{name}</span>\r\n    {children}\r\n  </label>\r\n\r\nexport default InputLabel;\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  checked: boolean,\r\n  setter: (newValue: boolean) => void,\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({ shortName, name, checked, setter }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        checked={checked}\r\n        onChange={e => setter(e.currentTarget.checked)}\r\n        className={styles.inputField}\r\n        type='checkbox'\r\n      />\r\n  </InputLabel>\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './EnergyPicker.module.scss';\r\nimport { MoveType, Type } from 'interfaces';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  label: String,\r\n  types: Type[],\r\n  moveCost: MoveType[],\r\n  setMoveCost: (moveTypes: MoveType[]) => void,\r\n}\r\n\r\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\r\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const newMoveTypes: MoveType[] = [];\r\n    types.forEach((type) => {\r\n      if(type.supertype === 'Pokemon') {\r\n        newMoveTypes.push({\r\n          type,\r\n          amount: 0,\r\n        });\r\n      }\r\n    });\r\n    setMoveTypes(newMoveTypes);\r\n  }, [types]);\r\n\r\n  return (\r\n    <div>\r\n      <span>{label}</span>\r\n      <div className={styles.wrapper}>\r\n        {moveTypes.map((moveType, i) =>\r\n          <div className={styles.type} key={i}>\r\n            <span className={styles.button} role='img' aria-label='arrow up' onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount + 1;\r\n              } else {\r\n                type = {\r\n                  type: moveType.type,\r\n                  amount: 1,\r\n                };\r\n                newMoveCost.push(type);\r\n              }\r\n              setMoveCost(newMoveCost);\r\n            }}>🔺</span>\r\n            <img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\r\n            <span className={styles.button} role='img' aria-label='arrow down' onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount - 1;\r\n                if(type.amount <= 0) {\r\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\r\n                }\r\n                setMoveCost(newMoveCost);\r\n              }\r\n            }}>🔻</span>\r\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnergyPicker;\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  setter: (newValue:  any) => void,\r\n}\r\n\r\nconst ImageInput: React.FC<Props> = ({ shortName, name, setter }) =>\r\n  <InputLabel shortName={shortName} name={name} horizontal>\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        onChange={e => {\r\n          if(e.target.files && e.target.files[0]) {\r\n            setter(window.URL.createObjectURL(e.target.files[0]));\r\n          } else {\r\n            setter('');\r\n          }}\r\n        }\r\n        className={styles.inputField}\r\n        type='file'\r\n        accept='image/*'\r\n      />\r\n  </InputLabel>\r\n\r\nexport default ImageInput;\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  value: string | number,\r\n  type: 'text' | 'number' | 'textarea',\r\n  min?: number,\r\n  max?: number,\r\n  horizontal?: boolean,\r\n  setter: (newValue: any) => void,\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ shortName, name, value, type, min, max, setter, horizontal }) =>\r\n  <InputLabel shortName={shortName} name={name} horizontal={horizontal || type === 'textarea'}>\r\n    {type !== 'textarea' ?\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        type={type}\r\n        min={min}\r\n        max={max}\r\n        onChange={e => setter(type === 'text' ? e.currentTarget.value : +e.currentTarget.value)}\r\n        className={styles.inputField}\r\n      />\r\n      :\r\n      <textarea\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        onChange={e => setter(e.currentTarget.value)}\r\n        className={`${styles.inputField} ${styles.inputTextarea}`}\r\n      ></textarea>\r\n    }\r\n  </InputLabel>\r\n\r\nexport default Input;\r\n","import React, { ChangeEvent } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  selectRef?: React.RefObject<HTMLSelectElement>,\r\n  onChange: (e: ChangeEvent<HTMLSelectElement>) => void,\r\n}\r\n\r\nconst Select: React.FC<Props> = ({ shortName, name, selectRef, onChange, children }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n    <select id={shortName} ref={selectRef} name={shortName} className={styles.inputField} onChange={onChange}>\r\n      {children}\r\n    </select>\r\n  </InputLabel>\r\n\r\nexport default Select;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { State } from 'reducers';\r\nimport { connect } from 'react-redux';\r\nimport { CardOptionsState } from 'reducers/cardOptions';\r\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card, ImportedCard, ImportedMoveType } from 'interfaces';\r\nimport { bindActionCreators } from 'redux';\r\nimport { requestCardOptions } from 'actions';\r\nimport htmlToImage from 'html-to-image';\r\nimport download from 'downloadjs';\r\nimport styles from './CardCreator.module.scss';\r\nimport CardDisplay from 'components/CardDisplay';\r\nimport { Select, Input, Checkbox, ImageInput, EnergyPicker} from 'components/FormElements';\r\nimport { relativePathPrefix, cardToImportedCard } from 'services';\r\n\r\ninterface Props {\r\n  cardOptionsState: CardOptionsState,\r\n  requestCardOptions: () => Object,\r\n}\r\n\r\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, requestCardOptions }) => {\r\n  const importingCard = useRef<boolean>(false);\r\n  // Selectors\r\n  const [supertype, setSupertype] = useState<string>('Pokemon');\r\n  const [type, setType] = useState<Type>();\r\n  const [baseSet, setBaseSet] = useState<BaseSet>();\r\n  const [set, setSet] = useState<Set>();\r\n  const [rotation, setRotation] = useState<Rotation>();\r\n  const [variation, setVariation] = useState<Variation>();\r\n  const [subtype, setSubtype] = useState<Subtype>();\r\n  const [rarity, setRarity] = useState<Rarity>();\r\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\r\n  const [weaknessType, setWeaknessType] = useState<Type>();\r\n  const [resistanceType, setResistanceType] = useState<Type>();\r\n  // Selector refs\r\n  const baseSetRef = useRef<HTMLSelectElement>(null);\r\n  const supertypeRef = useRef<HTMLSelectElement>(null);\r\n  const typeRef = useRef<HTMLSelectElement>(null);\r\n  const subtypeRef = useRef<HTMLSelectElement>(null);\r\n  const variationRef = useRef<HTMLSelectElement>(null);\r\n  const rarityRef = useRef<HTMLSelectElement>(null);\r\n  const setIconRef = useRef<HTMLSelectElement>(null);\r\n  const rotationRef = useRef<HTMLSelectElement>(null);\r\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\r\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\r\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\r\n  // Inputs\r\n  const [name, setName] = useState<string>('');\r\n  const [prevolveName, setPrevolveName] = useState<string>('');\r\n  const [hitpoints, setHitpoints] = useState<number>(100);\r\n  const [subname, setSubname] = useState<string>('');\r\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\r\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\r\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\r\n  const [retreatCost, setRetreatCost] = useState<number>(1);\r\n  const [description, setDescription] = useState<string>('');\r\n  const [illustrator, setIllustrator] = useState<string>('');\r\n  const [cardNumber, setCardNumber] = useState<string>('');\r\n  const [totalInSet, setTotalInSet] = useState<string>('');\r\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\r\n  const [imageLayer1, setImageLayer1] = useState<string>('');\r\n  const [imageLayer2, setImageLayer2] = useState<string>('');\r\n  const [typeImage, setTypeImage] = useState<string>('');\r\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\r\n  // Ability/Moves\r\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\r\n  const [abilityName, setAbilityName] = useState<string>('');\r\n  const [abilityText, setAbilityText] = useState<string>('');\r\n  const [move1Name, setMove1Name] = useState<string>('');\r\n  const [move1Damage, setMove1Damage] = useState<string>('');\r\n  const [move1Text, setMove1Text] = useState<string>('');\r\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\r\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\r\n  const [move2Name, setMove2Name] = useState<string>('');\r\n  const [move2Text, setMove2Text] = useState<string>('');\r\n  const [move2Damage, setMove2Damage] = useState<string>('');\r\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\r\n\r\n  useEffect(() => {\r\n    requestCardOptions();\r\n  }, [requestCardOptions]);\r\n\r\n  useEffect(() => {\r\n    setType(cardOptionsState.cardOptions.types[0]);\r\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\r\n    setSet(cardOptionsState.cardOptions.sets[0]);\r\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\r\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\r\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\r\n  }, [cardOptionsState]);\r\n\r\n  /**\r\n   * Changes the types/subtypes etc to the first available one within their parent\r\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\r\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\r\n   */\r\n  useEffect(() => {\r\n    if(importingCard.current) {\r\n      return;\r\n    }\r\n    if(typeRef.current) {\r\n      const { selectedIndex, options } = typeRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newType = cardOptionsState.cardOptions.types.find((a: Type) => a.id === +value);\r\n      if(newType && newType !== type) {\r\n        setType(newType);\r\n      }\r\n    } else {\r\n      setType(undefined);\r\n    }\r\n    if(subtypeRef.current) {\r\n      const { selectedIndex, options } = subtypeRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newSubtype = cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +value);\r\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\r\n        setSubtype(newSubtype);\r\n      }\r\n    } else {\r\n      setSubtype(undefined);\r\n    }\r\n    if(variationRef.current) {\r\n      const { selectedIndex, options } = variationRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newVariation = cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +value);\r\n      if(newVariation && newVariation !== variation) {\r\n        setVariation(newVariation);\r\n      }\r\n    } else {\r\n      setVariation(undefined);\r\n    }\r\n    if(rarityRef.current) {\r\n      const { selectedIndex, options } = rarityRef.current;\r\n      const value: string | undefined = options[selectedIndex]?.value;\r\n      const newRarity = cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +value);\r\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\r\n        setRarity(newRarity);\r\n      }\r\n    } else {\r\n      setRarity(undefined);\r\n    }\r\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\r\n\r\n  /**\r\n   * Turns state data into a Card object\r\n   */\r\n  const makeCard = (): Card => ({\r\n    baseSet,\r\n    supertype,\r\n    type,\r\n    set,\r\n    variation,\r\n    subtype,\r\n    rarity,\r\n    name,\r\n    prevolveName,\r\n    prevolveImage,\r\n    hitpoints,\r\n    subname,\r\n    typeImage,\r\n    pokedexEntry,\r\n    ability: hasAbility ? {\r\n      name: abilityName,\r\n      text: abilityText,\r\n    } : undefined,\r\n    moves: [\r\n      {\r\n        name: move1Name,\r\n        text: move1Text,\r\n        damage: move1Damage,\r\n        energyCost: move1Cost,\r\n      },\r\n      ...(!hasAbility && hasSecondMove ? [{\r\n        name: move2Name,\r\n        text: move2Text,\r\n        damage: move2Damage,\r\n        energyCost: move2Cost,\r\n      }] : []),\r\n    ],\r\n    weaknessType,\r\n    weaknessAmount,\r\n    resistanceType,\r\n    resistanceAmount,\r\n    retreatCost,\r\n    illustrator,\r\n    cardNumber,\r\n    totalInSet,\r\n    rotation,\r\n    rarityIcon,\r\n    description,\r\n    backgroundImage,\r\n    imageLayer1,\r\n    imageLayer2,\r\n  });\r\n\r\n  const downloadCard = () => {\r\n    const card = document.getElementById('card');\r\n    if(card) {\r\n      htmlToImage.toPng(card)\r\n        .then((dataUrl) => {\r\n          download(dataUrl, `${name || 'card'}.png`);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }\r\n\r\n  const exportCard = () => {\r\n    const card: Card = makeCard();\r\n    const exportCard: ImportedCard = cardToImportedCard(card);\r\n    navigator.clipboard.writeText(JSON.stringify(exportCard));\r\n  }\r\n\r\n  /**\r\n   * Sets all card data, selectors and energy pickers to certain values based on the cardObj parameter\r\n   */\r\n  const importCard = (cardObj: ImportedCard) => {\r\n    importingCard.current = true;\r\n    // Base values\r\n    setName(cardObj.name || '');\r\n    setPrevolveName(cardObj.prevolveName || '');\r\n    setPrevolveImage(relativePathPrefix(cardObj.prevolveImage || ''));\r\n    setHitpoints(cardObj.hitpoints || 0);\r\n    setSubname(cardObj.subname || '');\r\n    setTypeImage(relativePathPrefix(cardObj.typeImage || ''));\r\n    setPokedexEntry(cardObj.pokedexEntry || '');\r\n    setWeaknessAmount(cardObj.weaknessAmount || 0);\r\n    setResistanceAmount(cardObj.resistanceAmount || 0);\r\n    setRetreatCost(cardObj.retreatCost || 0);\r\n    setIllustrator(cardObj.illustrator || '');\r\n    setCardNumber(cardObj.cardNumber || '');\r\n    setTotalInSet(cardObj.totalInSet || '');\r\n    setDescription(cardObj.description || '');\r\n    setBackgroundImage(relativePathPrefix(cardObj.backgroundImage || ''));\r\n    setImageLayer1(relativePathPrefix(cardObj.imageLayer1 || ''));\r\n    setImageLayer2(relativePathPrefix(cardObj.imageLayer2 || ''));\r\n    if(cardObj.ability) {\r\n      setHasAbility(true);\r\n      setAbilityName(cardObj.ability.name);\r\n      setAbilityText(cardObj.ability.text);\r\n    }\r\n    if(cardObj.moves) {\r\n      if(cardObj.moves[0]){\r\n        setMove1Name(cardObj.moves[0].name);\r\n        setMove1Damage(cardObj.moves[0].damage);\r\n        setMove1Text(cardObj.moves[0].text);\r\n        setMove1Cost(cardObj.moves[0].energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\r\n          const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\r\n          if(newType) {\r\n            result.push({\r\n              amount: moveType.amount,\r\n              type: newType,\r\n            });\r\n          }\r\n          return result;\r\n        }, []));\r\n      }\r\n      if(cardObj.moves[1]) {\r\n        setHasSecondMove(true);\r\n        setMove2Name(cardObj.moves[1].name);\r\n        setMove2Damage(cardObj.moves[1].damage);\r\n        setMove2Text(cardObj.moves[1].text);\r\n        setMove2Cost(cardObj.moves[1].energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\r\n          const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\r\n          if(newType) {\r\n            result.push({\r\n              amount: moveType.amount,\r\n              type: newType,\r\n            });\r\n          }\r\n          return result;\r\n        }, []));\r\n      }\r\n    }\r\n    // Selectors\r\n    const newBaseSet: BaseSet | undefined = cardOptionsState.cardOptions.baseSets.find((a) => a.id === cardObj.baseSetId);\r\n    if(newBaseSet) {\r\n      setBaseSet(newBaseSet);\r\n      if(baseSetRef.current && newBaseSet) {\r\n        baseSetRef.current.selectedIndex = cardOptionsState.cardOptions.baseSets.indexOf(newBaseSet);\r\n      }\r\n    } else {\r\n      if(baseSetRef.current) {\r\n        baseSetRef.current.selectedIndex = 0;\r\n      }\r\n      setBaseSet(undefined);\r\n    }\r\n    const newSupertype = cardObj.supertype;\r\n    if(newSupertype) {\r\n      setSupertype(newSupertype);\r\n      if(supertypeRef.current) {\r\n        supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => t.value === newSupertype);\r\n      }\r\n    } else {\r\n      if(supertypeRef.current) {\r\n        supertypeRef.current.selectedIndex = 0;\r\n      }\r\n      setSupertype('Pokemon');\r\n    }\r\n    const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.typeId);\r\n    if(newType) {\r\n      setType(newType);\r\n      if(typeRef.current) {\r\n        typeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newType);\r\n      }\r\n    } else {\r\n      if(typeRef.current) {\r\n        typeRef.current.selectedIndex = 0;\r\n      }\r\n      setType(undefined);\r\n    }\r\n    if(cardObj.subtypeId) {\r\n      const newSubtype: Subtype | undefined = cardOptionsState.cardOptions.subtypes.find((a) => a.id === cardObj.subtypeId);\r\n      if(newSubtype) {\r\n        setSubtype(newSubtype);\r\n        if(subtypeRef.current) {\r\n          subtypeRef.current.selectedIndex = cardOptionsState.cardOptions.subtypes.indexOf(newSubtype);\r\n        }\r\n      }\r\n    } else {\r\n      if(subtypeRef.current) {\r\n        subtypeRef.current.selectedIndex = 0;\r\n      }\r\n      setSubtype(undefined);\r\n    }\r\n    if(cardObj.setId) {\r\n      const newSet: Set | undefined = cardOptionsState.cardOptions.sets.find((a) => a.id === cardObj.setId);\r\n      if(newSet) {\r\n        setSet(newSet);\r\n        if(setIconRef.current) {\r\n          setIconRef.current.selectedIndex = cardOptionsState.cardOptions.sets.indexOf(newSet);\r\n        }\r\n      }\r\n    } else {\r\n      if(setIconRef.current) {\r\n        setIconRef.current.selectedIndex = 0;\r\n      }\r\n      setSubtype(undefined);\r\n    }\r\n    if(cardObj.weaknessTypeId) {\r\n      const newWeaknessType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.weaknessTypeId);\r\n      if(newWeaknessType) {\r\n        setWeaknessType(newWeaknessType);\r\n        if(weaknessTypeRef.current) {\r\n          weaknessTypeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newWeaknessType);\r\n        }\r\n      }\r\n    } else {\r\n      if(weaknessTypeRef.current) {\r\n        weaknessTypeRef.current.selectedIndex = 0;\r\n      }\r\n      setWeaknessType(undefined);\r\n    }\r\n    if(cardObj.resistanceTypeId) {\r\n      const newResistanceType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.resistanceTypeId);\r\n      if(newResistanceType) {\r\n        setResistanceType(newResistanceType);\r\n        if(resistanceTypeRef.current) {\r\n          resistanceTypeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newResistanceType);\r\n        }\r\n      }\r\n    } else {\r\n      if(resistanceTypeRef.current) {\r\n        resistanceTypeRef.current.selectedIndex = 0;\r\n      }\r\n      setResistanceType(undefined);\r\n    }\r\n    if(cardObj.rotationId) {\r\n      const newRotation: Rotation | undefined = cardOptionsState.cardOptions.rotations.find((a) => a.id === cardObj.rotationId);\r\n      if(newRotation) {\r\n        setRotation(newRotation);\r\n        if(rotationRef.current) {\r\n          rotationRef.current.selectedIndex = cardOptionsState.cardOptions.rotations.indexOf(newRotation);\r\n        }\r\n      }\r\n    } else {\r\n      if(rotationRef.current) {\r\n        rotationRef.current.selectedIndex = 0;\r\n      }\r\n      setRotation(undefined);\r\n    }\r\n    if(cardObj.variationId) {\r\n      const newVariation: Variation | undefined = cardOptionsState.cardOptions.variations.find((a) => a.id === cardObj.variationId);\r\n      if(newVariation) {\r\n        setVariation(newVariation);\r\n        if(variationRef.current) {\r\n          variationRef.current.selectedIndex = cardOptionsState.cardOptions.variations.indexOf(newVariation);\r\n        }\r\n      }\r\n    } else {\r\n      if(variationRef.current) {\r\n        variationRef.current.selectedIndex = 0;\r\n      }\r\n      setVariation(undefined);\r\n    }\r\n    if(cardObj.rarityId) {\r\n      const newRarity: Rarity | undefined = cardOptionsState.cardOptions.rarities.find((a) => a.id === cardObj.rarityId);\r\n      if(newRarity) {\r\n        setRarity(newRarity);\r\n        if(rarityRef.current) {\r\n          rarityRef.current.selectedIndex = cardOptionsState.cardOptions.rarities.indexOf(newRarity);\r\n        }\r\n      }\r\n    } else {\r\n      if(rarityRef.current) {\r\n        rarityRef.current.selectedIndex = 0;\r\n      }\r\n      setRarity(undefined);\r\n    }\r\n    if(cardObj.rarityIconId) {\r\n      const newRarityIcon: RarityIcon | undefined = cardOptionsState.cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIconId);\r\n      if(newRarityIcon) {\r\n        setRarityIcon(newRarityIcon);\r\n        if(rarityIconRef.current) {\r\n          rarityIconRef.current.selectedIndex = cardOptionsState.cardOptions.rarityIcons.indexOf(newRarityIcon);\r\n        }\r\n      }\r\n    } else {\r\n      if(rarityIconRef.current) {\r\n        rarityIconRef.current.selectedIndex = 0;\r\n      }\r\n      setRarityIcon(undefined);\r\n    }\r\n    importingCard.current = false;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <button className={styles.button} onClick={e => {\r\n          navigator.clipboard.readText()\r\n            .then((value: string) => {\r\n              importCard(JSON.parse(value) as ImportedCard);\r\n            })\r\n            .catch(console.error);\r\n        }}>{'Import from clipboard'}</button>\r\n        <div className={styles.seperator}>\r\n          <Select name='Base Set' shortName='baseSet' selectRef={baseSetRef} onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\r\n            {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\r\n              <option value={value.id} key={i}>{value.name}</option>\r\n            )}\r\n          </Select>\r\n          <Select name='Supertype' shortName='supertype' selectRef={supertypeRef} onChange={e => setSupertype(e.currentTarget.value)}>\r\n            <option value={'Pokemon'}>{'Pokémon'}</option>\r\n            <option value={'Trainer'}>{'Trainer'}</option>\r\n            <option value={'Energy'}>{'Energy'}</option>\r\n          </Select>\r\n          <Select name='Type' shortName='type' selectRef={typeRef} onChange={e => setType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\r\n            {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\r\n              if(supertype !== value.supertype) {\r\n                return false;\r\n              } else {\r\n                return <option value={value.id} key={i}>{value.name}</option>;\r\n              }\r\n            })}\r\n          </Select>\r\n          {type?.hasSubtypes && supertype !== 'Energy' &&\r\n            <Select name='Subtype' shortName='subtype' selectRef={subtypeRef} onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\r\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\r\n              {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\r\n                if(!value.types.includes(type?.id || 0)) {\r\n                  return false;\r\n                } else {\r\n                  return <option value={value.id} key={i}>{value.name}</option>;\r\n                }\r\n              })}\r\n            </Select>\r\n          }\r\n          {subtype?.hasVariations && supertype !== 'Energy' && supertype !== 'Trainer' &&\r\n            <Select name='Variation' shortName='variation' selectRef={variationRef} onChange={e => setVariation(cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\r\n              {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\r\n                if(!value.subtypes.includes(subtype?.id || 0)) {\r\n                  return false;\r\n                } else {\r\n                  return <option value={value.id} key={i}>{value.name}</option>;\r\n                }\r\n              })}\r\n            </Select>\r\n          }\r\n          {supertype !== 'Energy' && supertype !== 'Trainer' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) &&\r\n            <Select name='Rarity' shortName='rarity' selectRef={rarityRef} onChange={e => setRarity(cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\r\n              <option value={'default'}>{'Default'}</option>\r\n              {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\r\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\r\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\r\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\r\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\r\n                  || (includesSubtype && (includesVariation || !variation))\r\n                  || includesVariation) {\r\n                  return <option value={value.id} key={i}>{value.name}</option>;\r\n                } else {\r\n                  return false;\r\n                }\r\n              })}\r\n            </Select>\r\n          }\r\n          {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\r\n            <Select name='Set Icon' shortName='set' selectRef={setIconRef} onChange={e => setSet(cardOptionsState.cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\r\n              {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\r\n                <option value={value.id} key={i}>{value.name}</option>\r\n              )}\r\n            </Select>\r\n            <Select name='Rotation' shortName='rotation' selectRef={rotationRef} onChange={e => setRotation(cardOptionsState.cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\r\n              {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\r\n                <option value={value.id} key={i}>{value.name}</option>\r\n              )}\r\n            </Select>\r\n            <Select name='Rarity Icons' shortName='rarityIcon' selectRef={rarityIconRef} onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\r\n              <option value={'none'}>{'None'}</option>\r\n              {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\r\n                <option value={value.id} key={i}>{value.name}</option>\r\n              )}\r\n            </Select>\r\n          </>}\r\n        </div>\r\n        {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\r\n          <div className={styles.seperator}>\r\n            <Input type='text' name='Name' shortName='name' value={name} setter={setName} />\r\n            {supertype === 'Pokemon' &&\r\n              <Input type='number' name='Hitpoints' shortName='hitpoints' value={hitpoints} setter={setHitpoints} min={0} max={999} />\r\n            }\r\n            {subtype?.hasPrevolve && <>\r\n              <Input type='text' name='Prevolve Name' shortName='prevolveName' value={prevolveName} setter={setPrevolveName} />\r\n              <ImageInput name='Type Image' shortName='prevolveImage' setter={setPrevolveImage} />\r\n            </>}\r\n            {subtype?.hasPokedexEntry &&\r\n              <Input type='text' horizontal name='Pokédex Entry' shortName='pokedexEntry' value={pokedexEntry} setter={setPokedexEntry} />\r\n            }\r\n            {type?.hasSubname &&\r\n              <Input type='text' name='Subname' shortName='subname' value={subname} setter={setSubname} />\r\n            }\r\n          </div>\r\n          {supertype === 'Pokemon' && <>\r\n            <div className={styles.seperator}>\r\n              <Checkbox name='Has Ability' shortName='hasAbility' checked={hasAbility} setter={setHasAbility} />\r\n              {hasAbility && <>\r\n                <Input type='text' name='Ability Name' shortName='abilityName' value={abilityName} setter={setAbilityName} />\r\n                <Input type='text' name='Ability Text' shortName='abilityText' value={abilityText} setter={setAbilityText} />\r\n              </>}\r\n            </div>\r\n            <div className={styles.seperator}>\r\n              <Input type='text' name='Move Name' shortName='move1Name' value={move1Name} setter={setMove1Name} />\r\n              <Input type='text' name='Move Damage' shortName='move1Damage' value={move1Damage} setter={setMove1Damage} />\r\n              <Input type='textarea' horizontal name='Move Text' shortName='move1Text' value={move1Text} setter={setMove1Text} />\r\n              <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\r\n            </div>\r\n            {!hasAbility &&\r\n              <div className={styles.seperator}>\r\n                <Checkbox name='Has Second Move' shortName='hasSecondMove' checked={hasSecondMove} setter={setHasSecondMove} />\r\n                {hasSecondMove && <>\r\n                  <Input type='text' name='Move Name' shortName='move2Name' value={move2Name} setter={setMove2Name} />\r\n                  <Input type='text' name='Move Damage' shortName='move2Damage' value={move2Damage} setter={setMove2Damage} />\r\n                  <Input type='textarea' name='Move Text' shortName='move2Text' value={move2Text} setter={setMove2Text} />\r\n                  <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\r\n                </>}\r\n              </div>\r\n            }\r\n            <div className={styles.seperator}>\r\n              <Select name='Weakness Type' shortName='weaknessType' selectRef={weaknessTypeRef} onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\r\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\r\n                  if(supertype !== value.supertype) {\r\n                    return false;\r\n                  } else {\r\n                    return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\r\n                  }\r\n                })}\r\n              </Select>\r\n              <Input type='number' name='Weakness Amount' shortName='weaknessAmount' value={weaknessAmount} setter={setWeaknessAmount} max={99} min={0} />\r\n              <Select name='Resistance Type' shortName='resistanceType' selectRef={resistanceTypeRef} onChange={e => setResistanceType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\r\n                <option value={'none'}>{'None'}</option>\r\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\r\n                  if(supertype !== value.supertype) {\r\n                    return false;\r\n                  } else {\r\n                    return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\r\n                  }\r\n                })}\r\n              </Select>\r\n              {resistanceType &&\r\n                <Input type='number' name='Resistance Amount' shortName='resistanceAmount' value={resistanceAmount} setter={setResistanceAmount} max={99} min={0} />\r\n              }\r\n              <Input type='number' name='Retreat Cost' shortName='retreatCost' value={retreatCost} setter={setRetreatCost} max={5} min={0} />\r\n            </div>\r\n          </>}\r\n          {!subtype?.noDescription &&\r\n            <div className={styles.seperator}>\r\n              <Input type='textarea' name='Description' shortName='description' value={description} setter={setDescription} />\r\n            </div>\r\n          }\r\n          <div className={styles.seperator}>\r\n            {supertype !== 'Energy' &&\r\n              <Input type='text' name='Illustrator' shortName='illustrator' value={illustrator} setter={setIllustrator} />\r\n            }\r\n            <Input type='text' name='Card Number' shortName='cardNumber' value={cardNumber} setter={setCardNumber} />\r\n            <Input type='text' name='Total In Set' shortName='totalInSet' value={totalInSet} setter={setTotalInSet} />\r\n          </div>\r\n        </>}\r\n        <div className={styles.seperator}>\r\n          <ImageInput name='Background Image' shortName='backgroundImage' setter={setBackgroundImage} />\r\n          <ImageInput name='Card Image' shortName='imageLayer1' setter={setImageLayer1} />\r\n          <ImageInput name='Top Image' shortName='imageLayer2' setter={setImageLayer2} />\r\n          {supertype === 'Energy' &&\r\n            <ImageInput name='Type Image' shortName='typeImage' setter={setTypeImage} />\r\n          }\r\n        </div>\r\n        <button className={styles.button} onClick={downloadCard}>{'Download as image'}</button>\r\n        <button className={styles.button} onClick={exportCard}>{'Export to clipboard'}</button>\r\n      </div>\r\n      <CardDisplay card={makeCard()} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\r\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport CardCreatorPage from 'pages/CardCreator';\nimport styles from './App.module.scss';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className={styles.wrapper}>\n        <header className={styles.header}>\n          <div className={styles.headerCircle} />\n        </header>\n        <div className={styles.content}>\n          <CardCreatorPage />\n        </div>\n        <footer className={styles.footer} />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__GBXSi\",\"horizontal\":\"Form_horizontal__2UtlA\",\"inputField\":\"Form_inputField__1HngE\",\"inputLabel\":\"Form_inputLabel__322yj\",\"inputTextarea\":\"Form_inputTextarea__3XaZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"seperator\":\"CardCreator_seperator__1YR8e\",\"button\":\"CardCreator_button__2OfjR\"};"],"sourceRoot":""}