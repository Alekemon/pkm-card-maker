{"version":3,"sources":["components/FormElements/Form.module.scss","components/CardDisplay/CardDisplay.module.scss","components/FormElements/EnergyPicker/EnergyPicker.module.scss","App.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","services.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/index.tsx","components/FormElements/InputLabel/index.tsx","components/FormElements/Checkbox/index.tsx","components/FormElements/EnergyPicker/index.tsx","components/FormElements/ImageInput/index.tsx","components/FormElements/Input/index.tsx","components/FormElements/Select/index.tsx","cropImage.ts","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx","pages/CardCreator/CardCreator.module.scss"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","relativePathPrefix","path","process","cardOptionsToImage","options","folder","supertype","filePath","Object","values","forEach","param","i","undefined","rarity","variation","getCardImage","imagePath","baseSet","subtype","getCardOptions","a","fetch","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","name","description","subname","className","styles","formatText","descriptionWrapper","hasSubname","EnergyCard","typeImage","hasSpecialStyle","descriptionWrapperEnergy","src","shortName","typeImageSpecial","alt","PokemonCard","card","useEffect","moves","highestCost","move","totalAmount","energyCost","amount","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","Math","max","namePokemon","hasNameOutline","nameOutline","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hasVStyle","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","text","map","key","moveMultiple","moveV","moveNameWrapper","moveCost","moveImages","moveType","returnValue","push","moveEnergy","formatMoveCost","moveDamage","damage","moveText","moveTextV","typeBar","hasBlackTopText","hasWhiteTopText","whiteText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","noDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","CardDisplay","useState","setImagePath","set","newImage","hasWhiteText","id","backgroundImage","Trainer","Energy","Pokemon","cardInfoWhite","illustrator","customSetIcon","setIcon","number","rotation","setNumber","cardNumber","totalInSet","rarityIcon","imageLayer1","image","imageLayer2","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","InputLabel","horizontal","buttons","children","htmlFor","input","inputLabel","button","icon","title","inputLabelButton","onClick","preventDefault","Checkbox","checked","setter","onChange","currentTarget","inputField","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","wrapper","newMoveCost","find","faChevronUp","splice","indexOf","faChevronDown","ImageInput","info","croppable","cropperSetter","setImage","inputRef","useRef","initialRender","acceptedTypes","current","faCropAlt","faTimes","value","ref","target","files","includes","window","URL","createObjectURL","accept","join","Input","min","inputTextarea","Select","selectRef","createImage","url","Promise","resolve","reject","Image","addEventListener","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","createElement","ctx","getContext","maxSize","width","height","safeArea","sqrt","translate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","connect","cardOptionsState","dispatch","bindActionCreators","importingCard","initialImported","importingTrigger","setImportingTrigger","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasCustomSetIcon","setHasCustomSetIcon","setCustomSetIcon","cropArea","setCropArea","cropZoom","setCropZoom","cropImage","setCropImage","croppedAreaPixels","setCroppedAreaPixels","currentCropSetter","setCurrentCropSetter","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","selectedIndex","newType","newSubtype","newVariation","newRarity","makeCard","importCard","cardObj","reduce","result","typeId","newBaseSet","baseSetId","findIndex","t","newSupertype","subtypeId","setId","newSet","weaknessTypeId","newWeaknessType","resistanceTypeId","newResistanceType","rotationId","newRotation","variationId","rarityId","rarityIconId","newRarityIcon","resetCropper","imageSetter","form","navigator","clipboard","readText","then","JSON","parse","catch","seperator","hasSubtypes","subtypeOptional","hasVariations","includesType","includesSubtype","includesVariation","disabled","cropperWrapper","crop","zoom","cropSize","maxZoom","minZoom","restrictPosition","zoomSpeed","aspect","onCropChange","location","onCropComplete","croppedArea","cap","onZoomChange","newZoom","cropperImage","croppedImage","getElementById","htmlToImage","toPng","dataUrl","download","exportCard","cardToImportedCard","writeText","stringify","cardWrapper","cardImagePreview","App","store","header","headerCircle","content","exact","CardCreator","footer","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7e3dc8f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__GBXSi\",\"horizontal\":\"Form_horizontal__2UtlA\",\"inputField\":\"Form_inputField__1HngE\",\"inputLabel\":\"Form_inputLabel__322yj\",\"inputLabelButton\":\"Form_inputLabelButton__DsbXy\",\"inputTextarea\":\"Form_inputTextarea__3XaZo\",\"info\":\"Form_info__3KnDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"29.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"moveTextV\":\"CardDisplay_moveTextV__1rkAy\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"cardInfoWhite\":\"CardDisplay_cardInfoWhite__3lNt0\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"image\":\"CardDisplay_image__1Vf1q\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__1gcFF\",\"type\":\"EnergyPicker_type__3zMxj\",\"image\":\"EnergyPicker_image__n99hQ\",\"button\":\"EnergyPicker_button__3c3pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","import { ImportedCard, Card, Move, MoveType, ImagePathOptions } from 'interfaces';\r\n\r\nexport const relativePathPrefix = (path: string): string  => `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\r\n\r\nexport const cardToImportedCard = (card: Card): ImportedCard => ({\r\n  supertype: card.supertype,\r\n  name: card.name,\r\n  subname: card.subname,\r\n  backgroundImage: card.backgroundImage,\r\n  imageLayer1: card.imageLayer1,\r\n  imageLayer2: card.imageLayer2,\r\n  typeImage: card.typeImage,\r\n  customSetIcon: card.customSetIcon,\r\n  cardNumber: card.cardNumber,\r\n  totalInSet: card.totalInSet,\r\n  hitpoints: card.hitpoints,\r\n  illustrator: card.illustrator,\r\n  weaknessAmount: card.weaknessAmount,\r\n  resistanceAmount: card.resistanceAmount,\r\n  retreatCost: card.retreatCost,\r\n  ability: card.ability,\r\n  prevolveName: card.prevolveName,\r\n  prevolveImage: card.prevolveImage,\r\n  pokedexEntry: card.pokedexEntry,\r\n  description: card.description,\r\n  baseSetId: card.baseSet?.id,\r\n  setId: card.set?.id,\r\n  typeId: card.type?.id,\r\n  weaknessTypeId: card.weaknessType?.id,\r\n  resistanceTypeId: card.resistanceType?.id,\r\n  subtypeId: card.subtype?.id,\r\n  rarityId: card.rarity?.id,\r\n  variationId: card.variation?.id,\r\n  rotationId: card.rotation?.id,\r\n  rarityIconId: card.rarityIcon?.id,\r\n  moves: card.moves?.map((move: Move) => ({\r\n    name: move.name,\r\n    damage: move.damage,\r\n    text: move.text,\r\n    energyCost: move.energyCost.map((moveType: MoveType) => ({\r\n      amount: moveType.amount,\r\n      typeId: moveType.type.id,\r\n    })),\r\n  })),\r\n});\r\n\r\nconst cardOptionsToImage = (options: ImagePathOptions, folder?: string, supertype?: string) => {\r\n  // Format the options according to the formatting defined in the README\r\n  let filePath: string = relativePathPrefix(`/assets/${options.supertype || supertype}/`);\r\n  if(folder) {\r\n    filePath += `${folder}/`;\r\n  }\r\n  Object.values(options).forEach((param: string, i: number) => {\r\n    if(param !== undefined && param !== 'default') {\r\n      if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\r\n        (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\r\n        (options.rarity === 'Promo' && param === 'Basic')) {\r\n        return;\r\n      }\r\n      if(i !== 0) {\r\n        filePath += '_';\r\n      }\r\n      filePath += param;\r\n      if(param === 'Rainbow') {\r\n        if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\r\n          filePath += `_${options.variation}`;\r\n        }\r\n      }\r\n      if(param === 'V' && !options.rarity) {\r\n        filePath += '_Basic';\r\n      }\r\n    }\r\n  });\r\n  return `${filePath}.png`;\r\n}\r\n\r\nexport const getCardImage = (options: ImagePathOptions): string => {\r\n  let imagePath: string;\r\n  switch(options.supertype) {\r\n    case 'Pokemon':\r\n      // This one didnt have supertype before\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, subtype: options.subtype, variation: options.variation,\r\n        rarity: options.rarity, type: options.type }, options.type, options.supertype);\r\n      break;\r\n    case 'Energy':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type });\r\n      break;\r\n    case 'Trainer':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type, subtype: options.subtype });\r\n      break;\r\n    default:\r\n      imagePath = '';\r\n  }\r\n  return imagePath;\r\n}\r\n","import { relativePathPrefix } from \"services\";\r\n\r\nexport const getCardOptions = async () => {\r\n  try {\r\n    const response = await fetch(relativePathPrefix('/data/cardOptions.json'));\r\n    return response.json();\r\n  } catch(e) {\r\n    console.error(e);\r\n  }\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  subname?: string,\r\n}\r\n\r\nconst TrainerCard: React.FC<Props> = ({ name, description, type, subname }) => <>\r\n  <span className={styles.name}>{formatText(name)}</span>\r\n  <div className={styles.descriptionWrapper}>\r\n    <p className={styles.description}>{formatText(description)}</p>\r\n  </div>\r\n  {type?.hasSubname && <span className={styles.subname}>{formatText(subname)}</span>}\r\n</>\r\n\r\nexport default TrainerCard;\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  typeImage?: string,\r\n}\r\n\r\nconst EnergyCard: React.FC<Props> = ({ name, description, type, typeImage }) => <>\r\n  {type?.hasSpecialStyle && <>\r\n    <span className={styles.name}>{formatText(name)}</span>\r\n    <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\r\n      <p className={styles.description}>{formatText(description)}</p>\r\n    </div>\r\n  </>}\r\n  {typeImage &&\r\n    <img src={typeImage} className={`${styles.typeImage} ${type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />\r\n  }\r\n</>\r\n\r\nexport default EnergyCard;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Move } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  imagePath?: string,\r\n  card: Card,\r\n}\r\n\r\nconst PokemonCard: React.FC<Props> = ({ imagePath, card }) => {\r\n  useEffect(() => {\r\n    if(card.moves) {\r\n      let highestCost = 0;\r\n      card.moves.forEach((move) => {\r\n        let totalAmount: number = 0;\r\n        move.energyCost.forEach((energyCost) => totalAmount += energyCost.amount);\r\n        if(totalAmount > highestCost) {\r\n          highestCost = totalAmount;\r\n        }\r\n      });\r\n\r\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\r\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\r\n      moveNames.forEach((moveName) => {\r\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\r\n      });\r\n    }\r\n  }, [card.moves]);\r\n\r\n  const formatMoveCost = (move: Move) => {\r\n    let totalAmount: number = 0;\r\n    const moveImages = move.energyCost.map((moveType) => {\r\n      const returnValue: JSX.Element[] = [];\r\n      for(let i = 0; i < moveType.amount; i++) {\r\n        totalAmount++;\r\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\r\n      }\r\n      return returnValue;\r\n    });\r\n\r\n    if(totalAmount === 0) {\r\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\r\n    } else {\r\n      return moveImages;\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline || card.subtype?.hasNameOutline ? styles.nameOutline : ''}`}>\r\n      {formatText(card.name)}\r\n      {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\r\n      {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\r\n    </span>\r\n    <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\r\n      <span className={styles.hitpointsHP}>HP</span>\r\n      <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\r\n    </div>\r\n    {(card.subtype?.hasPrevolve && card.prevolveName) &&\r\n      <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\r\n    }\r\n    {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\r\n      <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\r\n    }\r\n    <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\r\n      {card.ability &&\r\n        <div className={styles.ability}>\r\n          <div className={styles.abilityNameWrapper}>\r\n            {card.subtype?.hasVStyle ?\r\n              <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\r\n              :\r\n              <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\r\n            }\r\n            <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\r\n          </div>\r\n          <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\r\n        </div>\r\n      }\r\n      {card.moves && (card.moves.map((move, i) =>\r\n        <div key={i}\r\n          className={`${i === 0 ? card.moves && card.moves.length > 1 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\r\n          {move.name &&\r\n            <div className={styles.moveNameWrapper}>\r\n              <div className={styles.moveCost}>\r\n                {formatMoveCost(move)}\r\n              </div>\r\n              <span className={`${styles.moveName} moveName`}>{move.name}</span>\r\n              <span className={styles.moveDamage}>{move.damage}</span>\r\n            </div>\r\n          }\r\n          <p className={`${styles.moveText} ${card.subtype?.hasVStyle ? styles.moveTextV : ''}`}>{formatText(move.text)}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\r\n      {card.weaknessType &&\r\n        <span className={styles.weakness}>\r\n          <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\r\n          <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\r\n        </span>\r\n      }\r\n      {card.resistanceType &&\r\n        <span className={styles.resistance}>\r\n          <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\r\n          <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\r\n        </span>\r\n      }\r\n      <div className={styles.retreatCost}>\r\n        {card.retreatCost ? Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\r\n          i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n    {!card.subtype?.noDescription &&\r\n      <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\r\n        <p className={styles.description}>{formatText(card.description)}</p>\r\n      </div>\r\n    }\r\n    {(card.subtype?.hasPrevolve && card.prevolveImage) &&\r\n      <div className={styles.prevolveImageWrapper}>\r\n        <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\r\n      </div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'interfaces';\r\nimport TrainerCard from './Trainer';\r\nimport styles from './CardDisplay.module.scss';\r\nimport EnergyCard from './Energy';\r\nimport PokemonCard from './Pokemon';\r\nimport { relativePathPrefix, getCardImage } from 'services';\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\nconst CardDisplay: React.FC<Props> = ({ card }) => {\r\n  const [imagePath, setImagePath] = useState<string>();\r\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\r\n\r\n  useEffect(() => {\r\n    if(supertype && type && baseSet) {\r\n      const newImage: string = getCardImage({baseSet: baseSet.shortName, type: type.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype, variation: variation?.shortName})\r\n      setImagePath(newImage);\r\n    }\r\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\r\n\r\n  return (\r\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\r\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\r\n      {supertype === 'Trainer' && <TrainerCard name={card.name} subname={card.subname} description={card.description} type={card.type} />}\r\n      {supertype === 'Energy' && <EnergyCard name={card.name} description={card.description} type={card.type} typeImage={card.typeImage} />}\r\n      {supertype === 'Pokemon' && <PokemonCard card={card} />}\r\n      {!(supertype === 'Energy' && card.type?.hasSpecialStyle) && <>\r\n        <div className={card.rarity?.hasNameOutline || card.subtype?.hasNameOutline ? styles.cardInfoWhite : ''}>\r\n          {(supertype !== 'Energy' && card.illustrator) && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\r\n          {card.customSetIcon ?\r\n            <img src={card.customSetIcon} alt='' className={styles.setIcon} />\r\n            :\r\n            card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />\r\n          }\r\n          {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\r\n          <span className={styles.setNumber}>\r\n            {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\r\n            {card.rarityIcon &&\r\n              <img alt={card.rarityIcon.name} className={styles.rarityIcon}\r\n                src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${(card.type?.hasWhiteText || card.subtype?.hasVStyle) ? '_white' : ''}.png`)}\r\n              />\r\n            }\r\n          </span>\r\n        </div>\r\n      </>}\r\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\r\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\r\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardDisplay;\r\n\r\nexport const formatText = (text: string | undefined) => {\r\n  if(text) {\r\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\r\n    if(chars) {\r\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\r\n      const textNoChars = text.split(/\\[.*?\\]/g);\r\n      const returnText: (JSX.Element | string)[] = [];\r\n      textNoChars.forEach((textElm, i) => {\r\n        returnText.push(textElm);\r\n        if(charsArr.length > i) {\r\n          if(charsArr[i].length > 1) {\r\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\r\n          } else {\r\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\r\n          }\r\n        }\r\n      });\r\n      return returnText;\r\n    } else {\r\n      return text;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface LabelButton {\r\n  name: string,\r\n  icon: IconDefinition,\r\n  onClick: () => void,\r\n}\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name?: string,\r\n  horizontal?: boolean,\r\n  buttons?: LabelButton[],\r\n}\r\n\r\nconst InputLabel: React.FC<Props> = ({ shortName, name, horizontal, buttons, children }) =>\r\n  <label htmlFor={shortName} className={`${styles.input} ${horizontal ? styles.horizontal : ''}`}>\r\n    {name &&\r\n      <div className={styles.inputLabel}>\r\n        <span>{name}</span>\r\n        {buttons &&\r\n          <span>\r\n            {buttons.map((button: LabelButton, i: number) =>\r\n              <FontAwesomeIcon icon={button.icon} title={button.name} className={styles.inputLabelButton} key={i}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  button.onClick();\r\n                }}\r\n              />\r\n            )}\r\n          </span>\r\n        }\r\n      </div>\r\n    }\r\n    {children}\r\n  </label>\r\n\r\nexport default InputLabel;\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  checked: boolean,\r\n  setter: (newValue: boolean) => void,\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({ shortName, name, checked, setter }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        checked={checked}\r\n        onChange={e => setter(e.currentTarget.checked)}\r\n        className={styles.inputField}\r\n        type='checkbox'\r\n      />\r\n  </InputLabel>\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './EnergyPicker.module.scss';\r\nimport { MoveType, Type } from 'interfaces';\r\nimport { relativePathPrefix } from 'services';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n  label: String,\r\n  types: Type[],\r\n  moveCost: MoveType[],\r\n  setMoveCost: (moveTypes: MoveType[]) => void,\r\n}\r\n\r\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\r\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const newMoveTypes: MoveType[] = [];\r\n    types.forEach((type) => {\r\n      if(type.supertype === 'Pokemon') {\r\n        newMoveTypes.push({\r\n          type,\r\n          amount: 0,\r\n        });\r\n      }\r\n    });\r\n    setMoveTypes(newMoveTypes);\r\n  }, [types]);\r\n\r\n  return (\r\n    <div>\r\n      <span>{label}</span>\r\n      <div className={styles.wrapper}>\r\n        {moveTypes.map((moveType, i) =>\r\n          <div className={styles.type} key={i}>\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount + 1;\r\n              } else {\r\n                type = {\r\n                  type: moveType.type,\r\n                  amount: 1,\r\n                };\r\n                newMoveCost.push(type);\r\n              }\r\n              setMoveCost(newMoveCost);\r\n            }}>\r\n              <FontAwesomeIcon icon={faChevronUp} />\r\n            </span>\r\n            <img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount - 1;\r\n                if(type.amount <= 0) {\r\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\r\n                }\r\n                setMoveCost(newMoveCost);\r\n              }\r\n            }}>\r\n              <FontAwesomeIcon icon={faChevronDown} />\r\n            </span>\r\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnergyPicker;\r\n","import React, { useRef, useState, useEffect } from 'react';\nimport styles from '../Form.module.scss';\nimport InputLabel from '../InputLabel';\nimport { faCropAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  shortName: string,\n  name?: string,\n  info?: string,\n  setter: (newValue:  any) => void,\n  onChange?: (newImage: string) => void,\n  croppable?: boolean,\n  cropperSetter?: (newImage: string, imageSetter: () => void) => void,\n}\n\nconst ImageInput: React.FC<Props> = ({ shortName, name, info, setter, onChange, croppable, cropperSetter }) => {\n  const [image, setImage] = useState<string>('');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const initialRender = useRef<boolean>(true);\n  const acceptedTypes = useRef<string[]>(['image/png', 'image/jpeg'])\n\n  useEffect(() => {\n    if(initialRender.current) {\n      initialRender.current = false;\n    } else {\n      setter(image);\n      onChange && onChange(image);\n      cropperSetter && cropperSetter(image, () => setter);\n    }\n  }, [image]);\n\n  return (\n    <InputLabel shortName={shortName} name={name} horizontal buttons={croppable ? [\n      {\n        name: 'Crop',\n        icon: faCropAlt,\n        onClick: () => cropperSetter && cropperSetter(image, () => setter),\n      },\n      {\n        name: 'Remove',\n        icon: faTimes,\n        onClick: () => {\n          setImage('');\n          if(inputRef.current) {\n            inputRef.current.value = '';\n          }\n        },\n      },\n    ] : []}>\n      {info && <span className={styles.info}>{info}</span>}\n      <input\n        ref={inputRef}\n        id={shortName}\n        name={shortName}\n        onChange={e => {\n          if(e.target.files && e.target.files[0] && acceptedTypes.current.includes(e.target.files[0].type)) {\n            setImage(window.URL.createObjectURL(e.target.files[0]));\n          } else {\n            setImage('');\n            e.target.value = '';\n          }\n        }}\n        className={styles.inputField}\n        type='file'\n        accept={acceptedTypes.current.join(',')}\n      />\n    </InputLabel>\n  )\n}\n\nexport default ImageInput;\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  value: string | number,\r\n  type: 'text' | 'number' | 'textarea',\r\n  min?: number,\r\n  max?: number,\r\n  horizontal?: boolean,\r\n  setter: (newValue: any) => void,\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ shortName, name, value, type, min, max, setter, horizontal }) =>\r\n  <InputLabel shortName={shortName} name={name} horizontal={horizontal || type === 'textarea'}>\r\n    {type !== 'textarea' ?\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        type={type}\r\n        min={min}\r\n        max={max}\r\n        onChange={e => setter(type === 'text' ? e.currentTarget.value : +e.currentTarget.value)}\r\n        className={styles.inputField}\r\n      />\r\n      :\r\n      <textarea\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        onChange={e => setter(e.currentTarget.value)}\r\n        className={`${styles.inputField} ${styles.inputTextarea}`}\r\n      ></textarea>\r\n    }\r\n  </InputLabel>\r\n\r\nexport default Input;\r\n","import React, { ChangeEvent } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  selectRef?: React.RefObject<HTMLSelectElement>,\r\n  onChange: (e: ChangeEvent<HTMLSelectElement>) => void,\r\n}\r\n\r\nconst Select: React.FC<Props> = ({ shortName, name, selectRef, onChange, children }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n    <select id={shortName} ref={selectRef} name={shortName} className={styles.inputField} onChange={onChange}>\r\n      {children}\r\n    </select>\r\n  </InputLabel>\r\n\r\nexport default Select;\r\n","import { Area } from \"react-easy-crop/types\"\r\n\r\nconst createImage = (url: string): Promise<HTMLImageElement> =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} imageSrc - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n */\r\nconst getCroppedImg = async (imageSrc: string, pixelCrop: Area): Promise<string> => {\r\n  let image: HTMLImageElement;\r\n  try {\r\n    image = await createImage(imageSrc);\r\n  } catch(e) {\r\n    return '';\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  if(ctx) {\r\n    // translate canvas context to a central location on image to allow rotating around the center.\r\n    ctx.translate(safeArea / 2, safeArea / 2);\r\n    ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n    // draw rotated image and store data.\r\n    ctx.drawImage(\r\n      image,\r\n      safeArea / 2 - image.width * 0.5,\r\n      safeArea / 2 - image.height * 0.5,\r\n    );\r\n    const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n    // set canvas width to final desired crop size - this will clear existing context\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // paste generated rotate image with correct offsets for x,y crop values.\r\n    ctx.putImageData(\r\n      data,\r\n      0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\r\n      0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y,\r\n    );\r\n  }\r\n\r\n  return new Promise(resolve =>\r\n    canvas.toBlob(\r\n      file => resolve(URL.createObjectURL(file)),\r\n      'image/png'\r\n    ));\r\n}\r\n\r\nexport default getCroppedImg;\r\n","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { CardOptionsState } from 'reducers/cardOptions';\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card, ImportedCard, ImportedMoveType } from 'interfaces';\nimport { bindActionCreators } from 'redux';\nimport { requestCardOptions } from 'actions';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport styles from './CardCreator.module.scss';\nimport CardDisplay from 'components/CardDisplay';\nimport { Select, Input, Checkbox, ImageInput, EnergyPicker} from 'components/FormElements';\nimport { relativePathPrefix, cardToImportedCard, getCardImage } from 'services';\nimport Cropper from 'react-easy-crop';\nimport { Point, Area } from 'react-easy-crop/types';\nimport getCroppedImg from 'cropImage';\n\ninterface Props {\n  cardOptionsState: CardOptionsState,\n  card?: ImportedCard,\n  requestCardOptions: () => Object,\n}\n\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, card, requestCardOptions }) => {\n  const importingCard = useRef<boolean>(false);\n  const initialImported = useRef<boolean>(false);\n  const [importingTrigger, setImportingTrigger] = useState<boolean>(false);\n  // Selectors\n  const [supertype, setSupertype] = useState<string>('Pokemon');\n  const [type, setType] = useState<Type>();\n  const [baseSet, setBaseSet] = useState<BaseSet>();\n  const [set, setSet] = useState<Set>();\n  const [rotation, setRotation] = useState<Rotation>();\n  const [variation, setVariation] = useState<Variation>();\n  const [subtype, setSubtype] = useState<Subtype>();\n  const [rarity, setRarity] = useState<Rarity>();\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\n  const [weaknessType, setWeaknessType] = useState<Type>();\n  const [resistanceType, setResistanceType] = useState<Type>();\n  // Selector refs\n  const baseSetRef = useRef<HTMLSelectElement>(null);\n  const supertypeRef = useRef<HTMLSelectElement>(null);\n  const typeRef = useRef<HTMLSelectElement>(null);\n  const subtypeRef = useRef<HTMLSelectElement>(null);\n  const variationRef = useRef<HTMLSelectElement>(null);\n  const rarityRef = useRef<HTMLSelectElement>(null);\n  const setIconRef = useRef<HTMLSelectElement>(null);\n  const rotationRef = useRef<HTMLSelectElement>(null);\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\n  // Inputs\n  const [name, setName] = useState<string>('');\n  const [prevolveName, setPrevolveName] = useState<string>('');\n  const [hitpoints, setHitpoints] = useState<number>(100);\n  const [subname, setSubname] = useState<string>('');\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\n  const [retreatCost, setRetreatCost] = useState<number>(1);\n  const [description, setDescription] = useState<string>('');\n  const [illustrator, setIllustrator] = useState<string>('');\n  const [cardNumber, setCardNumber] = useState<string>('');\n  const [totalInSet, setTotalInSet] = useState<string>('');\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\n  const [imageLayer1, setImageLayer1] = useState<string>('');\n  const [imageLayer2, setImageLayer2] = useState<string>('');\n  const [typeImage, setTypeImage] = useState<string>('');\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\n  const [hasCustomSetIcon, setHasCustomSetIcon] = useState<boolean>(false);\n  const [customSetIcon, setCustomSetIcon] = useState<string>('');\n  // Image cropper\n  const [cropArea, setCropArea] = useState<Point>({ x: 0, y: 0 });\n  const [cropZoom, setCropZoom] = useState<number>(1);\n  const [cropImage, setCropImage] = useState<string>('');\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState<Area>({ x: 0, y: 0, height: 0, width: 0 });\n  const [currentCropSetter, setCurrentCropSetter] = useState<Dispatch<SetStateAction<string>>>();\n  // Ability/Moves\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\n  const [abilityName, setAbilityName] = useState<string>('');\n  const [abilityText, setAbilityText] = useState<string>('');\n  const [move1Name, setMove1Name] = useState<string>('');\n  const [move1Damage, setMove1Damage] = useState<string>('');\n  const [move1Text, setMove1Text] = useState<string>('');\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\n  const [move2Name, setMove2Name] = useState<string>('');\n  const [move2Text, setMove2Text] = useState<string>('');\n  const [move2Damage, setMove2Damage] = useState<string>('');\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    requestCardOptions();\n  }, [requestCardOptions]);\n\n  useEffect(() => {\n    setType(cardOptionsState.cardOptions.types[0]);\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\n    setSet(cardOptionsState.cardOptions.sets[0]);\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\n  }, [cardOptionsState]);\n\n  /**\n   * Changes the types/subtypes etc to the first available one within their parent\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\n   */\n  useEffect(() => {\n    if(importingCard.current) {\n      return;\n    }\n    if(typeRef.current) {\n      const { selectedIndex, options } = typeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newType = cardOptionsState.cardOptions.types.find((a: Type) => a.id === +value);\n      if(newType && newType !== type) {\n        setType(newType);\n      }\n    } else {\n      setType(undefined);\n    }\n    if(subtypeRef.current) {\n      const { selectedIndex, options } = subtypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSubtype = cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +value);\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\n        setSubtype(newSubtype);\n      }\n    } else {\n      setSubtype(undefined);\n    }\n    if(variationRef.current) {\n      const { selectedIndex, options } = variationRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newVariation = cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +value);\n      if(newVariation && newVariation !== variation) {\n        setVariation(newVariation);\n      }\n    } else {\n      setVariation(undefined);\n    }\n    if(rarityRef.current) {\n      const { selectedIndex, options } = rarityRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newRarity = cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +value);\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\n        setRarity(newRarity);\n      }\n    } else {\n      setRarity(undefined);\n    }\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\n\n  /**\n   * Turns state data into a Card object\n   */\n  const makeCard = (): Card => ({\n    baseSet,\n    supertype,\n    type,\n    set,\n    customSetIcon: hasCustomSetIcon ? customSetIcon : undefined,\n    variation,\n    subtype,\n    rarity,\n    name,\n    prevolveName,\n    prevolveImage,\n    hitpoints,\n    subname,\n    typeImage,\n    pokedexEntry,\n    ability: hasAbility ? {\n      name: abilityName,\n      text: abilityText,\n    } : undefined,\n    moves: [\n      {\n        name: move1Name,\n        text: move1Text,\n        damage: move1Damage,\n        energyCost: move1Cost,\n      },\n      ...(!hasAbility && hasSecondMove ? [{\n        name: move2Name,\n        text: move2Text,\n        damage: move2Damage,\n        energyCost: move2Cost,\n      }] : []),\n    ],\n    weaknessType,\n    weaknessAmount,\n    resistanceType,\n    resistanceAmount,\n    retreatCost,\n    illustrator,\n    cardNumber,\n    totalInSet,\n    rotation,\n    rarityIcon,\n    description,\n    backgroundImage,\n    imageLayer1,\n    imageLayer2,\n  });\n\n  const downloadCard = () => {\n    const card = document.getElementById('card');\n    if(card) {\n      htmlToImage.toPng(card)\n        .then((dataUrl) => {\n          download(dataUrl, `${name || 'card'}${subtype?.hasVSymbol ? ' V' : subtype?.hasVMaxSymbol ? ' VMAX' : ''}.png`);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const exportCard = () => {\n    const card: Card = makeCard();\n    const exportCard: ImportedCard = cardToImportedCard(card);\n    navigator.clipboard.writeText(JSON.stringify(exportCard));\n  }\n\n  /**\n   * Sets all card data, selectors and energy pickers to certain values based on the cardObj parameter\n   */\n  const importCard = (cardObj: ImportedCard) => {\n    importingCard.current = true;\n    // Base values\n    setName(cardObj.name || '');\n    setPrevolveName(cardObj.prevolveName || '');\n    setPrevolveImage(relativePathPrefix(cardObj.prevolveImage || ''));\n    setHitpoints(cardObj.hitpoints || 0);\n    setSubname(cardObj.subname || '');\n    setTypeImage(relativePathPrefix(cardObj.typeImage || ''));\n    setPokedexEntry(cardObj.pokedexEntry || '');\n    setWeaknessAmount(cardObj.weaknessAmount || 0);\n    setResistanceAmount(cardObj.resistanceAmount || 0);\n    setRetreatCost(cardObj.retreatCost || 0);\n    setIllustrator(cardObj.illustrator || '');\n    setCardNumber(cardObj.cardNumber || '');\n    setTotalInSet(cardObj.totalInSet || '');\n    setDescription(cardObj.description || '');\n    setBackgroundImage(relativePathPrefix(cardObj.backgroundImage || ''));\n    setImageLayer1(relativePathPrefix(cardObj.imageLayer1 || ''));\n    setImageLayer2(relativePathPrefix(cardObj.imageLayer2 || ''));\n    if(cardObj.customSetIcon) {\n      setHasCustomSetIcon(true);\n      setCustomSetIcon(cardObj.customSetIcon);\n    }\n    if(cardObj.ability) {\n      setHasAbility(true);\n      setAbilityName(cardObj.ability.name);\n      setAbilityText(cardObj.ability.text);\n    }\n    if(cardObj.moves) {\n      if(cardObj.moves[0]){\n        setMove1Name(cardObj.moves[0].name);\n        setMove1Damage(cardObj.moves[0].damage);\n        setMove1Text(cardObj.moves[0].text);\n        setMove1Cost(cardObj.moves[0].energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\n          const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\n          if(newType) {\n            result.push({\n              amount: moveType.amount,\n              type: newType,\n            });\n          }\n          return result;\n        }, []));\n      }\n      if(cardObj.moves[1]) {\n        setHasSecondMove(true);\n        setMove2Name(cardObj.moves[1].name);\n        setMove2Damage(cardObj.moves[1].damage);\n        setMove2Text(cardObj.moves[1].text);\n        setMove2Cost(cardObj.moves[1].energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\n          const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\n          if(newType) {\n            result.push({\n              amount: moveType.amount,\n              type: newType,\n            });\n          }\n          return result;\n        }, []));\n      }\n    }\n    // Selectors\n    const newBaseSet: BaseSet | undefined = cardOptionsState.cardOptions.baseSets.find((a) => a.id === cardObj.baseSetId);\n    if(newBaseSet) {\n      setBaseSet(newBaseSet);\n      if(baseSetRef.current && newBaseSet) {\n        baseSetRef.current.selectedIndex = Array.from(baseSetRef.current.options).findIndex((t) => +t.value === newBaseSet.id);\n      }\n    } else {\n      if(baseSetRef.current) {\n        baseSetRef.current.selectedIndex = 0;\n      }\n      setBaseSet(undefined);\n    }\n    const newSupertype = cardObj.supertype;\n    if(newSupertype) {\n      setSupertype(newSupertype);\n      if(supertypeRef.current) {\n        supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => t.value === newSupertype);\n      }\n    } else {\n      if(supertypeRef.current) {\n        supertypeRef.current.selectedIndex = 0;\n      }\n      setSupertype('Pokemon');\n    }\n    const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.typeId);\n    if(newType) {\n      setType(newType);\n      if(typeRef.current) {\n        typeRef.current.selectedIndex = Array.from(typeRef.current.options).findIndex((t) => +t.value === newType.id);\n      }\n    } else {\n      if(typeRef.current) {\n        typeRef.current.selectedIndex = 0;\n      }\n      setType(undefined);\n    }\n    if(cardObj.subtypeId) {\n      const newSubtype: Subtype | undefined = cardOptionsState.cardOptions.subtypes.find((a) => a.id === cardObj.subtypeId);\n      if(newSubtype) {\n        setSubtype(newSubtype);\n        if(subtypeRef.current) {\n          subtypeRef.current.selectedIndex = Array.from(subtypeRef.current.options).findIndex((t) => +t.value === newSubtype.id);\n        }\n      }\n    } else {\n      if(subtypeRef.current) {\n        subtypeRef.current.selectedIndex = 0;\n      }\n      setSubtype(undefined);\n    }\n    if(cardObj.setId) {\n      const newSet: Set | undefined = cardOptionsState.cardOptions.sets.find((a) => a.id === cardObj.setId);\n      if(newSet) {\n        setSet(newSet);\n        if(setIconRef.current) {\n          setIconRef.current.selectedIndex = Array.from(setIconRef.current.options).findIndex((t) => +t.value === newSet.id);\n        }\n      }\n    } else {\n      if(setIconRef.current) {\n        setIconRef.current.selectedIndex = 0;\n      }\n      setSet(undefined);\n    }\n    if(cardObj.weaknessTypeId) {\n      const newWeaknessType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.weaknessTypeId);\n      if(newWeaknessType) {\n        setWeaknessType(newWeaknessType);\n        if(weaknessTypeRef.current) {\n          weaknessTypeRef.current.selectedIndex = Array.from(weaknessTypeRef.current.options).findIndex((t) => +t.value === newWeaknessType.id);\n        }\n      }\n    } else {\n      if(weaknessTypeRef.current) {\n        weaknessTypeRef.current.selectedIndex = 0;\n      }\n      setWeaknessType(undefined);\n    }\n    if(cardObj.resistanceTypeId) {\n      const newResistanceType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.resistanceTypeId);\n      if(newResistanceType) {\n        setResistanceType(newResistanceType);\n        if(resistanceTypeRef.current) {\n          resistanceTypeRef.current.selectedIndex = Array.from(resistanceTypeRef.current.options).findIndex((t) => +t.value === newResistanceType.id);\n        }\n      }\n    } else {\n      if(resistanceTypeRef.current) {\n        resistanceTypeRef.current.selectedIndex = 0;\n      }\n      setResistanceType(undefined);\n    }\n    if(cardObj.rotationId) {\n      const newRotation: Rotation | undefined = cardOptionsState.cardOptions.rotations.find((a) => a.id === cardObj.rotationId);\n      if(newRotation) {\n        setRotation(newRotation);\n        if(rotationRef.current) {\n          rotationRef.current.selectedIndex = Array.from(rotationRef.current.options).findIndex((t) => +t.value === newRotation.id);\n        }\n      }\n    } else {\n      if(rotationRef.current) {\n        rotationRef.current.selectedIndex = 0;\n      }\n      setRotation(undefined);\n    }\n    if(cardObj.variationId) {\n      const newVariation: Variation | undefined = cardOptionsState.cardOptions.variations.find((a) => a.id === cardObj.variationId);\n      if(newVariation) {\n        setVariation(newVariation);\n        if(variationRef.current) {\n          variationRef.current.selectedIndex = Array.from(variationRef.current.options).findIndex((t) => +t.value === newVariation.id);\n        }\n      }\n    } else {\n      if(variationRef.current) {\n        variationRef.current.selectedIndex = 0;\n      }\n      setVariation(undefined);\n    }\n    if(cardObj.rarityId) {\n      const newRarity: Rarity | undefined = cardOptionsState.cardOptions.rarities.find((a) => a.id === cardObj.rarityId);\n      if(newRarity) {\n        setRarity(newRarity);\n        if(rarityRef.current) {\n          rarityRef.current.selectedIndex = Array.from(rarityRef.current.options).findIndex((t) => +t.value === newRarity.id);\n        }\n      }\n    } else {\n      if(rarityRef.current) {\n        rarityRef.current.selectedIndex = 0;\n      }\n      setRarity(undefined);\n    }\n    if(cardObj.rarityIconId) {\n      const newRarityIcon: RarityIcon | undefined = cardOptionsState.cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIconId);\n      if(newRarityIcon) {\n        setRarityIcon(newRarityIcon);\n        if(rarityIconRef.current) {\n          rarityIconRef.current.selectedIndex = Array.from(rarityIconRef.current.options).findIndex((t) => +t.value === newRarityIcon.id);\n        }\n      }\n    } else {\n      if(rarityIconRef.current) {\n        rarityIconRef.current.selectedIndex = 0;\n      }\n      setRarityIcon(undefined);\n    }\n    setImportingTrigger(!importingTrigger);\n  }\n\n  /**\n   * Callback for the function above\n   */\n  useEffect(() => {\n    importingCard.current = false;\n  }, [importingTrigger]);\n\n  useEffect(() => {\n    // Initially import the prop-card once the selectors have loaded\n    if(!initialImported.current && card && subtypeRef.current) {\n      importCard(card);\n      initialImported.current = true;\n    }\n  }, [card, importCard]);\n\n  const resetCropper = (newImage: string, imageSetter: () => void) => {\n    setCropImage(newImage);\n    setCurrentCropSetter(imageSetter);\n    setCropArea({ x: 0, y: 0});\n    setCroppedAreaPixels({ ...croppedAreaPixels, x: 0, y: 0});\n    setCropZoom(1);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.form}>\n        <button className={styles.button} onClick={e => {\n          navigator.clipboard.readText()\n            .then((value: string) => {\n              importCard(JSON.parse(value) as ImportedCard);\n            })\n            .catch(console.error);\n        }}>{'Import from clipboard'}</button>\n        <div className={styles.seperator}>\n          <Select name='Base Set' shortName='baseSet' selectRef={baseSetRef} onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\n              <option value={value.id} key={i}>{value.name}</option>\n            )}\n          </Select>\n          <Select name='Supertype' shortName='supertype' selectRef={supertypeRef} onChange={e => setSupertype(e.currentTarget.value)}>\n            <option value={'Pokemon'}>{'Pokémon'}</option>\n            <option value={'Trainer'}>{'Trainer'}</option>\n            <option value={'Energy'}>{'Energy'}</option>\n          </Select>\n          <Select name='Type' shortName='type' selectRef={typeRef} onChange={e => setType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n              if(supertype !== value.supertype) {\n                return false;\n              } else {\n                return <option value={value.id} key={i}>{value.name}</option>;\n              }\n            })}\n          </Select>\n          {type?.hasSubtypes && supertype !== 'Energy' &&\n            <Select name='Subtype' shortName='subtype' selectRef={subtypeRef} onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\n              {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\n                if(!value.types.includes(type?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </Select>\n          }\n          {subtype?.hasVariations && supertype !== 'Energy' && supertype !== 'Trainer' &&\n            <Select name='Variation' shortName='variation' selectRef={variationRef} onChange={e => setVariation(cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\n                if(!value.subtypes.includes(subtype?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </Select>\n          }\n          {supertype !== 'Energy' && supertype !== 'Trainer' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) &&\n            <Select name='Rarity' shortName='rarity' selectRef={rarityRef} onChange={e => setRarity(cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\n              <option value={'default'}>{'Default'}</option>\n              {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\n                  || (includesSubtype && (includesVariation || !variation))\n                  || includesVariation) {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                } else {\n                  return false;\n                }\n              })}\n            </Select>\n          }\n          {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n            <Select name='Rotation' shortName='rotation' selectRef={rotationRef} onChange={e => setRotation(cardOptionsState.cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </Select>\n            <Select name='Rarity Icons' shortName='rarityIcon' selectRef={rarityIconRef} onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\n              <option value={'none'}>{'None'}</option>\n              {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </Select>\n            <Checkbox name='Custom Set Icon' shortName='customSetIcon' checked={hasCustomSetIcon} setter={setHasCustomSetIcon} />\n            {hasCustomSetIcon ?\n              <ImageInput shortName='customSetIcon' setter={setCustomSetIcon} />\n              :\n              <Select name='Set Icon' shortName='set' selectRef={setIconRef} onChange={e => setSet(cardOptionsState.cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\n                  <option value={value.id} key={i}>{value.name}</option>\n                )}\n              </Select>\n            }\n          </>}\n        </div>\n        {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n          <div className={styles.seperator}>\n            <Input type='text' name='Name' shortName='name' value={name} setter={setName} />\n            {supertype === 'Pokemon' &&\n              <Input type='number' name='Hitpoints' shortName='hitpoints' value={hitpoints} setter={setHitpoints} min={0} max={999} />\n            }\n            {subtype?.hasPrevolve && <>\n              <Input type='text' name='Prevolve Name' shortName='prevolveName' value={prevolveName} setter={setPrevolveName} />\n              <ImageInput name='Prevolve Image' shortName='prevolveImage' setter={setPrevolveImage} />\n            </>}\n            {subtype?.hasPokedexEntry &&\n              <Input type='text' horizontal name='Pokédex Entry' shortName='pokedexEntry' value={pokedexEntry} setter={setPokedexEntry} />\n            }\n            {type?.hasSubname &&\n              <Input type='text' name='Subname' shortName='subname' value={subname} setter={setSubname} />\n            }\n          </div>\n          {supertype === 'Pokemon' && <>\n            <div className={styles.seperator}>\n              <Checkbox name='Has Ability' shortName='hasAbility' checked={hasAbility} setter={setHasAbility} />\n              {hasAbility && <>\n                <Input type='text' name='Ability Name' shortName='abilityName' value={abilityName} setter={setAbilityName} />\n                <Input type='textarea' name='Ability Text' shortName='abilityText' value={abilityText} setter={setAbilityText} />\n              </>}\n            </div>\n            <div className={styles.seperator}>\n              <Input type='text' name='Move Name' shortName='move1Name' value={move1Name} setter={setMove1Name} />\n              <Input type='text' name='Move Damage' shortName='move1Damage' value={move1Damage} setter={setMove1Damage} />\n              <Input type='textarea' horizontal name='Move Text' shortName='move1Text' value={move1Text} setter={setMove1Text} />\n              <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\n            </div>\n            {!hasAbility &&\n              <div className={styles.seperator}>\n                <Checkbox name='Has Second Move' shortName='hasSecondMove' checked={hasSecondMove} setter={setHasSecondMove} />\n                {hasSecondMove && <>\n                  <Input type='text' name='Move Name' shortName='move2Name' value={move2Name} setter={setMove2Name} />\n                  <Input type='text' name='Move Damage' shortName='move2Damage' value={move2Damage} setter={setMove2Damage} />\n                  <Input type='textarea' name='Move Text' shortName='move2Text' value={move2Text} setter={setMove2Text} />\n                  <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\n                </>}\n              </div>\n            }\n            <div className={styles.seperator}>\n              <Select name='Weakness Type' shortName='weaknessType' selectRef={weaknessTypeRef} onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                  if(supertype !== value.supertype) {\n                    return false;\n                  } else {\n                    return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </Select>\n              <Input type='number' name='Weakness Amount' shortName='weaknessAmount' value={weaknessAmount} setter={setWeaknessAmount} max={99} min={0} />\n              <Select name='Resistance Type' shortName='resistanceType' selectRef={resistanceTypeRef} onChange={e => setResistanceType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                <option value={'none'}>{'None'}</option>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                  if(supertype !== value.supertype) {\n                    return false;\n                  } else {\n                    return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </Select>\n              {resistanceType &&\n                <Input type='number' name='Resistance Amount' shortName='resistanceAmount' value={resistanceAmount} setter={setResistanceAmount} max={99} min={0} />\n              }\n              <Input type='number' name='Retreat Cost' shortName='retreatCost' value={retreatCost} setter={setRetreatCost} max={5} min={0} />\n            </div>\n          </>}\n          {!subtype?.noDescription &&\n            <div className={styles.seperator}>\n              <Input type='textarea' name='Description' shortName='description' value={description} setter={setDescription} />\n            </div>\n          }\n          <div className={styles.seperator}>\n            {supertype !== 'Energy' &&\n              <Input type='text' name='Illustrator' shortName='illustrator' value={illustrator} setter={setIllustrator} />\n            }\n            <Input type='text' name='Card Number' shortName='cardNumber' value={cardNumber} setter={setCardNumber} />\n            <Input type='text' name='Total In Set' shortName='totalInSet' value={totalInSet} setter={setTotalInSet} />\n          </div>\n        </>}\n        <div className={styles.seperator}>\n          <span className={styles.info}>{'Card dimensions are 747w × 1038h'}</span>\n          {currentCropSetter &&\n            <>\n              <div className={styles.cropperWrapper}>\n                <Cropper\n                  image={cropImage}\n                  crop={cropArea}\n                  zoom={cropZoom}\n                  cropSize={{ width: 320, height: 444.66 }} // Based on aspect ratio\n                  maxZoom={100}\n                  minZoom={.1}\n                  restrictPosition={false}\n                  zoomSpeed={.1}\n                  aspect={747 / 1038}\n                  onCropChange={(location: Point) => setCropArea(location)}\n                  onCropComplete={async (croppedArea: Area, cap: Area) => setCroppedAreaPixels(cap)}\n                  onZoomChange={(newZoom: number) => setCropZoom(newZoom)}\n                />\n                <img alt='' src={getCardImage({baseSet: baseSet?.shortName, type: type?.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype, variation: variation?.shortName})} className={styles.cropperImage} />\n              </div>\n              <button className={styles.button} onClick={async () => {\n                const croppedImage = await getCroppedImg(cropImage, croppedAreaPixels);\n                currentCropSetter && currentCropSetter(croppedImage);\n              }}>\n                {'Apply crop'}\n              </button>\n            </>\n          }\n          <ImageInput name='Background Image' shortName='backgroundImage' info='Placed behind everything'\n            setter={setBackgroundImage}\n            croppable cropperSetter={resetCropper}\n          />\n          <ImageInput name='Card Image' shortName='imageLayer1' info='Placed in front of background'\n            setter={setImageLayer1}\n            croppable cropperSetter={resetCropper}\n          />\n          <ImageInput name='Top Image' shortName='imageLayer2' info='Placed on top of the card image'\n            setter={setImageLayer2}\n            croppable cropperSetter={resetCropper}\n          />\n          {supertype === 'Energy' &&\n            <ImageInput name='Type Image' shortName='typeImage' info=\"The energy's top right icon\" setter={setTypeImage} />\n          }\n        </div>\n        <button className={styles.button} onClick={downloadCard}>{'Download as image'}</button>\n        <button className={styles.button} onClick={exportCard}>{'Export to clipboard'}</button>\n      </div>\n      <div className={styles.cardWrapper}>\n        <CardDisplay card={makeCard()} />\n        <div id='imagePreview' className={styles.cardImagePreview}></div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport CardCreatorPage from 'pages/CardCreator';\r\nimport styles from './App.module.scss';\r\nimport { Switch, BrowserRouter as Router, Route, } from 'react-router-dom';\r\nimport card from './garbodor.json';\r\nimport { ImportedCard } from 'interfaces';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className={styles.wrapper}>\r\n        <header className={styles.header}>\r\n          <div className={styles.headerCircle} />\r\n        </header>\r\n        <div className={styles.content}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/preset'>\r\n                <CardCreatorPage card={card as ImportedCard} />\r\n              </Route>\r\n              <Route path=''>\r\n                <CardCreatorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n        <footer className={styles.footer} />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"form\":\"CardCreator_form__2CplI\",\"seperator\":\"CardCreator_seperator__1YR8e\",\"button\":\"CardCreator_button__2OfjR\",\"info\":\"CardCreator_info__2jpEw\",\"cardWrapper\":\"CardCreator_cardWrapper__2nTPg\",\"cardImagePreview\":\"CardCreator_cardImagePreview__n49nU\",\"cropperWrapper\":\"CardCreator_cropperWrapper__37W8W\",\"cropperImage\":\"CardCreator_cropperImage__1AZT-\"};"],"sourceRoot":""}