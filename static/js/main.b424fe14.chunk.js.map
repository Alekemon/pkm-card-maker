{"version":3,"sources":["components/CardDisplay/CardDisplay.module.scss","components/FormElements/EnergyPicker/EnergyPicker.module.scss","App.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","services.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/index.tsx","components/FormElements/InputLabel/index.tsx","components/FormElements/Checkbox/index.tsx","components/FormElements/EnergyPicker/index.tsx","components/FormElements/ImageInput/index.tsx","components/FormElements/Input/index.tsx","components/FormElements/Select/index.tsx","cropImage.ts","components/FormElements/Button/index.tsx","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx","pages/CardCreator/CardCreator.module.scss","components/FormElements/Form.module.scss"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","relativePathPrefix","path","process","cardOptionsToImage","options","folder","supertype","filePath","Object","values","forEach","param","i","undefined","rarity","variation","getCardImage","imagePath","baseSet","subtype","getCardOptions","a","fetch","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","name","description","subname","className","styles","formatText","descriptionWrapper","hasSubname","EnergyCard","typeImage","hasSpecialStyle","descriptionWrapperEnergy","src","shortName","typeImageSpecial","alt","PokemonCard","card","useEffect","moves","highestCost","move","totalAmount","energyCost","amount","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","Math","max","namePokemon","hasNameOutline","nameOutline","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hasVStyle","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","text","map","key","moveMultiple","moveV","moveNameWrapper","moveCost","moveImages","moveType","returnValue","push","moveEnergy","formatMoveCost","moveDamage","damage","moveText","moveTextV","typeBar","hasBlackTopText","hasWhiteTopText","whiteText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","noDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","CardDisplay","useState","setImagePath","set","newImage","hasWhiteText","id","backgroundImage","Trainer","Energy","Pokemon","cardInfoWhite","illustrator","customSetIcon","setIcon","number","rotation","setNumber","cardNumber","totalInSet","rarityIcon","imageLayer1","image","imageLayer2","background","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","InputLabel","horizontal","buttons","children","htmlFor","input","inputLabel","button","icon","title","inputLabelButton","onClick","preventDefault","Checkbox","checked","setter","onChange","currentTarget","inputField","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","wrapper","newMoveCost","find","faCaretUp","splice","indexOf","faCaretDown","ImageInput","info","croppable","cropperSetter","setImage","inputRef","useRef","initialRender","acceptedTypes","current","log","faCropAlt","faTimes","value","ref","target","files","includes","window","URL","createObjectURL","file","accept","join","Input","min","inputTextarea","Select","selectRef","createImage","url","Promise","resolve","reject","Image","addEventListener","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","createElement","ctx","getContext","maxSize","width","height","safeArea","sqrt","translate","drawImage","data","getImageData","putImageData","x","y","toBlob","Button","connect","cardOptionsState","dispatch","bindActionCreators","importingCard","initialImported","importingTrigger","setImportingTrigger","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasCustomSetIcon","setHasCustomSetIcon","setCustomSetIcon","cropArea","setCropArea","cropZoom","setCropZoom","cropImage","setCropImage","croppedAreaPixels","setCroppedAreaPixels","currentCropSetter","setCurrentCropSetter","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","selectedIndex","newType","newSubtype","newVariation","newRarity","makeCard","importCard","cardObj","reduce","result","typeId","newBaseSet","baseSetId","findIndex","t","newSupertype","subtypeId","setId","newSet","weaknessTypeId","newWeaknessType","resistanceTypeId","newResistanceType","rotationId","newRotation","variationId","rarityId","rarityIconId","newRarityIcon","resetCropper","imageSetter","form","seperator","navigator","clipboard","readText","then","JSON","parse","catch","hasSubtypes","subtypeOptional","hasVariations","includesType","includesSubtype","includesVariation","disabled","cropperWrapper","crop","zoom","cropSize","maxZoom","minZoom","restrictPosition","zoomSpeed","aspect","onCropChange","location","onCropComplete","croppedArea","cap","onZoomChange","newZoom","cropperImage","buttonCrop","croppedImage","buttonDownload","getElementById","htmlToImage","toPng","dataUrl","download","exportCard","cardToImportedCard","writeText","stringify","cardWrapper","App","store","header","headerCircle","content","exact","CardCreator","footer","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b424fe14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"29.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"moveTextV\":\"CardDisplay_moveTextV__1rkAy\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"cardInfoWhite\":\"CardDisplay_cardInfoWhite__3lNt0\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"image\":\"CardDisplay_image__1Vf1q\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\",\"background\":\"CardDisplay_background__20FmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__1gcFF\",\"type\":\"EnergyPicker_type__3zMxj\",\"image\":\"EnergyPicker_image__n99hQ\",\"button\":\"EnergyPicker_button__3c3pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","import { ImportedCard, Card, Move, MoveType, ImagePathOptions } from 'interfaces';\r\n\r\nexport const relativePathPrefix = (path: string): string  => `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\r\n\r\nexport const cardToImportedCard = (card: Card): ImportedCard => ({\r\n  supertype: card.supertype,\r\n  name: card.name,\r\n  subname: card.subname,\r\n  backgroundImage: card.backgroundImage,\r\n  imageLayer1: card.imageLayer1,\r\n  imageLayer2: card.imageLayer2,\r\n  typeImage: card.typeImage,\r\n  customSetIcon: card.customSetIcon,\r\n  cardNumber: card.cardNumber,\r\n  totalInSet: card.totalInSet,\r\n  hitpoints: card.hitpoints,\r\n  illustrator: card.illustrator,\r\n  weaknessAmount: card.weaknessAmount,\r\n  resistanceAmount: card.resistanceAmount,\r\n  retreatCost: card.retreatCost,\r\n  ability: card.ability,\r\n  prevolveName: card.prevolveName,\r\n  prevolveImage: card.prevolveImage,\r\n  pokedexEntry: card.pokedexEntry,\r\n  description: card.description,\r\n  baseSetId: card.baseSet?.id,\r\n  setId: card.set?.id,\r\n  typeId: card.type?.id,\r\n  weaknessTypeId: card.weaknessType?.id,\r\n  resistanceTypeId: card.resistanceType?.id,\r\n  subtypeId: card.subtype?.id,\r\n  rarityId: card.rarity?.id,\r\n  variationId: card.variation?.id,\r\n  rotationId: card.rotation?.id,\r\n  rarityIconId: card.rarityIcon?.id,\r\n  moves: card.moves?.map((move: Move) => ({\r\n    name: move.name,\r\n    damage: move.damage,\r\n    text: move.text,\r\n    energyCost: move.energyCost.map((moveType: MoveType) => ({\r\n      amount: moveType.amount,\r\n      typeId: moveType.type.id,\r\n    })),\r\n  })),\r\n});\r\n\r\nconst cardOptionsToImage = (options: ImagePathOptions, folder?: string, supertype?: string) => {\r\n  // Format the options according to the formatting defined in the README\r\n  let filePath: string = relativePathPrefix(`/assets/${options.supertype || supertype}/`);\r\n  if(folder) {\r\n    filePath += `${folder}/`;\r\n  }\r\n  Object.values(options).forEach((param: string, i: number) => {\r\n    if(param !== undefined && param !== 'default') {\r\n      if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\r\n        (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\r\n        (options.rarity === 'Promo' && param === 'Basic')) {\r\n        return;\r\n      }\r\n      if(i !== 0) {\r\n        filePath += '_';\r\n      }\r\n      filePath += param;\r\n      if(param === 'Rainbow') {\r\n        if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\r\n          filePath += `_${options.variation}`;\r\n        }\r\n      }\r\n      if(param === 'V' && !options.rarity) {\r\n        filePath += '_Basic';\r\n      }\r\n    }\r\n  });\r\n  return `${filePath}.png`;\r\n}\r\n\r\nexport const getCardImage = (options: ImagePathOptions): string => {\r\n  let imagePath: string;\r\n  switch(options.supertype) {\r\n    case 'Pokemon':\r\n      // This one didnt have supertype before\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, subtype: options.subtype, variation: options.variation,\r\n        rarity: options.rarity, type: options.type }, options.type, options.supertype);\r\n      break;\r\n    case 'Energy':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type });\r\n      break;\r\n    case 'Trainer':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type, subtype: options.subtype });\r\n      break;\r\n    default:\r\n      imagePath = '';\r\n  }\r\n  return imagePath;\r\n}\r\n","import { relativePathPrefix } from \"services\";\r\n\r\nexport const getCardOptions = async () => {\r\n  try {\r\n    const response = await fetch(relativePathPrefix('/data/cardOptions.json'));\r\n    return response.json();\r\n  } catch(e) {\r\n    console.error(e);\r\n  }\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  subname?: string,\r\n}\r\n\r\nconst TrainerCard: React.FC<Props> = ({ name, description, type, subname }) => <>\r\n  <span className={styles.name}>{formatText(name)}</span>\r\n  <div className={styles.descriptionWrapper}>\r\n    <p className={styles.description}>{formatText(description)}</p>\r\n  </div>\r\n  {type?.hasSubname && <span className={styles.subname}>{formatText(subname)}</span>}\r\n</>\r\n\r\nexport default TrainerCard;\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  typeImage?: string,\r\n}\r\n\r\nconst EnergyCard: React.FC<Props> = ({ name, description, type, typeImage }) => <>\r\n  {type?.hasSpecialStyle && <>\r\n    <span className={styles.name}>{formatText(name)}</span>\r\n    <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\r\n      <p className={styles.description}>{formatText(description)}</p>\r\n    </div>\r\n  </>}\r\n  {typeImage &&\r\n    <img src={typeImage} className={`${styles.typeImage} ${type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />\r\n  }\r\n</>\r\n\r\nexport default EnergyCard;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Move } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  imagePath?: string,\r\n  card: Card,\r\n}\r\n\r\nconst PokemonCard: React.FC<Props> = ({ imagePath, card }) => {\r\n  useEffect(() => {\r\n    if(card.moves) {\r\n      let highestCost = 0;\r\n      card.moves.forEach((move) => {\r\n        let totalAmount: number = 0;\r\n        move.energyCost.forEach((energyCost) => totalAmount += energyCost.amount);\r\n        if(totalAmount > highestCost) {\r\n          highestCost = totalAmount;\r\n        }\r\n      });\r\n\r\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\r\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\r\n      moveNames.forEach((moveName) => {\r\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\r\n      });\r\n    }\r\n  }, [card.moves]);\r\n\r\n  const formatMoveCost = (move: Move) => {\r\n    let totalAmount: number = 0;\r\n    const moveImages = move.energyCost.map((moveType) => {\r\n      const returnValue: JSX.Element[] = [];\r\n      for(let i = 0; i < moveType.amount; i++) {\r\n        totalAmount++;\r\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\r\n      }\r\n      return returnValue;\r\n    });\r\n\r\n    if(totalAmount === 0) {\r\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\r\n    } else {\r\n      return moveImages;\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline || card.subtype?.hasNameOutline ? styles.nameOutline : ''}`}>\r\n      {formatText(card.name)}\r\n      {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\r\n      {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\r\n    </span>\r\n    <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\r\n      <span className={styles.hitpointsHP}>HP</span>\r\n      <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\r\n    </div>\r\n    {(card.subtype?.hasPrevolve && card.prevolveName) &&\r\n      <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\r\n    }\r\n    {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\r\n      <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\r\n    }\r\n    <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\r\n      {card.ability &&\r\n        <div className={styles.ability}>\r\n          <div className={styles.abilityNameWrapper}>\r\n            {card.subtype?.hasVStyle ?\r\n              <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\r\n              :\r\n              <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\r\n            }\r\n            <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\r\n          </div>\r\n          <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\r\n        </div>\r\n      }\r\n      {card.moves && (card.moves.map((move, i) =>\r\n        <div key={i}\r\n          className={`${i === 0 ? card.moves && card.moves.length > 1 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\r\n          {move.name &&\r\n            <div className={styles.moveNameWrapper}>\r\n              <div className={styles.moveCost}>\r\n                {formatMoveCost(move)}\r\n              </div>\r\n              <span className={`${styles.moveName} moveName`}>{move.name}</span>\r\n              <span className={styles.moveDamage}>{move.damage}</span>\r\n            </div>\r\n          }\r\n          <p className={`${styles.moveText} ${card.subtype?.hasVStyle ? styles.moveTextV : ''}`}>{formatText(move.text)}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\r\n      {card.weaknessType &&\r\n        <span className={styles.weakness}>\r\n          <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\r\n          <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\r\n        </span>\r\n      }\r\n      {card.resistanceType &&\r\n        <span className={styles.resistance}>\r\n          <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\r\n          <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\r\n        </span>\r\n      }\r\n      <div className={styles.retreatCost}>\r\n        {card.retreatCost ? Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\r\n          i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n    {!card.subtype?.noDescription &&\r\n      <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\r\n        <p className={styles.description}>{formatText(card.description)}</p>\r\n      </div>\r\n    }\r\n    {(card.subtype?.hasPrevolve && card.prevolveImage) &&\r\n      <div className={styles.prevolveImageWrapper}>\r\n        <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\r\n      </div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'interfaces';\nimport TrainerCard from './Trainer';\nimport styles from './CardDisplay.module.scss';\nimport EnergyCard from './Energy';\nimport PokemonCard from './Pokemon';\nimport { relativePathPrefix, getCardImage } from 'services';\n\ninterface Props {\n  card: Card,\n}\n\nconst CardDisplay: React.FC<Props> = ({ card }) => {\n  const [imagePath, setImagePath] = useState<string>();\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\n\n  useEffect(() => {\n    if(supertype && type && baseSet) {\n      const newImage: string = getCardImage({baseSet: baseSet.shortName, type: type.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype, variation: variation?.shortName})\n      setImagePath(newImage);\n    }\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\n\n  return (\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      {supertype === 'Trainer' && <TrainerCard name={card.name} subname={card.subname} description={card.description} type={card.type} />}\n      {supertype === 'Energy' && <EnergyCard name={card.name} description={card.description} type={card.type} typeImage={card.typeImage} />}\n      {supertype === 'Pokemon' && <PokemonCard card={card} />}\n      {!(supertype === 'Energy' && !card.type?.hasSpecialStyle) && <>\n        <div className={card.rarity?.hasNameOutline || card.subtype?.hasNameOutline ? styles.cardInfoWhite : ''}>\n          {(supertype !== 'Energy' && card.illustrator) && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n          {card.customSetIcon ?\n            <img src={card.customSetIcon} alt='' className={styles.setIcon} />\n            :\n            card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />\n          }\n          {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n          <span className={styles.setNumber}>\n            {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n            {card.rarityIcon &&\n              <img alt={card.rarityIcon.name} className={styles.rarityIcon}\n                src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${(card.type?.hasWhiteText || card.subtype?.hasVStyle) ? '_white' : ''}.png`)}\n              />\n            }\n          </span>\n        </div>\n      </>}\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n      <div className={styles.background} />\n    </div>\n  )\n}\n\nexport default CardDisplay;\n\nexport const formatText = (text: string | undefined) => {\n  if(text) {\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\n    if(chars) {\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\n      const textNoChars = text.split(/\\[.*?\\]/g);\n      const returnText: (JSX.Element | string)[] = [];\n      textNoChars.forEach((textElm, i) => {\n        returnText.push(textElm);\n        if(charsArr.length > i) {\n          if(charsArr[i].length > 1) {\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\n          } else {\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\n          }\n        }\n      });\n      return returnText;\n    } else {\n      return text;\n    }\n  } else {\n    return false;\n  }\n}\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface LabelButton {\r\n  name: string,\r\n  icon: IconDefinition,\r\n  onClick: () => void,\r\n}\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name?: string,\r\n  horizontal?: boolean,\r\n  buttons?: LabelButton[],\r\n}\r\n\r\nconst InputLabel: React.FC<Props> = ({ shortName, name, horizontal, buttons, children }) =>\r\n  <label htmlFor={shortName} className={`${styles.input} ${horizontal ? styles.horizontal : ''}`}>\r\n    {name &&\r\n      <div className={styles.inputLabel}>\r\n        <span>{name}</span>\r\n        {buttons &&\r\n          <span>\r\n            {buttons.map((button: LabelButton, i: number) =>\r\n              <FontAwesomeIcon icon={button.icon} title={button.name} className={styles.inputLabelButton} key={i}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  button.onClick();\r\n                }}\r\n              />\r\n            )}\r\n          </span>\r\n        }\r\n      </div>\r\n    }\r\n    {children}\r\n  </label>\r\n\r\nexport default InputLabel;\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  checked: boolean,\r\n  setter: (newValue: boolean) => void,\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({ shortName, name, checked, setter }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        checked={checked}\r\n        onChange={e => setter(e.currentTarget.checked)}\r\n        className={styles.inputField}\r\n        type='checkbox'\r\n      />\r\n  </InputLabel>\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from 'react';\nimport styles from './EnergyPicker.module.scss';\nimport { MoveType, Type } from 'interfaces';\nimport { relativePathPrefix } from 'services';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\n\ninterface Props {\n  label: String,\n  types: Type[],\n  moveCost: MoveType[],\n  setMoveCost: (moveTypes: MoveType[]) => void,\n}\n\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    const newMoveTypes: MoveType[] = [];\n    types.forEach((type) => {\n      if(type.supertype === 'Pokemon') {\n        newMoveTypes.push({\n          type,\n          amount: 0,\n        });\n      }\n    });\n    setMoveTypes(newMoveTypes);\n  }, [types]);\n\n  return (\n    <div>\n      <span>{label}</span>\n      <div className={styles.wrapper}>\n        {moveTypes.map((moveType, i) =>\n          <div className={styles.type} key={i}>\n            <span className={styles.button} onClick={() => {\n              let newMoveCost: MoveType[] = [...moveCost];\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\n              if(type) {\n                type.amount = type.amount + 1;\n              } else {\n                type = {\n                  type: moveType.type,\n                  amount: 1,\n                };\n                newMoveCost.push(type);\n              }\n              setMoveCost(newMoveCost);\n            }}>\n              <FontAwesomeIcon icon={faCaretUp} />\n            </span>\n            <img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\n            <span className={styles.button} onClick={() => {\n              let newMoveCost: MoveType[] = [...moveCost];\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\n              if(type) {\n                type.amount = type.amount - 1;\n                if(type.amount <= 0) {\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\n                }\n                setMoveCost(newMoveCost);\n              }\n            }}>\n              <FontAwesomeIcon icon={faCaretDown} />\n            </span>\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default EnergyPicker;\n","import React, { useRef, useState, useEffect } from 'react';\nimport styles from '../Form.module.scss';\nimport InputLabel from '../InputLabel';\nimport { faCropAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  shortName: string,\n  name?: string,\n  info?: string,\n  setter: (newValue:  any) => void,\n  onChange?: (newImage: string) => void,\n  croppable?: boolean,\n  cropperSetter?: (newImage: string, imageSetter: () => void) => void,\n}\n\nconst ImageInput: React.FC<Props> = ({ shortName, name, info, setter, onChange, croppable, cropperSetter }) => {\n  const [image, setImage] = useState<string>('none');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const initialRender = useRef<boolean>(true);\n  const acceptedTypes = useRef<string[]>(['image/png', 'image/jpeg'])\n\n  useEffect(() => {\n    if(initialRender.current) {\n      initialRender.current = false;\n    } else {\n      console.log(image);\n      setter(image);\n      onChange && onChange(image);\n      cropperSetter && cropperSetter(image, () => setter);\n    }\n  }, [image, onChange, setter]);\n\n  return (\n    <InputLabel shortName={shortName} name={name} horizontal buttons={croppable ? [\n      {\n        name: 'Crop',\n        icon: faCropAlt,\n        onClick: () => cropperSetter && cropperSetter(image, () => setter),\n      },\n      {\n        name: 'Remove',\n        icon: faTimes,\n        onClick: () => {\n          setImage('');\n          if(inputRef.current) {\n            inputRef.current.value = '';\n          }\n        },\n      },\n    ] : []}>\n      {info && <span className={styles.info}>{info}</span>}\n      <input\n        ref={inputRef}\n        id={shortName}\n        name={shortName}\n        onChange={e => {\n          if(e.target.files && e.target.files[0] && acceptedTypes.current.includes(e.target.files[0].type)) {\n            setImage(window.URL.createObjectURL(e.target.files[0]));\n          } else {\n            setImage('');\n            e.target.value = '';\n          }\n        }}\n        className={styles.file}\n        type='file'\n        accept={acceptedTypes.current.join(',')}\n      />\n    </InputLabel>\n  )\n}\n\nexport default ImageInput;\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  value: string | number,\r\n  type: 'text' | 'number' | 'textarea',\r\n  min?: number,\r\n  max?: number,\r\n  horizontal?: boolean,\r\n  setter: (newValue: any) => void,\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ shortName, name, value, type, min, max, setter, horizontal }) =>\r\n  <InputLabel shortName={shortName} name={name} horizontal={horizontal || type === 'textarea'}>\r\n    {type !== 'textarea' ?\r\n      <input\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        type={type}\r\n        min={min}\r\n        max={max}\r\n        onChange={e => setter(type === 'text' ? e.currentTarget.value : +e.currentTarget.value)}\r\n        className={styles.inputField}\r\n      />\r\n      :\r\n      <textarea\r\n        id={shortName}\r\n        name={shortName}\r\n        value={value}\r\n        onChange={e => setter(e.currentTarget.value)}\r\n        className={`${styles.inputField} ${styles.inputTextarea}`}\r\n      ></textarea>\r\n    }\r\n  </InputLabel>\r\n\r\nexport default Input;\r\n","import React, { ChangeEvent } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  selectRef?: React.RefObject<HTMLSelectElement>,\r\n  onChange: (e: ChangeEvent<HTMLSelectElement>) => void,\r\n}\r\n\r\nconst Select: React.FC<Props> = ({ shortName, name, selectRef, onChange, children }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n    <select id={shortName} ref={selectRef} name={shortName} className={styles.inputField} onChange={onChange}>\r\n      {children}\r\n    </select>\r\n  </InputLabel>\r\n\r\nexport default Select;\r\n","import { Area } from \"react-easy-crop/types\"\r\n\r\nconst createImage = (url: string): Promise<HTMLImageElement> =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} imageSrc - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n */\r\nconst getCroppedImg = async (imageSrc: string, pixelCrop: Area): Promise<string> => {\r\n  let image: HTMLImageElement;\r\n  try {\r\n    image = await createImage(imageSrc);\r\n  } catch(e) {\r\n    return '';\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  if(ctx) {\r\n    // translate canvas context to a central location on image to allow rotating around the center.\r\n    ctx.translate(safeArea / 2, safeArea / 2);\r\n    ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n    // draw rotated image and store data.\r\n    ctx.drawImage(\r\n      image,\r\n      safeArea / 2 - image.width * 0.5,\r\n      safeArea / 2 - image.height * 0.5,\r\n    );\r\n    const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n    // set canvas width to final desired crop size - this will clear existing context\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // paste generated rotate image with correct offsets for x,y crop values.\r\n    ctx.putImageData(\r\n      data,\r\n      0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\r\n      0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y,\r\n    );\r\n  }\r\n\r\n  return new Promise(resolve =>\r\n    canvas.toBlob(\r\n      file => resolve(URL.createObjectURL(file)),\r\n      'image/png'\r\n    ));\r\n}\r\n\r\nexport default getCroppedImg;\r\n","import React, { MouseEvent } from 'react';\nimport styles from '../Form.module.scss';\n\ninterface Props {\n  className?: string,\n  onClick?: (e: MouseEvent) => void,\n}\n\nconst Button: React.FC<Props> = ({ className, onClick, children }) =>\n  <button className={`${styles.button} ${className ? className : ''}`} onClick={onClick}>\n    {children}\n  </button>\n\nexport default Button;\n","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { CardOptionsState } from 'reducers/cardOptions';\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card, ImportedCard, ImportedMoveType } from 'interfaces';\nimport { bindActionCreators } from 'redux';\nimport { requestCardOptions } from 'actions';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport styles from './CardCreator.module.scss';\nimport CardDisplay from 'components/CardDisplay';\nimport { Select, Input, Checkbox, ImageInput, EnergyPicker} from 'components/FormElements';\nimport { relativePathPrefix, cardToImportedCard, getCardImage } from 'services';\nimport Cropper from 'react-easy-crop';\nimport { Point, Area } from 'react-easy-crop/types';\nimport getCroppedImg from 'cropImage';\nimport Button from 'components/FormElements/Button';\n\ninterface Props {\n  cardOptionsState: CardOptionsState,\n  card?: ImportedCard,\n  requestCardOptions: () => Object,\n}\n\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, card, requestCardOptions }) => {\n  const importingCard = useRef<boolean>(false);\n  const initialImported = useRef<boolean>(false);\n  const [importingTrigger, setImportingTrigger] = useState<boolean>(false);\n  // Selectors\n  const [supertype, setSupertype] = useState<string>('Pokemon');\n  const [type, setType] = useState<Type>();\n  const [baseSet, setBaseSet] = useState<BaseSet>();\n  const [set, setSet] = useState<Set>();\n  const [rotation, setRotation] = useState<Rotation>();\n  const [variation, setVariation] = useState<Variation>();\n  const [subtype, setSubtype] = useState<Subtype>();\n  const [rarity, setRarity] = useState<Rarity>();\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\n  const [weaknessType, setWeaknessType] = useState<Type>();\n  const [resistanceType, setResistanceType] = useState<Type>();\n  // Selector refs\n  const baseSetRef = useRef<HTMLSelectElement>(null);\n  const supertypeRef = useRef<HTMLSelectElement>(null);\n  const typeRef = useRef<HTMLSelectElement>(null);\n  const subtypeRef = useRef<HTMLSelectElement>(null);\n  const variationRef = useRef<HTMLSelectElement>(null);\n  const rarityRef = useRef<HTMLSelectElement>(null);\n  const setIconRef = useRef<HTMLSelectElement>(null);\n  const rotationRef = useRef<HTMLSelectElement>(null);\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\n  // Inputs\n  const [name, setName] = useState<string>('');\n  const [prevolveName, setPrevolveName] = useState<string>('');\n  const [hitpoints, setHitpoints] = useState<number>(100);\n  const [subname, setSubname] = useState<string>('');\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\n  const [retreatCost, setRetreatCost] = useState<number>(1);\n  const [description, setDescription] = useState<string>('');\n  const [illustrator, setIllustrator] = useState<string>('');\n  const [cardNumber, setCardNumber] = useState<string>('');\n  const [totalInSet, setTotalInSet] = useState<string>('');\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\n  const [imageLayer1, setImageLayer1] = useState<string>('');\n  const [imageLayer2, setImageLayer2] = useState<string>('');\n  const [typeImage, setTypeImage] = useState<string>('');\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\n  const [hasCustomSetIcon, setHasCustomSetIcon] = useState<boolean>(false);\n  const [customSetIcon, setCustomSetIcon] = useState<string>('');\n  // Image cropper\n  const [cropArea, setCropArea] = useState<Point>({ x: 0, y: 0 });\n  const [cropZoom, setCropZoom] = useState<number>(1);\n  const [cropImage, setCropImage] = useState<string>('');\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState<Area>({ x: 0, y: 0, height: 0, width: 0 });\n  const [currentCropSetter, setCurrentCropSetter] = useState<Dispatch<SetStateAction<string>>>();\n  // Ability/Moves\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\n  const [abilityName, setAbilityName] = useState<string>('');\n  const [abilityText, setAbilityText] = useState<string>('');\n  const [move1Name, setMove1Name] = useState<string>('');\n  const [move1Damage, setMove1Damage] = useState<string>('');\n  const [move1Text, setMove1Text] = useState<string>('');\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\n  const [move2Name, setMove2Name] = useState<string>('');\n  const [move2Text, setMove2Text] = useState<string>('');\n  const [move2Damage, setMove2Damage] = useState<string>('');\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    requestCardOptions();\n  }, [requestCardOptions]);\n\n  useEffect(() => {\n    setType(cardOptionsState.cardOptions.types[0]);\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\n    setSet(cardOptionsState.cardOptions.sets[0]);\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\n  }, [cardOptionsState]);\n\n  /**\n   * Changes the types/subtypes etc to the first available one within their parent\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\n   */\n  useEffect(() => {\n    if(importingCard.current) {\n      return;\n    }\n    if(typeRef.current) {\n      const { selectedIndex, options } = typeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newType = cardOptionsState.cardOptions.types.find((a: Type) => a.id === +value);\n      if(newType && newType !== type) {\n        setType(newType);\n      }\n    } else {\n      setType(undefined);\n    }\n    if(subtypeRef.current) {\n      const { selectedIndex, options } = subtypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSubtype = cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +value);\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\n        setSubtype(newSubtype);\n      }\n    } else {\n      setSubtype(undefined);\n    }\n    if(variationRef.current) {\n      const { selectedIndex, options } = variationRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newVariation = cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +value);\n      if(newVariation && newVariation !== variation) {\n        setVariation(newVariation);\n      }\n    } else {\n      setVariation(undefined);\n    }\n    if(rarityRef.current) {\n      const { selectedIndex, options } = rarityRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newRarity = cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +value);\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\n        setRarity(newRarity);\n      }\n    } else {\n      setRarity(undefined);\n    }\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\n\n  /**\n   * Turns state data into a Card object\n   */\n  const makeCard = (): Card => ({\n    baseSet,\n    supertype,\n    type,\n    set,\n    customSetIcon: hasCustomSetIcon ? customSetIcon : undefined,\n    variation,\n    subtype,\n    rarity,\n    name,\n    prevolveName,\n    prevolveImage,\n    hitpoints,\n    subname,\n    typeImage,\n    pokedexEntry,\n    ability: hasAbility ? {\n      name: abilityName,\n      text: abilityText,\n    } : undefined,\n    moves: [\n      {\n        name: move1Name,\n        text: move1Text,\n        damage: move1Damage,\n        energyCost: move1Cost,\n      },\n      ...(!hasAbility && hasSecondMove ? [{\n        name: move2Name,\n        text: move2Text,\n        damage: move2Damage,\n        energyCost: move2Cost,\n      }] : []),\n    ],\n    weaknessType,\n    weaknessAmount,\n    resistanceType,\n    resistanceAmount,\n    retreatCost,\n    illustrator,\n    cardNumber,\n    totalInSet,\n    rotation,\n    rarityIcon,\n    description,\n    backgroundImage,\n    imageLayer1,\n    imageLayer2,\n  });\n\n  const downloadCard = () => {\n    const card = document.getElementById('card');\n    if(card) {\n      htmlToImage.toPng(card)\n        .then((dataUrl) => {\n          download(dataUrl, `${name || 'card'}${subtype?.hasVSymbol ? ' V' : subtype?.hasVMaxSymbol ? ' VMAX' : ''}.png`);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const exportCard = () => {\n    const card: Card = makeCard();\n    const exportCard: ImportedCard = cardToImportedCard(card);\n    navigator.clipboard.writeText(JSON.stringify(exportCard));\n  }\n\n  /**\n   * Sets all card data, selectors and energy pickers to certain values based on the cardObj parameter\n   */\n  const importCard = (cardObj: ImportedCard) => {\n    importingCard.current = true;\n    // Base values\n    setName(cardObj.name || '');\n    setPrevolveName(cardObj.prevolveName || '');\n    setPrevolveImage(relativePathPrefix(cardObj.prevolveImage || ''));\n    setHitpoints(cardObj.hitpoints || 0);\n    setSubname(cardObj.subname || '');\n    setTypeImage(relativePathPrefix(cardObj.typeImage || ''));\n    setPokedexEntry(cardObj.pokedexEntry || '');\n    setWeaknessAmount(cardObj.weaknessAmount || 0);\n    setResistanceAmount(cardObj.resistanceAmount || 0);\n    setRetreatCost(cardObj.retreatCost || 0);\n    setIllustrator(cardObj.illustrator || '');\n    setCardNumber(cardObj.cardNumber || '');\n    setTotalInSet(cardObj.totalInSet || '');\n    setDescription(cardObj.description || '');\n    setBackgroundImage(relativePathPrefix(cardObj.backgroundImage || ''));\n    setImageLayer1(relativePathPrefix(cardObj.imageLayer1 || ''));\n    setImageLayer2(relativePathPrefix(cardObj.imageLayer2 || ''));\n    if(cardObj.customSetIcon) {\n      setHasCustomSetIcon(true);\n      setCustomSetIcon(cardObj.customSetIcon);\n    }\n    if(cardObj.ability) {\n      setHasAbility(true);\n      setAbilityName(cardObj.ability.name);\n      setAbilityText(cardObj.ability.text);\n    }\n    if(cardObj.moves) {\n      if(cardObj.moves[0]){\n        setMove1Name(cardObj.moves[0].name);\n        setMove1Damage(cardObj.moves[0].damage);\n        setMove1Text(cardObj.moves[0].text);\n        setMove1Cost(cardObj.moves[0].energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\n          const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\n          if(newType) {\n            result.push({\n              amount: moveType.amount,\n              type: newType,\n            });\n          }\n          return result;\n        }, []));\n      }\n      if(cardObj.moves[1]) {\n        setHasSecondMove(true);\n        setMove2Name(cardObj.moves[1].name);\n        setMove2Damage(cardObj.moves[1].damage);\n        setMove2Text(cardObj.moves[1].text);\n        setMove2Cost(cardObj.moves[1].energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\n          const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\n          if(newType) {\n            result.push({\n              amount: moveType.amount,\n              type: newType,\n            });\n          }\n          return result;\n        }, []));\n      }\n    }\n    // Selectors\n    const newBaseSet: BaseSet | undefined = cardOptionsState.cardOptions.baseSets.find((a) => a.id === cardObj.baseSetId);\n    if(newBaseSet) {\n      setBaseSet(newBaseSet);\n      if(baseSetRef.current && newBaseSet) {\n        baseSetRef.current.selectedIndex = Array.from(baseSetRef.current.options).findIndex((t) => +t.value === newBaseSet.id);\n      }\n    } else {\n      if(baseSetRef.current) {\n        baseSetRef.current.selectedIndex = 0;\n      }\n      setBaseSet(undefined);\n    }\n    const newSupertype = cardObj.supertype;\n    if(newSupertype) {\n      setSupertype(newSupertype);\n      if(supertypeRef.current) {\n        supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => t.value === newSupertype);\n      }\n    } else {\n      if(supertypeRef.current) {\n        supertypeRef.current.selectedIndex = 0;\n      }\n      setSupertype('Pokemon');\n    }\n    const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.typeId);\n    if(newType) {\n      setType(newType);\n      if(typeRef.current) {\n        typeRef.current.selectedIndex = Array.from(typeRef.current.options).findIndex((t) => +t.value === newType.id);\n      }\n    } else {\n      if(typeRef.current) {\n        typeRef.current.selectedIndex = 0;\n      }\n      setType(undefined);\n    }\n    if(cardObj.subtypeId) {\n      const newSubtype: Subtype | undefined = cardOptionsState.cardOptions.subtypes.find((a) => a.id === cardObj.subtypeId);\n      if(newSubtype) {\n        setSubtype(newSubtype);\n        if(subtypeRef.current) {\n          subtypeRef.current.selectedIndex = Array.from(subtypeRef.current.options).findIndex((t) => +t.value === newSubtype.id);\n        }\n      }\n    } else {\n      if(subtypeRef.current) {\n        subtypeRef.current.selectedIndex = 0;\n      }\n      setSubtype(undefined);\n    }\n    if(cardObj.setId) {\n      const newSet: Set | undefined = cardOptionsState.cardOptions.sets.find((a) => a.id === cardObj.setId);\n      if(newSet) {\n        setSet(newSet);\n        if(setIconRef.current) {\n          setIconRef.current.selectedIndex = Array.from(setIconRef.current.options).findIndex((t) => +t.value === newSet.id);\n        }\n      }\n    } else {\n      if(setIconRef.current) {\n        setIconRef.current.selectedIndex = 0;\n      }\n      setSet(undefined);\n    }\n    if(cardObj.weaknessTypeId) {\n      const newWeaknessType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.weaknessTypeId);\n      if(newWeaknessType) {\n        setWeaknessType(newWeaknessType);\n        if(weaknessTypeRef.current) {\n          weaknessTypeRef.current.selectedIndex = Array.from(weaknessTypeRef.current.options).findIndex((t) => +t.value === newWeaknessType.id);\n        }\n      }\n    } else {\n      if(weaknessTypeRef.current) {\n        weaknessTypeRef.current.selectedIndex = 0;\n      }\n      setWeaknessType(undefined);\n    }\n    if(cardObj.resistanceTypeId) {\n      const newResistanceType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.resistanceTypeId);\n      if(newResistanceType) {\n        setResistanceType(newResistanceType);\n        if(resistanceTypeRef.current) {\n          resistanceTypeRef.current.selectedIndex = Array.from(resistanceTypeRef.current.options).findIndex((t) => +t.value === newResistanceType.id);\n        }\n      }\n    } else {\n      if(resistanceTypeRef.current) {\n        resistanceTypeRef.current.selectedIndex = 0;\n      }\n      setResistanceType(undefined);\n    }\n    if(cardObj.rotationId) {\n      const newRotation: Rotation | undefined = cardOptionsState.cardOptions.rotations.find((a) => a.id === cardObj.rotationId);\n      if(newRotation) {\n        setRotation(newRotation);\n        if(rotationRef.current) {\n          rotationRef.current.selectedIndex = Array.from(rotationRef.current.options).findIndex((t) => +t.value === newRotation.id);\n        }\n      }\n    } else {\n      if(rotationRef.current) {\n        rotationRef.current.selectedIndex = 0;\n      }\n      setRotation(undefined);\n    }\n    if(cardObj.variationId) {\n      const newVariation: Variation | undefined = cardOptionsState.cardOptions.variations.find((a) => a.id === cardObj.variationId);\n      if(newVariation) {\n        setVariation(newVariation);\n        if(variationRef.current) {\n          variationRef.current.selectedIndex = Array.from(variationRef.current.options).findIndex((t) => +t.value === newVariation.id);\n        }\n      }\n    } else {\n      if(variationRef.current) {\n        variationRef.current.selectedIndex = 0;\n      }\n      setVariation(undefined);\n    }\n    if(cardObj.rarityId) {\n      const newRarity: Rarity | undefined = cardOptionsState.cardOptions.rarities.find((a) => a.id === cardObj.rarityId);\n      if(newRarity) {\n        setRarity(newRarity);\n        if(rarityRef.current) {\n          rarityRef.current.selectedIndex = Array.from(rarityRef.current.options).findIndex((t) => +t.value === newRarity.id);\n        }\n      }\n    } else {\n      if(rarityRef.current) {\n        rarityRef.current.selectedIndex = 0;\n      }\n      setRarity(undefined);\n    }\n    if(cardObj.rarityIconId) {\n      const newRarityIcon: RarityIcon | undefined = cardOptionsState.cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIconId);\n      if(newRarityIcon) {\n        setRarityIcon(newRarityIcon);\n        if(rarityIconRef.current) {\n          rarityIconRef.current.selectedIndex = Array.from(rarityIconRef.current.options).findIndex((t) => +t.value === newRarityIcon.id);\n        }\n      }\n    } else {\n      if(rarityIconRef.current) {\n        rarityIconRef.current.selectedIndex = 0;\n      }\n      setRarityIcon(undefined);\n    }\n    setImportingTrigger(!importingTrigger);\n  }\n\n  /**\n   * Callback for the function above\n   */\n  useEffect(() => {\n    importingCard.current = false;\n  }, [importingTrigger]);\n\n  useEffect(() => {\n    // Initially import the prop-card once the selectors have loaded\n    if(!initialImported.current && card && subtypeRef.current) {\n      importCard(card);\n      initialImported.current = true;\n    }\n  }, [card, importCard]);\n\n  const resetCropper = (newImage: string, imageSetter: () => void) => {\n    setCropImage(newImage);\n    setCurrentCropSetter(imageSetter);\n    setCropArea({ x: 0, y: 0});\n    setCroppedAreaPixels({ ...croppedAreaPixels, x: 0, y: 0});\n    setCropZoom(1);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.form}>\n        <div className={styles.seperator}>\n          <Button onClick={e => {\n            navigator.clipboard.readText()\n              .then((value: string) => {\n                importCard(JSON.parse(value) as ImportedCard);\n              })\n              .catch(console.error);\n          }}>\n            {'Import from clipboard'}\n          </Button>\n        </div>\n        <div className={styles.seperator}>\n          <Select name='Base Set' shortName='baseSet' selectRef={baseSetRef} onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\n              <option value={value.id} key={i}>{value.name}</option>\n            )}\n          </Select>\n          <Select name='Supertype' shortName='supertype' selectRef={supertypeRef} onChange={e => setSupertype(e.currentTarget.value)}>\n            <option value={'Pokemon'}>{'Pokémon'}</option>\n            <option value={'Trainer'}>{'Trainer'}</option>\n            <option value={'Energy'}>{'Energy'}</option>\n          </Select>\n          <Select name='Type' shortName='type' selectRef={typeRef} onChange={e => setType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n              if(supertype !== value.supertype) {\n                return false;\n              } else {\n                return <option value={value.id} key={i}>{value.name}</option>;\n              }\n            })}\n          </Select>\n          {type?.hasSubtypes && supertype !== 'Energy' &&\n            <Select name='Subtype' shortName='subtype' selectRef={subtypeRef} onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\n              {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\n                if(!value.types.includes(type?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </Select>\n          }\n          {subtype?.hasVariations && supertype !== 'Energy' && supertype !== 'Trainer' &&\n            <Select name='Variation' shortName='variation' selectRef={variationRef} onChange={e => setVariation(cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\n                if(!value.subtypes.includes(subtype?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </Select>\n          }\n          {supertype !== 'Energy' && supertype !== 'Trainer' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) &&\n            <Select name='Rarity' shortName='rarity' selectRef={rarityRef} onChange={e => setRarity(cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\n              <option value={'default'}>{'Default'}</option>\n              {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\n                  || (includesSubtype && (includesVariation || !variation))\n                  || includesVariation) {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                } else {\n                  return false;\n                }\n              })}\n            </Select>\n          }\n          {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n            <Select name='Rotation' shortName='rotation' selectRef={rotationRef} onChange={e => setRotation(cardOptionsState.cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </Select>\n            <Select name='Rarity Icons' shortName='rarityIcon' selectRef={rarityIconRef} onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\n              <option value={'none'}>{'None'}</option>\n              {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </Select>\n            <Checkbox name='Custom Set Icon' shortName='customSetIcon' checked={hasCustomSetIcon} setter={setHasCustomSetIcon} />\n            {hasCustomSetIcon ?\n              <ImageInput shortName='customSetIcon' setter={setCustomSetIcon} />\n              :\n              <Select name='Set Icon' shortName='set' selectRef={setIconRef} onChange={e => setSet(cardOptionsState.cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\n                  <option value={value.id} key={i}>{value.name}</option>\n                )}\n              </Select>\n            }\n          </>}\n        </div>\n        {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n          <div className={styles.seperator}>\n            <Input type='text' name='Name' shortName='name' value={name} setter={setName} />\n            {supertype === 'Pokemon' &&\n              <Input type='number' name='Hitpoints' shortName='hitpoints' value={hitpoints} setter={setHitpoints} min={0} max={999} />\n            }\n            {subtype?.hasPrevolve && <>\n              <Input type='text' name='Prevolve Name' shortName='prevolveName' value={prevolveName} setter={setPrevolveName} />\n              <ImageInput name='Prevolve Image' shortName='prevolveImage' setter={setPrevolveImage} />\n            </>}\n            {subtype?.hasPokedexEntry &&\n              <Input type='text' horizontal name='Pokédex Entry' shortName='pokedexEntry' value={pokedexEntry} setter={setPokedexEntry} />\n            }\n            {type?.hasSubname &&\n              <Input type='text' name='Subname' shortName='subname' value={subname} setter={setSubname} />\n            }\n          </div>\n          {supertype === 'Pokemon' && <>\n            <div className={styles.seperator}>\n              <Checkbox name='Has Ability' shortName='hasAbility' checked={hasAbility} setter={setHasAbility} />\n              {hasAbility && <>\n                <Input type='text' name='Ability Name' shortName='abilityName' value={abilityName} setter={setAbilityName} />\n                <Input type='textarea' name='Ability Text' shortName='abilityText' value={abilityText} setter={setAbilityText} />\n              </>}\n            </div>\n            <div className={styles.seperator}>\n              <Input type='text' name='Move Name' shortName='move1Name' value={move1Name} setter={setMove1Name} />\n              <Input type='text' name='Move Damage' shortName='move1Damage' value={move1Damage} setter={setMove1Damage} />\n              <Input type='textarea' horizontal name='Move Text' shortName='move1Text' value={move1Text} setter={setMove1Text} />\n              <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\n            </div>\n            {!hasAbility &&\n              <div className={styles.seperator}>\n                <Checkbox name='Has Second Move' shortName='hasSecondMove' checked={hasSecondMove} setter={setHasSecondMove} />\n                {hasSecondMove && <>\n                  <Input type='text' name='Move Name' shortName='move2Name' value={move2Name} setter={setMove2Name} />\n                  <Input type='text' name='Move Damage' shortName='move2Damage' value={move2Damage} setter={setMove2Damage} />\n                  <Input type='textarea' name='Move Text' shortName='move2Text' value={move2Text} setter={setMove2Text} />\n                  <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\n                </>}\n              </div>\n            }\n            <div className={styles.seperator}>\n              <Select name='Weakness Type' shortName='weaknessType' selectRef={weaknessTypeRef} onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                  if(supertype !== value.supertype) {\n                    return false;\n                  } else {\n                    return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </Select>\n              <Input type='number' name='Weakness Amount' shortName='weaknessAmount' value={weaknessAmount} setter={setWeaknessAmount} max={99} min={0} />\n              <Select name='Resistance Type' shortName='resistanceType' selectRef={resistanceTypeRef} onChange={e => setResistanceType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                <option value={'none'}>{'None'}</option>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                  if(supertype !== value.supertype) {\n                    return false;\n                  } else {\n                    return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </Select>\n              {resistanceType &&\n                <Input type='number' name='Resistance Amount' shortName='resistanceAmount' value={resistanceAmount} setter={setResistanceAmount} max={99} min={0} />\n              }\n              <Input type='number' name='Retreat Cost' shortName='retreatCost' value={retreatCost} setter={setRetreatCost} max={5} min={0} />\n            </div>\n          </>}\n          {!subtype?.noDescription &&\n            <div className={styles.seperator}>\n              <Input type='textarea' name='Description' shortName='description' value={description} setter={setDescription} />\n            </div>\n          }\n          <div className={styles.seperator}>\n            {supertype !== 'Energy' &&\n              <Input type='text' name='Illustrator' shortName='illustrator' value={illustrator} setter={setIllustrator} />\n            }\n            <Input type='text' name='Card Number' shortName='cardNumber' value={cardNumber} setter={setCardNumber} />\n            <Input type='text' name='Total In Set' shortName='totalInSet' value={totalInSet} setter={setTotalInSet} />\n          </div>\n        </>}\n        <div className={styles.seperator}>\n          <span className={styles.info}>{'Card dimensions are 747w × 1038h'}</span>\n          {currentCropSetter &&\n            <>\n              <div className={styles.cropperWrapper}>\n                <Cropper\n                  image={cropImage}\n                  crop={cropArea}\n                  zoom={cropZoom}\n                  cropSize={{ width: 320, height: 444.66 }} // Based on aspect ratio\n                  maxZoom={100}\n                  minZoom={.1}\n                  restrictPosition={false}\n                  zoomSpeed={.1}\n                  aspect={747 / 1038}\n                  onCropChange={(location: Point) => setCropArea(location)}\n                  onCropComplete={async (croppedArea: Area, cap: Area) => setCroppedAreaPixels(cap)}\n                  onZoomChange={(newZoom: number) => setCropZoom(newZoom)}\n                />\n                <img alt='' src={getCardImage({baseSet: baseSet?.shortName, type: type?.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype, variation: variation?.shortName})} className={styles.cropperImage} />\n              </div>\n              <Button className={styles.buttonCrop} onClick={async () => {\n                const croppedImage = await getCroppedImg(cropImage, croppedAreaPixels);\n                currentCropSetter && currentCropSetter(croppedImage);\n              }}>\n                {'Apply crop'}\n              </Button>\n            </>\n          }\n          <ImageInput name='Background Image' shortName='backgroundImage' info='Placed behind everything'\n            setter={setBackgroundImage}\n            croppable cropperSetter={resetCropper}\n          />\n          <ImageInput name='Card Image' shortName='imageLayer1' info='Placed in front of background'\n            setter={setImageLayer1}\n            croppable cropperSetter={resetCropper}\n          />\n          <ImageInput name='Top Image' shortName='imageLayer2' info='Placed on top of the card image'\n            setter={setImageLayer2}\n            croppable cropperSetter={resetCropper}\n          />\n          {supertype === 'Energy' &&\n            <ImageInput name='Type Image' shortName='typeImage' info=\"The energy's top right icon\" setter={setTypeImage} />\n          }\n        </div>\n        <div className={styles.seperator}>\n          <Button className={styles.buttonDownload} onClick={downloadCard}>{'Download as image'}</Button>\n          <Button onClick={exportCard}>{'Export to clipboard'}</Button>\n        </div>\n      </div>\n      <div className={styles.cardWrapper}>\n        <CardDisplay card={makeCard()} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport CardCreatorPage from 'pages/CardCreator';\nimport styles from './App.module.scss';\nimport { Switch, BrowserRouter as Router, Route, } from 'react-router-dom';\nimport card from './garbodor.json';\nimport { ImportedCard } from 'interfaces';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className={styles.wrapper} style={{ background: `url(${process.env.REACT_APP_RELATIVE_PREFIX || ''}/img/line-pattern.svg)` }}>\n        <header className={styles.header}>\n          <div className={styles.headerCircle} />\n        </header>\n        <div className={styles.content}>\n          <Router>\n            <Switch>\n              <Route exact path='/preset'>\n                <CardCreatorPage card={card as ImportedCard} />\n              </Route>\n              <Route path=''>\n                <CardCreatorPage />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n        <footer className={styles.footer} />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"form\":\"CardCreator_form__2CplI\",\"seperator\":\"CardCreator_seperator__1YR8e\",\"info\":\"CardCreator_info__2jpEw\",\"cardWrapper\":\"CardCreator_cardWrapper__2nTPg\",\"cropperWrapper\":\"CardCreator_cropperWrapper__37W8W\",\"cropperImage\":\"CardCreator_cropperImage__1AZT-\",\"buttonCrop\":\"CardCreator_buttonCrop__1PZQz\",\"buttonDownload\":\"CardCreator_buttonDownload__1ZwpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__GBXSi\",\"horizontal\":\"Form_horizontal__2UtlA\",\"inputField\":\"Form_inputField__1HngE\",\"inputLabel\":\"Form_inputLabel__322yj\",\"inputLabelButton\":\"Form_inputLabelButton__DsbXy\",\"inputTextarea\":\"Form_inputTextarea__3XaZo\",\"info\":\"Form_info__3KnDV\",\"button\":\"Form_button__3v2gH\",\"file\":\"Form_file__wr5HX\"};"],"sourceRoot":""}