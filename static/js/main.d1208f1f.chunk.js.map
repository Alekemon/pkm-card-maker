{"version":3,"sources":["pages/CardCreator/CardCreator.module.scss","pages/CardCreator/components/EnergyPicker/EnergyPicker.module.scss","App.module.scss","components/CardDisplay/CardDisplay.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/index.tsx","pages/CardCreator/components/EnergyPicker/index.tsx","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","getCardOptions","a","fetch","process","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","imagePath","card","className","styles","id","backgroundImage","src","alt","name","formatText","hasSubname","subname","descriptionWrapper","description","illustrator","set","relativePathPrefix","number","shortName","setIcon","rotation","setNumber","cardNumber","totalInSet","rarityIcon","hasWhiteText","imageLayer1","image","imageLayer2","EnergyCard","descriptionWrapperEnergy","typeImage","typeImageSpecial","PokemonCard","useEffect","moves","highestCost","forEach","move","totalAmount","energyCost","amount","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","Math","max","whiteText","namePokemon","rarity","hasNameOutline","nameOutline","subtype","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hasVStyle","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","text","map","i","key","moveMultiple","moveV","moveNameWrapper","moveCost","moveImages","moveType","returnValue","push","moveEnergy","formatMoveCost","moveDamage","damage","moveText","typeBar","hasBlackTopText","hasWhiteTopText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","hasDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","CardDisplay","useState","setImagePath","supertype","baseSet","variation","getImage","options","folder","undefined","filePath","Object","values","param","Trainer","Energy","Pokemon","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","path","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","wrapper","button","role","aria-label","onClick","newMoveCost","find","title","splice","indexOf","connect","cardOptionsState","dispatch","bindActionCreators","importingCard","useRef","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","current","selectedIndex","value","newType","newSubtype","newVariation","newRarity","makeCard","navigator","clipboard","readText","then","cardObj","JSON","parse","newBaseSet","newSupertype","findIndex","t","newSet","newWeaknessType","newResistanceType","newRotation","newRarityIcon","catch","htmlFor","input","inputLabel","ref","inputField","onChange","currentTarget","disabled","hasSubtypes","subtypeOptional","includes","hasVariations","includesType","includesSubtype","includesVariation","min","accept","target","files","window","URL","createObjectURL","horizontal","inputCheckbox","checked","inputTextarea","getElementById","htmlToImage","toPng","dataUrl","download","writeText","stringify","App","store","header","headerCircle","content","CardCreator","footer","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,MAAQ,2BAA2B,WAAa,gCAAgC,WAAa,gCAAgC,WAAa,gCAAgC,cAAgB,mCAAmC,OAAS,8B,mBCA/RD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,+B,mBCAzID,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,aAAe,0BAA0B,QAAU,qBAAqB,OAAS,sB,kBCA/JD,EAAOC,QAAU,CAAC,aAAe,QAAQ,SAAW,8BAA8B,WAAa,gCAAgC,KAAO,0BAA0B,UAAY,+BAA+B,MAAQ,2BAA2B,KAAO,0BAA0B,YAAc,iCAAiC,YAAc,iCAAiC,SAAW,8BAA8B,UAAY,+BAA+B,iBAAmB,sCAAsC,kBAAoB,uCAAuC,YAAc,iCAAiC,aAAe,kCAAkC,QAAU,6BAA6B,aAAe,kCAAkC,aAAe,kCAAkC,cAAgB,mCAAmC,mBAAqB,wCAAwC,YAAc,iCAAiC,aAAe,kCAAkC,YAAc,iCAAiC,KAAO,0BAA0B,aAAe,kCAAkC,MAAQ,2BAA2B,SAAW,8BAA8B,gBAAkB,qCAAqC,eAAiB,oCAAoC,SAAW,8BAA8B,WAAa,gCAAgC,WAAa,gCAAgC,SAAW,8BAA8B,QAAU,6BAA6B,SAAW,8BAA8B,aAAe,kCAAkC,WAAa,gCAAgC,eAAiB,oCAAoC,YAAc,iCAAiC,gBAAkB,qCAAqC,YAAc,iCAAiC,QAAU,6BAA6B,UAAY,+BAA+B,SAAW,8BAA8B,WAAa,gCAAgC,YAAc,iCAAiC,mBAAqB,wCAAwC,yBAA2B,8CAA8C,0BAA4B,+CAA+C,cAAgB,mCAAmC,qBAAuB,0CAA0C,gBAAkB,qCAAqC,YAAc,iCAAiC,YAAc,iCAAiC,UAAY,+BAA+B,iBAAmB,wC,oLCM7iFC,EAAqB,iBAAO,CAAEC,KALC,yBAM/BC,EAA4B,SAACC,GAAD,MAA+B,CAAEF,KAL9B,+BAKkEG,QAAS,CAAED,iBCCnHE,EAAiC,CACrCC,WAAW,EACXC,OAAO,EACPJ,YAAa,CACXK,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,WAAY,GACZC,UAAW,GACXC,YAAa,KCbFC,4BAAuB,CACpCb,YDgBgC,WAGV,IAFtBc,EAEqB,uDAFKZ,EAC1Ba,EACqB,uCACrB,OAAOA,EAAOjB,MACZ,ID3BwC,uBC4BtC,OAAO,eACFgB,EADL,CAEEX,WAAW,IAEf,ID/BwC,+BCgCtC,MAAO,CACLA,WAAW,EACXC,OAAO,EACPJ,YAAae,EAAOd,QAAQD,aAAeE,EAAaF,aAE5D,IDpCwC,8BCsCtC,OADAgB,QAAQZ,MAAMW,EAAOd,QAAQgB,cAAgB,SACtC,eACFH,EADL,CAEEX,WAAW,EACXC,OAAO,IAEX,QACE,OAAOU,M,iCEhDAI,EAAc,uCAAG,4BAAAC,EAAA,+EAEHC,MAAM,GAAD,OAAIC,wBAAJ,2BAFF,cAEpBC,EAFoB,yBAGnBA,EAASC,QAHU,gCAK1BP,QAAQZ,MAAR,MAL0B,yDAAH,qD,WCKjBoB,G,WAWeC,GAXzB,SAAUD,EAAiBT,GAA3B,uEAEwB,OAFxB,kBAE8BW,YAAKR,GAFnC,OAGI,OADMlB,EAFV,gBAGU2B,YAAI5B,EAA0BC,IAHxC,8BAMI,OANJ,yBAKIgB,QAAQZ,MAAR,MALJ,UAMUuB,YJFyD,CAAE7B,KALzB,8BAK4DG,QAAS,CAAEgB,aIE5E,oBANvC,qDAWe,SAAUQ,IAAV,iEACb,OADa,SACPG,YJfoC,uBIeHJ,GAD1B,uCCVf,IAAMK,EAAiBC,cACRC,wBAAYC,EAASC,8BAAoBC,0BAAgBL,KAExEA,EAAeM,IAAIV,G,qFC2BJW,EA1BsB,SAAC,GAAyB,IAAD,QAAtBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACjD,OACE,yBAAKC,UAAWC,IAAOF,KAAMG,GAAG,QAC7BH,EAAKI,iBAAmB,yBAAKC,IAAKL,EAAKI,gBAAiBH,UAAWC,IAAOE,gBAAiBE,IAAI,KAChG,0BAAML,UAAWC,IAAOK,MAAOC,EAAWR,EAAKO,QAC9C,UAAAP,EAAKxC,YAAL,eAAWiD,aAAc,0BAAMR,UAAWC,IAAOQ,SAAUF,EAAWR,EAAKU,UAC5E,yBAAKT,UAAWC,IAAOS,oBACrB,uBAAGV,UAAWC,IAAOU,aAAcJ,EAAWR,EAAKY,eAEpDZ,EAAKa,aAAe,0BAAMZ,UAAWC,IAAOW,aAAxB,iBAAgDb,EAAKa,cACzEb,EAAKc,KAAO,yBAAKT,IAAKU,EAAmB,8BAAD,OAA+Bf,EAAKc,IAAIE,OAAxC,oBAA0DhB,EAAKc,IAAIG,UAAnE,SAAqFX,IAAKN,EAAKc,IAAIP,KAAMN,UAAWC,IAAOgB,UACnKlB,EAAKmB,UAAY,yBAAKd,IAAKU,EAAmB,mCAAD,iBAAoCf,EAAKmB,gBAAzC,aAAoC,EAAeF,UAAnD,SAAqEX,IAAG,UAAEN,EAAKmB,gBAAP,aAAE,EAAeZ,KAAMN,UAAWC,IAAOiB,WAC/J,0BAAMlB,UAAWC,IAAOkB,WAAxB,UACMpB,EAAKqB,YAAc,IADzB,OAC8BrB,EAAKsB,WAAL,WAAsBtB,EAAKsB,YAAe,IACrEtB,EAAKuB,YACJ,yBAAKlB,IAAKU,EAAmB,kCAAD,OAAmCf,EAAKuB,WAAWN,WAAnD,QAA+D,UAAAjB,EAAKxC,YAAL,eAAWgE,cAAe,SAAW,GAApG,SAC1BlB,IAAKN,EAAKuB,WAAWhB,KAAMN,UAAWC,IAAOqB,cAGlDvB,EAAKyB,aAAe,yBAAKpB,IAAKL,EAAKyB,YAAaxB,UAAWC,IAAOuB,YAAanB,IAAI,KACpF,yBAAKD,IAAKN,EAAWE,UAAWC,IAAOwB,MAAOpB,IAAKN,EAAKO,MAAQ,KAC/DP,EAAK2B,aAAe,yBAAKtB,IAAKL,EAAK2B,YAAa1B,UAAWC,IAAOyB,YAAarB,IAAI,OCO3EsB,EA5BqB,SAAC,GAAyB,IAAD,UAAtB7B,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAChD,OACE,yBAAKC,UAAWC,IAAOF,KAAMG,GAAG,QAC7BH,EAAKI,iBAAmB,yBAAKC,IAAKL,EAAKI,gBAAiBH,UAAWC,IAAOE,gBAAiBE,IAAI,KACtE,aAAzB,UAAAN,EAAKxC,YAAL,eAAWyD,YAA2B,oCACrC,0BAAMhB,UAAWC,IAAOK,MAAOC,EAAWR,EAAKO,OAC/C,yBAAKN,UAAS,UAAKC,IAAOS,mBAAZ,YAAkCT,IAAO2B,2BACrD,uBAAG5B,UAAWC,IAAOU,aAAcJ,EAAWR,EAAKY,eAEpDZ,EAAKc,KAAO,yBAAKT,IAAKU,EAAmB,8BAAD,OAA+Bf,EAAKc,IAAIE,OAAxC,oBAA0DhB,EAAKc,IAAIG,UAAnE,SAAqFX,IAAKN,EAAKc,IAAIP,KAAMN,UAAWC,IAAOgB,UACnKlB,EAAKmB,UAAY,yBAAKd,IAAKU,EAAmB,mCAAD,iBAAoCf,EAAKmB,gBAAzC,aAAoC,EAAeF,UAAnD,SAAqEX,IAAG,UAAEN,EAAKmB,gBAAP,aAAE,EAAeZ,KAAMN,UAAWC,IAAOiB,WAC/J,0BAAMlB,UAAWC,IAAOkB,WAAxB,UACMpB,EAAKqB,YAAc,IADzB,OAC8BrB,EAAKsB,WAAL,WAAsBtB,EAAKsB,YAAe,IACrEtB,EAAKuB,YACJ,yBAAKlB,IAAKU,EAAmB,kCAAD,OAAmCf,EAAKuB,WAAWN,WAAnD,QAA+D,UAAAjB,EAAKxC,YAAL,eAAWgE,cAAe,SAAW,GAApG,SAC1BlB,IAAKN,EAAKuB,WAAWhB,KAAMN,UAAWC,IAAOqB,eAIpDvB,EAAK8B,WAAa,yBAAKzB,IAAKL,EAAK8B,UAChC7B,UAAS,UAAKC,IAAO4B,UAAZ,YAAkD,aAAzB,UAAA9B,EAAKxC,YAAL,eAAWyD,WAA0Bf,IAAO6B,iBAAmB,IAAMzB,IAAI,KAC5GN,EAAKyB,aAAe,yBAAKpB,IAAKL,EAAKyB,YAAaxB,UAAWC,IAAOuB,YAAanB,IAAI,KACpF,yBAAKD,IAAKN,EAAWE,UAAWC,IAAOwB,MAAOpB,IAAKN,EAAKO,MAAQ,KAC/DP,EAAK2B,aAAe,yBAAKtB,IAAKL,EAAK2B,YAAa1B,UAAWC,IAAOyB,YAAarB,IAAI,OC6G3E0B,EApIsB,SAAC,GAAyB,IAAD,kCAAtBjC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACjDiC,qBAAU,WACR,GAAGjC,EAAKkC,MAAO,CACb,IAAIC,EAAc,EAClBnC,EAAKkC,MAAME,SAAQ,SAACC,GAClB,IAAIC,EAAsB,EAC1BD,EAAKE,WAAWH,SAAQ,SAACG,GAAD,OAAgBD,GAAeC,EAAWC,UAC/DF,EAAcH,IACfA,EAAcG,MAIlB,IAAMG,EAA2BC,SAASC,iBAAiB,aACrDC,GAAe1C,IAAO2C,aAAaC,OAAO,EAAG5C,IAAO2C,aAAaE,OAAS,GAChFN,EAAUL,SAAQ,SAACY,GACjBA,EAASC,MAAMC,KAAf,UAAyBC,KAAKC,IAAIR,EAAaA,EAAmC,GAAnBT,EAAc,IAA7E,WAGH,CAACnC,EAAKkC,QAoBT,OACE,yBAAKjC,UAAS,UAAKC,IAAOF,KAAZ,aAAoB,UAAAA,EAAKxC,YAAL,eAAWgE,cAAetB,IAAOmD,UAAY,IAAMlD,GAAG,QACrFH,EAAKI,iBAAmB,yBAAKC,IAAKL,EAAKI,gBAAiBH,UAAWC,IAAOE,gBAAiBE,IAAI,KAChG,0BAAML,UAAS,UAAKC,IAAOK,KAAZ,YAAoBL,IAAOoD,YAA3B,aAA0C,UAAAtD,EAAKuD,cAAL,eAAaC,gBAAiBtD,IAAOuD,YAAc,KACzGjD,EAAWR,EAAKO,OAChB,UAAAP,EAAK0D,eAAL,eAAcC,aAAc,yBAAKtD,IAAKU,EAAmB,0CAA2Cd,UAAWC,IAAO0D,SAAUtD,IAAI,MACpI,UAAAN,EAAK0D,eAAL,eAAcG,gBAAiB,yBAAKxD,IAAKU,EAAmB,6CAA8Cd,UAAWC,IAAO0D,SAAUtD,IAAI,MAE7I,yBAAKL,UAAS,UAAKC,IAAO4D,iBAAZ,aAAgC,UAAA9D,EAAK0D,eAAL,eAAcK,WAAY7D,IAAO8D,kBAAoB,KACjG,0BAAM/D,UAAWC,IAAO+D,aAAxB,MACA,0BAAMhE,UAAWC,IAAOgE,WAAYlE,EAAKkE,WAAalE,EAAKkE,WAAa,IAAMlE,EAAKkE,UAAY,OAE/F,UAAAlE,EAAK0D,eAAL,eAAcS,cAAenE,EAAKoE,cAClC,0BAAMnE,UAAWC,IAAOkE,cAAe,gBAAiB5D,EAAWR,EAAKoE,gBAExE,UAAApE,EAAK0D,eAAL,eAAcW,kBAAmBrE,EAAKsE,cACtC,0BAAMrE,UAAWC,IAAOoE,cAAetE,EAAKsE,cAE9C,yBAAKrE,UAAS,UAAKC,IAAOqE,aAAZ,aAA4B,UAAAvE,EAAK0D,eAAL,eAAcK,WAAY7D,IAAOsE,cAAgB,KACxFxE,EAAKyE,SACJ,yBAAKxE,UAAWC,IAAOuE,SACrB,yBAAKxE,UAAWC,IAAOwE,qBACpB,UAAA1E,EAAK0D,eAAL,eAAcK,WACb,yBAAK9D,UAAS,UAAKC,IAAOyE,YAAZ,YAA2BzE,IAAO0E,cAAgBvE,IAAKU,EAAmB,6CAA8CT,IAAI,KAE1I,yBAAKL,UAAWC,IAAOyE,YAAatE,IAAKU,EAAmB,2CAA4CT,IAAI,KAE9G,0BAAML,UAAS,UAAKC,IAAO8C,SAAZ,cAAkChD,EAAKyE,QAAQlE,OAEhE,uBAAGN,UAAWC,IAAO2E,aAAcrE,EAAWR,EAAKyE,QAAQK,QAG9D9E,EAAKkC,OAAUlC,EAAKkC,MAAM6C,KAAI,SAAC1C,EAAM2C,GAAP,aAC7B,yBAAKC,IAAKD,EACR/E,UAAS,UAAW,IAAN+E,EAAUhF,EAAKkC,OAASlC,EAAKkC,MAAMa,OAAS,EAAI7C,IAAOgF,aAAehF,IAAOmC,KAAO,GAAzF,aAA+F,UAAArC,EAAK0D,eAAL,eAAcK,WAAY7D,IAAOiF,MAAQ,KAChJ9C,EAAK9B,MACJ,yBAAKN,UAAWC,IAAOkF,iBACrB,yBAAKnF,UAAWC,IAAOmF,UAvDd,SAAChD,GACtB,IAAIC,EAAsB,EACpBgD,EAAajD,EAAKE,WAAWwC,KAAI,SAACQ,GAEtC,IADA,IAAMC,EAA6B,GAC3BR,EAAI,EAAGA,EAAIO,EAAS/C,OAAQwC,IAClC1C,IACAkD,EAAYC,KAAK,yBAAKpF,IAAKU,EAAmB,+BAAD,OAAgCwE,EAAS/H,KAAKyD,UAA9C,gBAAuEhB,UAAWC,IAAOwF,WAAYpF,IAAI,GAAG2E,IAAKD,KAEhK,OAAOQ,KAGT,OAAmB,IAAhBlD,EACM,yBAAKjC,IAAKU,EAAmB,gDAAiDd,UAAWC,IAAOwF,WAAYpF,IAAI,KAEhHgF,EA0CMK,CAAetD,IAElB,0BAAMpC,UAAS,UAAKC,IAAO8C,SAAZ,cAAkCX,EAAK9B,MACtD,0BAAMN,UAAWC,IAAO0F,YAAavD,EAAKwD,SAG9C,uBAAG5F,UAAWC,IAAO4F,UAAWtF,EAAW6B,EAAKyC,YAItD,yBAAK7E,UAAS,UAAKC,IAAO6F,QAAZ,cAAuB,UAAC/F,EAAKuD,cAAN,aAAC,EAAayC,mBAAd,UAAiChG,EAAK0D,eAAtC,aAAiC,EAAcuC,iBAAkB/F,IAAOmD,UAAY,KACtHrD,EAAKkG,cACJ,0BAAMjG,UAAWC,IAAOiG,UACtB,yBAAKlG,UAAWC,IAAOkG,aAAc/F,IAAKU,EAAmB,+BAAD,OAAgCf,EAAKkG,aAAajF,UAAlD,SAAoEX,IAAI,KACpI,qCAAQN,EAAKqG,gBAAkBrG,EAAKqG,eAAiB,IAAMrG,EAAKqG,eAAiB,KAGpFrG,EAAKsG,gBACJ,0BAAMrG,UAAWC,IAAOqG,YACtB,yBAAKtG,UAAWC,IAAOsG,eAAgBnG,IAAKU,EAAmB,+BAAD,OAAgCf,EAAKsG,eAAerF,UAApD,SAAsEX,IAAI,KACxI,kCAAQN,EAAKyG,kBAAoBzG,EAAKyG,iBAAmB,IAAMzG,EAAKyG,iBAAmB,KAG3F,yBAAKxG,UAAWC,IAAOwG,aACpBC,MAAMC,KAAKD,MAAM3G,EAAK0G,aAAe,EAAI1G,EAAK0G,YAAc,IAAI,SAACG,EAAG7B,GAAJ,OAC/DA,EAAI,GAAK,yBAAKC,IAAKD,EAAG/E,UAAWC,IAAO4G,gBAAiBzG,IAAKU,EAAmB,6CAA8CT,IAAI,WAIxI,UAAAN,EAAK0D,eAAL,eAAcqD,iBACb,yBAAK9G,UAAS,UAAKC,IAAOS,mBAAZ,YAAkCT,IAAO8G,4BACrD,uBAAG/G,UAAWC,IAAOU,aAAcJ,EAAWR,EAAKY,eAGtDZ,EAAKa,aAAe,0BAAMZ,UAAWC,IAAOW,aAAxB,iBAAgDb,EAAKa,cACzEb,EAAKc,KAAO,yBAAKT,IAAKU,EAAmB,8BAAD,OAA+Bf,EAAKc,IAAIE,OAAxC,oBAA0DhB,EAAKc,IAAIG,UAAnE,SAAqFX,IAAKN,EAAKc,IAAIP,KAAMN,UAAWC,IAAOgB,UACnKlB,EAAKmB,UAAY,yBAAKd,IAAKU,EAAmB,mCAAD,iBAAoCf,EAAKmB,gBAAzC,aAAoC,EAAeF,UAAnD,SAAqEX,IAAG,UAAEN,EAAKmB,gBAAP,aAAE,EAAeZ,KAAMN,UAAWC,IAAOiB,WAC/J,0BAAMlB,UAAWC,IAAOkB,WAAxB,UACMpB,EAAKqB,YAAc,IADzB,OAC8BrB,EAAKsB,WAAL,WAAsBtB,EAAKsB,YAAe,IACrEtB,EAAKuB,YACJ,yBAAKlB,IAAKU,EAAmB,kCAAD,OAAmCf,EAAKuB,WAAWN,WAAnD,QAA+D,UAAAjB,EAAKxC,YAAL,eAAWgE,gBAAX,UAA2BxB,EAAK0D,eAAhC,aAA2B,EAAcK,WAAW,SAAW,GAA9H,SAC1BzD,IAAKN,EAAKuB,WAAWhB,KAAMN,UAAWC,IAAOqB,cAGlDvB,EAAKyB,aAAe,yBAAKpB,IAAKL,EAAKyB,YAAaxB,UAAWC,IAAOuB,YAAanB,IAAI,KACpF,yBAAKD,IAAKN,EAAWE,UAAWC,IAAOwB,MAAOpB,IAAKN,EAAKO,MAAQ,MAC9D,UAAAP,EAAK0D,eAAL,eAAcS,cAAenE,EAAKiH,eAClC,yBAAKhH,UAAWC,IAAOgH,sBACrB,yBAAK7G,IAAKL,EAAKiH,cAAehH,UAAWC,IAAO+G,cAAe3G,IAAI,MAGtEN,EAAK2B,aAAe,yBAAKtB,IAAKL,EAAK2B,YAAa1B,UAAWC,IAAOyB,YAAarB,IAAI,OCpD3E6G,EAhEsB,SAAC,GAAc,IAAZnH,EAAW,EAAXA,KAAW,EACfoH,qBADe,mBAC1CrH,EAD0C,KAC/BsH,EAD+B,KAEzCC,EAA8DtH,EAA9DsH,UAAW9J,EAAmDwC,EAAnDxC,KAAM+J,EAA6CvH,EAA7CuH,QAASzG,EAAoCd,EAApCc,IAAK0G,EAA+BxH,EAA/BwH,UAAW9D,EAAoB1D,EAApB0D,QAASH,EAAWvD,EAAXuD,OAqD3D,OAnDAtB,qBAAU,WACR,IAAMwF,EAAW,SAACC,GAA+E,IAApDC,EAAmD,4DAAtBC,EAEpEC,EAAmB9G,EAAmB,WAAD,OAAYuG,EAAZ,MAyBzC,OAxBGK,IACDE,GAAQ,UAAOF,EAAP,MAEVG,OAAOC,OAAOL,GAAStF,SAAQ,SAAC4F,EAAehD,GAC7C,QAAa4C,IAAVI,GAAiC,YAAVA,EAAqB,CAC7C,GAAc,YAAVA,GAA0C,YAAnBN,EAAQnE,QACtB,eAAVyE,GAA6C,YAAnBN,EAAQnE,QACf,UAAnBmE,EAAQnE,QAAgC,UAAVyE,EAC/B,OAEO,IAANhD,IACD6C,GAAY,KAEdA,GAAYG,EACC,YAAVA,IACwB,YAAtBN,EAAQF,WAAiD,eAAtBE,EAAQF,YAC5CK,GAAQ,WAAQH,EAAQF,aAGf,MAAVQ,GAAkBN,EAAQnE,SAC3BsE,GAAY,cAIZ,GAAN,OAAUA,EAAV,SAGF,GAAGP,GAAa9J,GAAQ+J,EAAS,CAC/B,IAAIxH,EACJ,OAAOuH,GACL,IAAK,UACHvH,EAAY0H,EAAS,CAAEF,QAASA,EAAQtG,UAAWyC,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAASzC,UAAWuG,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWvG,UACpGsC,OAAM,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAQtC,UAAWzD,KAAMA,EAAKyD,WAAazD,EAAKyD,WAC1D,MACF,IAAK,SACHlB,EAAY0H,EAAS,CAAEF,QAASA,EAAQtG,UAAWqG,YAAW9J,KAAMA,EAAKyD,YACzE,MACF,IAAK,UACHlB,EAAY0H,EAAS,CAAEF,QAASA,EAAQtG,UAAWqG,YAAW9J,KAAMA,EAAKyD,UAAWyC,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAASzC,YACtG,MACF,QACE,OAEJoG,EAAatH,MAEd,CAACuH,EAAW9J,EAAM+J,EAASzG,EAAK0G,EAAW9D,EAASH,IAEtC,YAAd+D,EACM,kBAACW,EAAD,CAAalI,UAAWA,EAAWC,KAAMA,IAC1B,WAAdsH,EACD,kBAACY,EAAD,CAAYnI,UAAWA,EAAWC,KAAMA,IAExC,kBAACmI,EAAD,CAAapI,UAAWA,EAAWC,KAAMA,KAMvCQ,EAAa,SAACsE,GACzB,GAAGA,EAAM,CACP,IAAIsD,EAAiCtD,EAAKuD,MAAM,YAChD,GAAGD,EAAO,CACR,IAAME,EAAqBF,EAAMrD,KAAI,SAAAwD,GAAI,OAAIA,EAAKC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,OAC1EC,EAAc3D,EAAK4D,MAAM,YACzBC,EAAuC,GAW7C,OAVAF,EAAYrG,SAAQ,SAACwG,EAAS5D,GAC5B2D,EAAWlD,KAAKmD,GACbN,EAASvF,OAASiC,IAChBsD,EAAStD,GAAGjC,OAAS,EACtB4F,EAAWlD,KAAK,0BAAMR,IAAKD,EAAG/E,UAAWC,IAAO2I,YAAaP,EAAStD,KAEtE2D,EAAWlD,KAAK,0BAAMR,IAAKD,EAAG/E,UAAWC,IAAO4I,UAAWR,EAAStD,SAInE2D,EAEP,OAAO7D,EAGT,OAAO,GAIE/D,EAAqB,SAACgI,GAAD,gBAA8BhK,yBAA9B,OAA4EgK,I,iBC9C/FC,EAxDuB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAO9K,EAAmC,EAAnCA,MAAOkH,EAA4B,EAA5BA,SAAU6D,EAAkB,EAAlBA,YAAkB,EACjD9B,mBAAqB,IAD4B,mBAC5E+B,EAD4E,KACjEC,EADiE,KAgBjF,OAbAnH,qBAAU,WACR,IAAMoH,EAA2B,GACjClL,EAAMiE,SAAQ,SAAC5E,GACS,YAAnBA,EAAK8J,WACN+B,EAAa5D,KAAK,CAChBjI,OACAgF,OAAQ,OAId4G,EAAaC,KACZ,CAAClL,IAGF,6BACE,8BAAO8K,GACP,yBAAKhJ,UAAWC,IAAOoJ,SACpBH,EAAUpE,KAAI,SAACQ,EAAUP,GAAX,aACb,yBAAK/E,UAAWC,IAAO1C,KAAMyH,IAAKD,GAChC,0BAAM/E,UAAWC,IAAOqJ,OAAQC,KAAK,MAAMC,aAAW,WAAWC,QAAS,WACxE,IAAIC,EAAuB,YAAOtE,GAC9B7H,EAA6BmM,EAAYC,MAAK,SAAC/K,GAAD,OAAOA,EAAErB,KAAK2C,KAAOoF,EAAS/H,KAAK2C,MAClF3C,EACDA,EAAKgF,OAAShF,EAAKgF,OAAS,GAE5BhF,EAAO,CACLA,KAAM+H,EAAS/H,KACfgF,OAAQ,GAEVmH,EAAYlE,KAAKjI,IAEnB0L,EAAYS,KAZd,gBAcA,yBAAKtJ,IAAG,UAAKtB,wBAAL,uCAA+EwG,EAAS/H,KAAKyD,UAA7F,eAAqHhB,UAAWC,IAAOwB,MAAOpB,IAAKiF,EAAS/H,KAAK+C,KAAMsJ,MAAOtE,EAAS/H,KAAK+C,OACpM,0BAAMN,UAAWC,IAAOqJ,OAAQC,KAAK,MAAMC,aAAW,aAAaC,QAAS,WAC1E,IAAIC,EAAuB,YAAOtE,GAC9B7H,EAA6BmM,EAAYC,MAAK,SAAC/K,GAAD,OAAOA,EAAErB,KAAK2C,KAAOoF,EAAS/H,KAAK2C,MAClF3C,IACDA,EAAKgF,OAAShF,EAAKgF,OAAS,EACzBhF,EAAKgF,QAAU,GAChBmH,EAAYG,OAAOH,EAAYI,QAAQvM,GAAO,GAEhD0L,EAAYS,MARhB,gBAWA,+BAAO,UAAAtE,EAASuE,MAAK,SAAC/K,GAAD,OAAOA,EAAErB,KAAK2C,KAAOoF,EAAS/H,KAAK2C,aAAjD,eAAsDqC,SAAU,UC4qBpEwH,eAHS,SAACxL,GAAD,MAAmB,CAAEyL,iBAAkBzL,EAAMd,gBAC1C,SAACwM,GAAD,OAAmBC,6BAAmB,CAAE5M,sBAAsB2M,KAE1EF,EArtB0B,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,iBAAkB1M,EAAyB,EAAzBA,mBACtD6M,EAAgBC,kBAAgB,GAD+C,EAGnDjD,mBAAiB,WAHkC,mBAG9EE,EAH8E,KAGnEgD,EAHmE,OAI7DlD,qBAJ6D,mBAI9E5J,EAJ8E,KAIxE+M,EAJwE,OAKvDnD,qBALuD,mBAK9EG,EAL8E,KAKrEiD,EALqE,OAM/DpD,qBAN+D,mBAM9EtG,EAN8E,KAMzE2J,EANyE,OAOrDrD,qBAPqD,mBAO9EjG,EAP8E,KAOpEuJ,EAPoE,OAQnDtD,qBARmD,mBAQ9EI,EAR8E,KAQnEmD,EARmE,OASvDvD,qBATuD,mBAS9E1D,EAT8E,KASrEkH,EATqE,OAUzDxD,qBAVyD,mBAU9E7D,EAV8E,KAUtEsH,EAVsE,OAWjDzD,qBAXiD,mBAW9E7F,EAX8E,KAWlEuJ,EAXkE,OAY7C1D,qBAZ6C,mBAY9ElB,EAZ8E,KAYhE6E,EAZgE,OAazC3D,qBAbyC,oBAa9Ed,GAb8E,MAa9D0E,GAb8D,MAe/EC,GAAaZ,iBAA0B,MACvCa,GAAeb,iBAA0B,MACzCc,GAAUd,iBAA0B,MACpCe,GAAaf,iBAA0B,MACvCgB,GAAehB,iBAA0B,MACzCiB,GAAYjB,iBAA0B,MACtCkB,GAAalB,iBAA0B,MACvCmB,GAAcnB,iBAA0B,MACxCoB,GAAgBpB,iBAA0B,MAC1CqB,GAAkBrB,iBAA0B,MAC5CsB,GAAoBtB,iBAA0B,MAzBiC,GA2B7DjD,mBAAiB,IA3B4C,qBA2B9E7G,GA3B8E,MA2BxEqL,GA3BwE,SA4B7CxE,mBAAiB,IA5B4B,qBA4B9EhD,GA5B8E,MA4BhEyH,GA5BgE,SA6BnDzE,mBAAiB,KA7BkC,qBA6B9ElD,GA7B8E,MA6BnE4H,GA7BmE,SA8BvD1E,mBAAiB,IA9BsC,qBA8B9E1G,GA9B8E,MA8BrEqL,GA9BqE,SA+B7C3E,mBAAiB,IA/B4B,qBA+B9E9C,GA/B8E,MA+BhE0H,GA/BgE,SAgCzC5E,mBAAiB,GAhCwB,qBAgC9Ef,GAhC8E,MAgC9D4F,GAhC8D,SAiCrC7E,mBAAiB,IAjCoB,qBAiC9EX,GAjC8E,MAiC5DyF,GAjC4D,SAkC/C9E,mBAAiB,GAlC8B,qBAkC9EV,GAlC8E,MAkCjEyF,GAlCiE,SAmC/C/E,mBAAiB,IAnC8B,qBAmC9ExG,GAnC8E,MAmCjEwL,GAnCiE,SAoC/ChF,mBAAiB,IApC8B,qBAoC9EvG,GApC8E,MAoCjEwL,GApCiE,SAqCjDjF,mBAAiB,IArCgC,qBAqC9E/F,GArC8E,MAqClEiL,GArCkE,SAsCjDlF,mBAAiB,IAtCgC,qBAsC9E9F,GAtC8E,MAsClEiL,GAtCkE,SAuCvCnF,mBAAiB,IAvCsB,qBAuC9EhH,GAvC8E,MAuC7DoM,GAvC6D,SAwC/CpF,mBAAiB,IAxC8B,qBAwC9E3F,GAxC8E,MAwCjEgL,GAxCiE,SAyC/CrF,mBAAiB,IAzC8B,qBAyC9EzF,GAzC8E,MAyCjE+K,GAzCiE,SA0CnDtF,mBAAiB,IA1CkC,qBA0C9EtF,GA1C8E,MA0CnE6K,GA1CmE,SA2C3CvF,mBAAiB,IA3C0B,qBA2C9EH,GA3C8E,MA2C/D2F,GA3C+D,SA6CjDxF,oBAAkB,GA7C+B,qBA6C9EyF,GA7C8E,MA6ClEC,GA7CkE,SA8C/C1F,mBAAiB,IA9C8B,qBA8C9E2F,GA9C8E,MA8CjEC,GA9CiE,SA+C/C5F,mBAAiB,IA/C8B,qBA+C9EvC,GA/C8E,MA+CjEoI,GA/CiE,SAgDnD7F,mBAAiB,IAhDkC,qBAgD9E8F,GAhD8E,MAgDnEC,GAhDmE,SAiD/C/F,mBAAiB,IAjD8B,qBAiD9EgG,GAjD8E,MAiDjEC,GAjDiE,SAkDnDjG,mBAAiB,IAlDkC,qBAkD9EkG,GAlD8E,MAkDnEC,GAlDmE,SAmDnDnG,mBAAqB,IAnD8B,qBAmD9EoG,GAnD8E,MAmDnEC,GAnDmE,SAoD3CrG,oBAAkB,GApDyB,qBAoD9EsG,GApD8E,MAoD/DC,GApD+D,SAqDnDvG,mBAAiB,IArDkC,qBAqD9EwG,GArD8E,MAqDnEC,GArDmE,SAsDnDzG,mBAAiB,IAtDkC,qBAsD9E0G,GAtD8E,MAsDnEC,GAtDmE,SAuD/C3G,mBAAiB,IAvD8B,qBAuD9E4G,GAvD8E,MAuDjEC,GAvDiE,SAwDnD7G,mBAAqB,IAxD8B,qBAwD9E8G,GAxD8E,MAwDnEC,GAxDmE,MA0DrFlM,qBAAU,WACR1E,MACC,CAACA,IAEJ0E,qBAAU,WACRsI,EAAQN,EAAiBvM,YAAYS,MAAM,IAC3C4M,EAAgBd,EAAiBvM,YAAYS,MAAM,IACnDsM,EAAOR,EAAiBvM,YAAYO,KAAK,IACzCuM,EAAWP,EAAiBvM,YAAYK,SAAS,IACjD6M,EAAWX,EAAiBvM,YAAYQ,SAAS,IACjDwM,EAAYT,EAAiBvM,YAAYW,UAAU,MAClD,CAAC4L,IAOJhI,qBAAU,WACR,IAAGmI,EAAcgE,QAAjB,CAGA,GAAGjD,GAAQiD,QAAS,CAAC,IAAD,IACiBjD,GAAQiD,QAAnCC,EADU,EACVA,cACFC,EAAyB,UAFb,EACK5G,QACmB2G,UAAX,aAAG,EAAwBC,MACpDC,EAAUtE,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAaA,EAAEsB,MAAQmO,KAC5EC,GAAWA,IAAY/Q,GACxB+M,EAAQgE,QAGVhE,OAAQ3C,GAEV,GAAGwD,GAAWgD,QAAS,CAAC,IAAD,IACchD,GAAWgD,QAAtCC,EADa,EACbA,cACFC,EAAyB,UAFV,EACE5G,QACmB2G,UAAX,aAAG,EAAwBC,MACpDE,EAAavE,EAAiBvM,YAAYQ,SAAS0L,MAAK,SAAC/K,GAAD,OAAgBA,EAAEsB,MAAQmO,MAC3E,YAAVA,GAAwBE,GAAcA,IAAe9K,IACtDkH,EAAW4D,QAGb5D,OAAWhD,GAEb,GAAGyD,GAAa+C,QAAS,CAAC,IAAD,IACY/C,GAAa+C,QAAxCC,EADe,EACfA,cACFC,EAAyB,UAFR,EACA5G,QACmB2G,UAAX,aAAG,EAAwBC,MACpDG,EAAexE,EAAiBvM,YAAYU,WAAWwL,MAAK,SAAC/K,GAAD,OAAkBA,EAAEsB,MAAQmO,KAC3FG,GAAgBA,IAAiBjH,GAClCmD,EAAa8D,QAGf9D,OAAa/C,GAEf,GAAG0D,GAAU8C,QAAS,CAAC,IAAD,IACe9C,GAAU8C,QAArCC,EADY,EACZA,cACFC,EAAyB,UAFX,EACG5G,QACmB2G,UAAX,aAAG,EAAwBC,MACpDI,EAAYzE,EAAiBvM,YAAYM,SAAS4L,MAAK,SAAC/K,GAAD,OAAeA,EAAEsB,MAAQmO,MACzE,YAAVA,GAAwBI,GAAaA,IAAcnL,IACpDsH,EAAU6D,QAGZ7D,OAAUjD,MAEX,CAACqC,EAAiBvM,YAAa4J,EAAW9J,EAAMkG,EAAS8D,EAAWjE,IAKvE,IAAMoL,GAAW,iBAAa,CAC5BpH,UACAD,YACA9J,OACAsD,MACA0G,YACA9D,UACAH,SACAhD,QACA6D,gBACA6C,iBACA/C,aACAxD,WACAoB,aACAwC,gBACAG,QAASoI,GAAa,CACpBtM,KAAMwM,GACNjI,KAAMD,SACJ+C,EACJ1F,MAAM,CACJ,CACE3B,KAAM2M,GACNpI,KAAMwI,GACNzH,OAAQuH,GACR7K,WAAYiL,KALX,oBAOEX,IAAca,GAAgB,CAAC,CAClCnN,KAAMqN,GACN9I,KAAMgJ,GACNjI,OAAQmI,GACRzL,WAAY2L,KACT,KAEPhI,eACAG,kBACAC,kBACAG,oBACAC,eACA7F,eACAQ,cACAC,cACAH,WACAI,aACAX,eACAR,mBACAqB,eACAE,iBAsNF,OACE,yBAAK1B,UAAWC,IAAOoJ,SACrB,6BACE,4BAAQrJ,UAAWC,IAAOqJ,OAAQG,QApMrB,WACjBkF,UAAUC,UAAUC,WACjBC,MAAK,SAACT,GACL,IAAMU,EAAUC,KAAKC,MAAMZ,GAC3BlE,EAAcgE,SAAU,EAExBxC,GAAQoD,EAAQzO,MAChBsL,GAAgBmD,EAAQ5K,cACxBwI,GAAiBoC,EAAQ/H,eACzB6E,GAAakD,EAAQ9K,WACrB6H,GAAWiD,EAAQtO,SACnBiM,GAAaqC,EAAQlN,WACrBkK,GAAgBgD,EAAQ1K,cACxB2H,GAAkB+C,EAAQ3I,gBAC1B6F,GAAoB8C,EAAQvI,kBAC5B0F,GAAe6C,EAAQtI,aACvB2F,GAAe2C,EAAQnO,aACvByL,GAAc0C,EAAQ3N,YACtBkL,GAAcyC,EAAQ1N,YACtB8K,GAAe4C,EAAQpO,aACvB4L,GAAmBwC,EAAQ5O,iBAC3BqM,GAAeuC,EAAQvN,aACvBiL,GAAesC,EAAQrN,aACpBqN,EAAQvK,UACTqI,IAAc,GACdE,GAAegC,EAAQvK,QAAQlE,MAC/B0M,GAAe+B,EAAQvK,QAAQK,OAEjCqI,GAAa6B,EAAQ9M,MAAM,GAAG3B,MAC9B8M,GAAe2B,EAAQ9M,MAAM,GAAG2D,QAChC0H,GAAayB,EAAQ9M,MAAM,GAAG4C,MAC9B2I,GAAauB,EAAQ9M,MAAM,GAAGK,YAC3ByM,EAAQ9M,MAAM,KACfyL,IAAiB,GACjBE,GAAamB,EAAQ9M,MAAM,GAAG3B,MAC9B0N,GAAee,EAAQ9M,MAAM,GAAG2D,QAChCkI,GAAaiB,EAAQ9M,MAAM,GAAG4C,MAC9BqJ,GAAaa,EAAQ9M,MAAM,GAAGK,aAGhC,IAAM4M,EAAkClF,EAAiBvM,YAAYK,SAAS6L,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQzH,QAAQpH,MAChHgP,GACD3E,EAAW2E,GACRlE,GAAWmD,SAAWe,IACvBlE,GAAWmD,QAAQC,cAAgBpE,EAAiBvM,YAAYK,SAASgM,QAAQoF,MAGhFlE,GAAWmD,UACZnD,GAAWmD,QAAQC,cAAgB,GAErC7D,OAAW5C,IAEb,IAAMwH,EAAeJ,EAAQ1H,UAC1B8H,GACD9E,EAAa8E,GACVlE,GAAakD,UACdlD,GAAakD,QAAQC,cAAgB1H,MAAMC,KAAKsE,GAAakD,QAAQ1G,SAAS2H,WAAU,SAACC,GAAD,OAAOA,EAAEhB,QAAUc,QAG1GlE,GAAakD,UACdlD,GAAakD,QAAQC,cAAgB,GAEvC/D,EAAa,YAEf,IAAMiE,EAA4BtE,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQxR,KAAK2C,MAYvG,GAXGoO,GACDhE,EAAQgE,GACLpD,GAAQiD,UACTjD,GAAQiD,QAAQC,cAAgBpE,EAAiBvM,YAAYS,MAAM4L,QAAQwE,MAG1EpD,GAAQiD,UACTjD,GAAQiD,QAAQC,cAAgB,GAElC9D,OAAQ3C,IAEPoH,EAAQtL,QAAS,CAClB,IAAM8K,EAAkCvE,EAAiBvM,YAAYQ,SAAS0L,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQtL,QAAQvD,MAChHqO,IACD5D,EAAW4D,GACRpD,GAAWgD,UACZhD,GAAWgD,QAAQC,cAAgBpE,EAAiBvM,YAAYQ,SAAS6L,QAAQyE,UAIlFpD,GAAWgD,UACZhD,GAAWgD,QAAQC,cAAgB,GAErCzD,OAAWhD,GAEb,GAAGoH,EAAQlO,IAAK,CACd,IAAMyO,EAA0BtF,EAAiBvM,YAAYO,KAAK2L,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQlO,IAAIX,MAChGoP,IACD9E,EAAO8E,GACJhE,GAAW6C,UACZ7C,GAAW6C,QAAQC,cAAgBpE,EAAiBvM,YAAYO,KAAK8L,QAAQwF,UAI9EhE,GAAW6C,UACZ7C,GAAW6C,QAAQC,cAAgB,GAErCzD,OAAWhD,GAEb,GAAGoH,EAAQ9I,aAAc,CACvB,IAAMsJ,EAAoCvF,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQ9I,aAAa/F,MACpHqP,IACDzE,EAAgByE,GACb9D,GAAgB0C,UACjB1C,GAAgB0C,QAAQC,cAAgBpE,EAAiBvM,YAAYS,MAAM4L,QAAQyF,UAIpF9D,GAAgB0C,UACjB1C,GAAgB0C,QAAQC,cAAgB,GAE1CtD,OAAgBnD,GAElB,GAAGoH,EAAQ1I,eAAgB,CACzB,IAAMmJ,EAAsCxF,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQ1I,eAAenG,MACxHsP,IACDzE,GAAkByE,GACf9D,GAAkByC,UACnBzC,GAAkByC,QAAQC,cAAgBpE,EAAiBvM,YAAYS,MAAM4L,QAAQ0F,UAItF9D,GAAkByC,UACnBzC,GAAkByC,QAAQC,cAAgB,GAE5CrD,QAAkBpD,GAEpB,GAAGoH,EAAQ7N,SAAU,CACnB,IAAMuO,EAAoCzF,EAAiBvM,YAAYW,UAAUuL,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQ7N,SAAShB,MACpHuP,IACDhF,EAAYgF,GACTlE,GAAY4C,UACb5C,GAAY4C,QAAQC,cAAgBpE,EAAiBvM,YAAYW,UAAU0L,QAAQ2F,UAIpFlE,GAAY4C,UACb5C,GAAY4C,QAAQC,cAAgB,GAEtC3D,OAAY9C,GAEd,GAAGoH,EAAQxH,UAAW,CACpB,IAAMiH,EAAsCxE,EAAiBvM,YAAYU,WAAWwL,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQxH,UAAUrH,MACxHsO,IACD9D,EAAa8D,GACVpD,GAAa+C,UACd/C,GAAa+C,QAAQC,cAAgBpE,EAAiBvM,YAAYU,WAAW2L,QAAQ0E,UAItFpD,GAAa+C,UACd/C,GAAa+C,QAAQC,cAAgB,GAEvC1D,OAAa/C,GAEf,GAAGoH,EAAQzL,OAAQ,CACjB,IAAMmL,EAAgCzE,EAAiBvM,YAAYM,SAAS4L,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQzL,OAAOpD,MAC7GuO,IACD7D,EAAU6D,GACPpD,GAAU8C,UACX9C,GAAU8C,QAAQC,cAAgBpE,EAAiBvM,YAAYM,SAAS+L,QAAQ2E,UAIjFpD,GAAU8C,UACX9C,GAAU8C,QAAQC,cAAgB,GAEpCxD,OAAUjD,GAEZ,GAAGoH,EAAQzN,WAAY,CACrB,IAAMoO,EAAwC1F,EAAiBvM,YAAYY,YAAYsL,MAAK,SAAC/K,GAAD,OAAOA,EAAEsB,KAAO6O,EAAQzN,WAAWpB,MAC5HwP,IACD7E,EAAc6E,GACXlE,GAAc2C,UACf3C,GAAc2C,QAAQC,cAAgBpE,EAAiBvM,YAAYY,YAAYyL,QAAQ4F,UAIxFlE,GAAc2C,UACf3C,GAAc2C,QAAQC,cAAgB,GAExCvD,OAAclD,GAEhBwC,EAAcgE,SAAU,KAEzBwB,MAAMlR,QAAQZ,SAMb,yBACA,2BAAO+R,QAAQ,UAAU5P,UAAWC,IAAO4P,OACzC,0BAAM7P,UAAWC,IAAO6P,YAAa,YACrC,4BAAQ5P,GAAG,UAAU6P,IAAK/E,GAAY1K,KAAK,UAAUN,UAAWC,IAAO+P,WACrEC,SAAU,SAAArJ,GAAC,OAAI2D,EAAWP,EAAiBvM,YAAYK,SAAS6L,MAAK,SAAC/K,GAAD,OAAgBA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YAC9GrE,EAAiBvM,YAAYK,SAASgH,KAAI,SAACuJ,EAAgBtJ,GAAjB,OACzC,4BAAQsJ,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAI9C,2BAAOsP,QAAQ,YAAY5P,UAAWC,IAAO4P,OAC3C,0BAAM7P,UAAWC,IAAO6P,YAAa,aACrC,4BAAQ5P,GAAG,YAAY6P,IAAK9E,GAAc3K,KAAK,YAAYN,UAAWC,IAAO+P,WAAYC,SAAU,SAAArJ,GAAC,OAAIyD,EAAazD,EAAEsJ,cAAc7B,SACnI,4BAAQA,MAAO,WAAY,cAC3B,4BAAQA,MAAO,WAAY,WAC3B,4BAAQA,MAAO,UAAW,YAG9B,2BAAOuB,QAAQ,OAAO5P,UAAWC,IAAO4P,OACtC,0BAAM7P,UAAWC,IAAO6P,YAAa,QACrC,4BAAQC,IAAK7E,GAAShL,GAAG,OAAOI,KAAK,OAAON,UAAWC,IAAO+P,WAC5DC,SAAU,SAAArJ,GAAC,OAAI0D,EAAQN,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAaA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YACrGrE,EAAiBvM,YAAYS,MAAM4G,KAAI,SAACuJ,EAAatJ,GACpD,OAAGsC,IAAcgH,EAAMhH,WAGd,4BAAQ8I,SAAU9I,IAAcgH,EAAMhH,UAAWgH,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,YAK3F,OAAJ/C,QAAI,IAAJA,OAAA,EAAAA,EAAM6S,cAA6B,WAAd/I,GACpB,2BAAOuI,QAAQ,UAAU5P,UAAWC,IAAO4P,OACzC,0BAAM7P,UAAWC,IAAO6P,YAAa,WACrC,4BAAQC,IAAK5E,GAAYjL,GAAG,UAAUI,KAAK,UAAUN,UAAWC,IAAO+P,WACrEC,SAAU,SAAArJ,GAAC,OAAI+D,EAAWX,EAAiBvM,YAAYQ,SAAS0L,MAAK,SAAC/K,GAAD,OAAgBA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,aAC1G,OAAJ9Q,QAAI,IAAJA,OAAA,EAAAA,EAAM8S,kBAAmB,4BAAQhC,MAAO,WAAY,WACpDrE,EAAiBvM,YAAYQ,SAAS6G,KAAI,SAACuJ,EAAgBtJ,GAC1D,QAAIsJ,EAAMnQ,MAAMoS,UAAa,OAAJ/S,QAAI,IAAJA,OAAA,EAAAA,EAAM2C,KAAM,IAG5B,4BAAQmO,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,YAMjD,OAAPmD,QAAO,IAAPA,OAAA,EAAAA,EAAS8M,gBAA+B,WAAdlJ,GAAwC,YAAdA,GACnD,2BAAOuI,QAAQ,YAAY5P,UAAWC,IAAO4P,OAC3C,0BAAM7P,UAAWC,IAAO6P,YAAa,aACrC,4BAAQC,IAAK3E,GAAclL,GAAG,YAAYI,KAAK,YAAYN,UAAWC,IAAO+P,WAC3EC,SAAU,SAAArJ,GAAC,OAAI8D,EAAaV,EAAiBvM,YAAYU,WAAWwL,MAAK,SAAC/K,GAAD,OAAkBA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YACpHrE,EAAiBvM,YAAYU,WAAW2G,KAAI,SAACuJ,EAAkBtJ,GAC9D,QAAIsJ,EAAMpQ,SAASqS,UAAgB,OAAP7M,QAAO,IAAPA,OAAA,EAAAA,EAASvD,KAAM,IAGlC,4BAAQmO,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAM1C,WAAd+G,GAAwC,YAAdA,KAAgC,OAAJ9J,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,SAAS,MAAf,OAAqB0F,QAArB,IAAqBA,OAArB,EAAqBA,EAAS1F,SAAS,MAAvC,OAA6CwJ,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAWxJ,SAAS,MACtH,2BAAO6R,QAAQ,SAAS5P,UAAWC,IAAO4P,OACxC,0BAAM7P,UAAWC,IAAO6P,YAAa,UACrC,4BAAQC,IAAK1E,GAAWnL,GAAG,SAASI,KAAK,SAASN,UAAWC,IAAO+P,WAClEC,SAAU,SAAArJ,GAAC,OAAIgE,EAAUZ,EAAiBvM,YAAYM,SAAS4L,MAAK,SAAC/K,GAAD,OAAeA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YAC7G,4BAAQA,MAAO,WAAY,WAC1BrE,EAAiBvM,YAAYM,SAAS+G,KAAI,SAACuJ,EAAetJ,GACzD,IAAMyL,GAA4B,OAAJjT,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,SAASuS,SAASjC,EAAMnO,OAAO,EAC7DuQ,GAAkC,OAAPhN,QAAO,IAAPA,OAAA,EAAAA,EAAS1F,SAASuS,SAASjC,EAAMnO,OAAO,EACnEwQ,GAAsC,OAATnJ,QAAS,IAATA,OAAA,EAAAA,EAAWxJ,SAASuS,SAASjC,EAAMnO,OAAO,EAC7E,UAAIsQ,IAAiBC,GAAoBhN,IAAaiN,GAAsBnJ,MACtEkJ,IAAoBC,GAAsBnJ,KAC3CmJ,IACI,4BAAQrC,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,aAQxC,WAAd+G,GAA8C,aAAhB,OAAJ9J,QAAI,IAAJA,OAAA,EAAAA,EAAMyD,aAA4B,oCAC7D,2BAAO4O,QAAQ,MAAM5P,UAAWC,IAAO4P,OACrC,0BAAM7P,UAAWC,IAAO6P,YAAa,YACrC,4BAAQC,IAAKzE,GAAYpL,GAAG,MAAMI,KAAK,MAAMN,UAAWC,IAAO+P,WAC7DC,SAAU,SAAArJ,GAAC,OAAI4D,EAAOR,EAAiBvM,YAAYO,KAAK2L,MAAK,SAAC/K,GAAD,OAAYA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YAClGrE,EAAiBvM,YAAYO,KAAK8G,KAAI,SAACuJ,EAAYtJ,GAAb,OACrC,4BAAQsJ,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAI9C,2BAAOsP,QAAQ,WAAW5P,UAAWC,IAAO4P,OAC1C,0BAAM7P,UAAWC,IAAO6P,YAAa,YACrC,4BAAQC,IAAKxE,GAAarL,GAAG,WAAWI,KAAK,WAAWN,UAAWC,IAAO+P,WACxEC,SAAU,SAAArJ,GAAC,OAAI6D,EAAYT,EAAiBvM,YAAYW,UAAUuL,MAAK,SAAC/K,GAAD,OAAiBA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YACjHrE,EAAiBvM,YAAYW,UAAU0G,KAAI,SAACuJ,EAAiBtJ,GAAlB,OAC1C,4BAAQsJ,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAI9C,2BAAOsP,QAAQ,aAAa5P,UAAWC,IAAO4P,OAC5C,0BAAM7P,UAAWC,IAAO6P,YAAa,eACrC,4BAAQC,IAAKvE,GAAetL,GAAG,aAAaI,KAAK,aAAaN,UAAWC,IAAO+P,WAC9EC,SAAU,SAAArJ,GAAC,OAAIiE,EAAcb,EAAiBvM,YAAYY,YAAYsL,MAAK,SAAC/K,GAAD,OAAmBA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YACxH,4BAAQA,MAAO,QAAS,QACvBrE,EAAiBvM,YAAYY,YAAYyG,KAAI,SAACuJ,EAAmBtJ,GAApB,OAC5C,4BAAQsJ,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAI9C,2BAAOsP,QAAQ,OAAO5P,UAAWC,IAAO4P,OACtC,0BAAM7P,UAAWC,IAAO6P,YAAa,QACrC,2BAAOvS,KAAK,OAAO2C,GAAG,OAAOI,KAAK,OAAON,UAAWC,IAAO+P,WACzD3B,MAAO/N,GAAM2P,SAAU,SAAArJ,GAAC,OAAI+E,GAAQ/E,EAAEsJ,cAAc7B,WAEzC,YAAdhH,GACC,2BAAOuI,QAAQ,YAAY5P,UAAWC,IAAO4P,OAC3C,0BAAM7P,UAAWC,IAAO6P,YAAa,aACrC,2BAAOvS,KAAK,SAAS4F,IAAI,MAAMwN,IAAI,IAAIzQ,GAAG,YAAYI,KAAK,YAAYN,UAAWC,IAAO+P,WACvF3B,MAAOpK,GAAWgM,SAAU,SAAArJ,GAAC,OAAIiF,IAAcjF,EAAEsJ,cAAc7B,YAG7D,OAAP5K,QAAO,IAAPA,OAAA,EAAAA,EAASS,cAAe,oCACvB,2BAAO0L,QAAQ,eAAe5P,UAAWC,IAAO4P,OAC9C,0BAAM7P,UAAWC,IAAO6P,YAAa,iBACrC,2BAAOvS,KAAK,OAAO2C,GAAG,eAAeI,KAAK,eAAeN,UAAWC,IAAO+P,WACzE3B,MAAOlK,GAAc8L,SAAU,SAAArJ,GAAC,OAAIgF,GAAgBhF,EAAEsJ,cAAc7B,WAExE,2BAAOuB,QAAQ,gBAAgB5P,UAAWC,IAAO4P,OAC/C,0BAAM7P,UAAWC,IAAO6P,YAAa,kBACrC,2BAAOvS,KAAK,OAAOqT,OAAO,UAAU1Q,GAAG,gBAAgBI,KAAK,gBAAgBN,UAAWC,IAAO+P,WAAYC,SAAU,SAAArJ,GAC/GA,EAAEiK,OAAOC,OAASlK,EAAEiK,OAAOC,MAAM,GAClCnE,GAAiBoE,OAAOC,IAAIC,gBAAgBrK,EAAEiK,OAAOC,MAAM,KAE3DnE,GAAiB,UAKjB,OAAPlJ,QAAO,IAAPA,OAAA,EAAAA,EAASW,kBACR,2BAAOwL,QAAQ,eAAe5P,UAAS,UAAKC,IAAO4P,MAAZ,YAAqB5P,IAAOiR,aACjE,0BAAMlR,UAAWC,IAAO6P,YAAa,oBACrC,2BAAOvS,KAAK,OAAO2C,GAAG,eAAeI,KAAK,eAAeN,UAAWC,IAAO+P,WACzE3B,MAAOhK,GAAc4L,SAAU,SAAArJ,GAAC,OAAImF,GAAgBnF,EAAEsJ,cAAc7B,YAGrE,OAAJ9Q,QAAI,IAAJA,OAAA,EAAAA,EAAMiD,aACL,2BAAOoP,QAAQ,UAAU5P,UAAWC,IAAO4P,OACzC,0BAAM7P,UAAWC,IAAO6P,YAAa,WACrC,2BAAOvS,KAAK,OAAO2C,GAAG,UAAUI,KAAK,UAAUN,UAAWC,IAAO+P,WAC/D3B,MAAO5N,GAASwP,SAAU,SAAArJ,GAAC,OAAIkF,GAAWlF,EAAEsJ,cAAc7B,WAGjD,YAAdhH,GAA2B,oCAC1B,2BAAOuI,QAAQ,aAAa5P,UAAWC,IAAO4P,OAC5C,0BAAM7P,UAAWC,IAAO6P,YAAa,eACrC,2BAAOvS,KAAK,WAAW2C,GAAG,aAAaI,KAAK,aAAaN,UAAWC,IAAOkR,cACzEC,QAASxE,GAAYqD,SAAU,SAAArJ,GAAC,OAAIiG,GAAcjG,EAAEsJ,cAAckB,aAErExE,IAAc,oCACb,2BAAOgD,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,gBACrC,2BAAOvS,KAAK,OAAO2C,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WACvE3B,MAAOvB,GAAamD,SAAU,SAAArJ,GAAC,OAAImG,GAAenG,EAAEsJ,cAAc7B,WAEtE,2BAAOuB,QAAQ,cAAc5P,UAAS,UAAKC,IAAO4P,MAAZ,YAAqB5P,IAAOiR,aAChE,0BAAMlR,UAAWC,IAAO6P,YAAa,gBACrC,8BAAU5P,GAAG,cAAcI,KAAK,cAAcN,UAAS,UAAKC,IAAO+P,WAAZ,YAA0B/P,IAAOoR,eACtFhD,MAAOzJ,GAAaqL,SAAU,SAAArJ,GAAC,OAAIoG,GAAepG,EAAEsJ,cAAc7B,YAGxE,2BAAOuB,QAAQ,YAAY5P,UAAWC,IAAO4P,OAC3C,0BAAM7P,UAAWC,IAAO6P,YAAa,aACrC,2BAAOvS,KAAK,OAAO2C,GAAG,YAAYI,KAAK,YAAYN,UAAWC,IAAO+P,WACnE3B,MAAOpB,GAAWgD,SAAU,SAAArJ,GAAC,OAAIsG,GAAatG,EAAEsJ,cAAc7B,WAElE,2BAAOuB,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,eACrC,2BAAOvS,KAAK,OAAO2C,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WACvE3B,MAAOlB,GAAa8C,SAAU,SAAArJ,GAAC,OAAIwG,GAAexG,EAAEsJ,cAAc7B,WAEtE,2BAAOuB,QAAQ,YAAY5P,UAAS,UAAKC,IAAO4P,MAAZ,YAAqB5P,IAAOiR,aAC9D,0BAAMlR,UAAWC,IAAO6P,YAAa,aACrC,8BAAU5P,GAAG,YAAYI,KAAK,YAAYN,UAAS,UAAKC,IAAO+P,WAAZ,YAA0B/P,IAAOoR,eAClFhD,MAAOhB,GAAW4C,SAAU,SAAArJ,GAAC,OAAI0G,GAAa1G,EAAEsJ,cAAc7B,WAElE,kBAAC,EAAD,CAAcrF,MAAO,YAAa9K,MAAO8L,EAAiBvM,YAAYS,MAAOkH,SAAUmI,GAAWtE,YAAauE,MAC7GZ,IAAc,oCACd,2BAAOgD,QAAQ,gBAAgB5P,UAAWC,IAAO4P,OAC/C,0BAAM7P,UAAWC,IAAO6P,YAAa,mBACrC,2BAAOvS,KAAK,WAAW2C,GAAG,gBAAgBI,KAAK,gBAAgBN,UAAWC,IAAOkR,cAC/EC,QAAS3D,GAAewC,SAAU,SAAArJ,GAAC,OAAI8G,GAAiB9G,EAAEsJ,cAAckB,aAE3E3D,IAAiB,oCAChB,2BAAOmC,QAAQ,YAAY5P,UAAWC,IAAO4P,OAC3C,0BAAM7P,UAAWC,IAAO6P,YAAa,aACrC,2BAAOvS,KAAK,OAAO2C,GAAG,YAAYI,KAAK,YAAYN,UAAWC,IAAO+P,WACnE3B,MAAOV,GAAWsC,SAAU,SAAArJ,GAAC,OAAIgH,GAAahH,EAAEsJ,cAAc7B,WAElE,2BAAOuB,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,eACrC,2BAAOvS,KAAK,OAAO2C,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WACvE3B,MAAON,GAAakC,SAAU,SAAArJ,GAAC,OAAIoH,GAAepH,EAAEsJ,cAAc7B,WAEtE,2BAAOuB,QAAQ,YAAY5P,UAAS,UAAKC,IAAO4P,MAAZ,YAAqB5P,IAAOiR,aAC9D,0BAAMlR,UAAWC,IAAO6P,YAAa,aACrC,8BAAU5P,GAAG,YAAYI,KAAK,YAAYN,UAAS,UAAKC,IAAO+P,WAAZ,YAA0B/P,IAAOoR,eAClFhD,MAAOR,GAAWoC,SAAU,SAAArJ,GAAC,OAAIkH,GAAalH,EAAEsJ,cAAc7B,WAElE,kBAAC,EAAD,CAAcrF,MAAO,YAAa9K,MAAO8L,EAAiBvM,YAAYS,MAAOkH,SAAU6I,GAAWhF,YAAaiF,OAGnH,2BAAO0B,QAAQ,eAAe5P,UAAWC,IAAO4P,OAC9C,0BAAM7P,UAAWC,IAAO6P,YAAa,iBACrC,4BAAQC,IAAKtE,GAAiBvL,GAAG,eAAeI,KAAK,eAAeN,UAAWC,IAAO+P,WACpFC,SAAU,SAAArJ,GAAC,OAAIkE,EAAgBd,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAaA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YAC7GrE,EAAiBvM,YAAYS,MAAM4G,KAAI,SAACuJ,EAAatJ,GAClD,OAAGsC,IAAcgH,EAAMhH,WAGd,4BAAQ8I,SAAU9I,IAAcgH,EAAMhH,UAAWgH,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAKlG,2BAAOsP,QAAQ,iBAAiB5P,UAAWC,IAAO4P,OAChD,0BAAM7P,UAAWC,IAAO6P,YAAa,mBACrC,2BAAOvS,KAAK,SAAS4F,IAAI,KAAKwN,IAAI,IAAIzQ,GAAG,iBAAiBI,KAAK,iBAAiBN,UAAWC,IAAO+P,WAChG3B,MAAOjI,GAAgB6J,SAAU,SAAArJ,GAAC,OAAIoF,IAAmBpF,EAAEsJ,cAAc7B,WAE7E,2BAAOuB,QAAQ,iBAAiB5P,UAAWC,IAAO4P,OAChD,0BAAM7P,UAAWC,IAAO6P,YAAa,mBACrC,4BAAQC,IAAKrE,GAAmBxL,GAAG,iBAAiBI,KAAK,iBAAiBN,UAAWC,IAAO+P,WAC1FC,SAAU,SAAArJ,GAAC,OAAImE,GAAkBf,EAAiBvM,YAAYS,MAAMyL,MAAK,SAAC/K,GAAD,OAAaA,EAAEsB,MAAQ0G,EAAEsJ,cAAc7B,YAChH,4BAAQA,MAAO,QAAS,QACvBrE,EAAiBvM,YAAYS,MAAM4G,KAAI,SAACuJ,EAAatJ,GAClD,OAAGsC,IAAcgH,EAAMhH,WAGd,4BAAQ8I,SAAU9I,IAAcgH,EAAMhH,UAAWgH,MAAOA,EAAMnO,GAAI8E,IAAKD,GAAIsJ,EAAM/N,WAKjG+F,IACC,2BAAOuJ,QAAQ,mBAAmB5P,UAAWC,IAAO4P,OAClD,0BAAM7P,UAAWC,IAAO6P,YAAa,mBACrC,2BAAOvS,KAAK,SAAS4F,IAAI,KAAKwN,IAAI,IAAIzQ,GAAG,mBAAmBI,KAAK,mBAAmBN,UAAWC,IAAO+P,WACpG3B,MAAO7H,GAAkByJ,SAAU,SAAArJ,GAAC,OAAIqF,IAAqBrF,EAAEsJ,cAAc7B,WAGnF,2BAAOuB,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,gBACrC,2BAAOvS,KAAK,SAAS4F,IAAI,IAAIwN,IAAI,IAAIzQ,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WACzF3B,MAAO5H,GAAawJ,SAAU,SAAArJ,GAAC,OAAIsF,IAAgBtF,EAAEsJ,cAAc7B,aAGjE,OAAP5K,QAAO,IAAPA,OAAA,EAAAA,EAASqD,iBACR,2BAAO8I,QAAQ,cAAc5P,UAAS,UAAKC,IAAO4P,MAAZ,YAAqB5P,IAAOiR,aAChE,0BAAMlR,UAAWC,IAAO6P,YAAa,eACrC,8BAAU5P,GAAG,cAAcI,KAAK,cAAcN,UAAS,UAAKC,IAAO+P,WAAZ,YAA0B/P,IAAOoR,eACtFhD,MAAO1N,GAAasP,SAAU,SAAArJ,GAAC,OAAIuF,GAAevF,EAAEsJ,cAAc7B,WAGzD,WAAdhH,GACC,2BAAOuI,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,eACrC,2BAAOvS,KAAK,OAAO2C,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WACvE3B,MAAOzN,GAAaqP,SAAU,SAAArJ,GAAC,OAAIwF,GAAexF,EAAEsJ,cAAc7B,WAGxE,2BAAOuB,QAAQ,aAAa5P,UAAWC,IAAO4P,OAC5C,0BAAM7P,UAAWC,IAAO6P,YAAa,eACrC,2BAAOvS,KAAK,SAAS2C,GAAG,aAAaI,KAAK,aAAaN,UAAWC,IAAO+P,WACvE3B,MAAOjN,GAAY6O,SAAU,SAAArJ,GAAC,OAAIyF,GAAczF,EAAEsJ,cAAc7B,WAEpE,2BAAOuB,QAAQ,aAAa5P,UAAWC,IAAO4P,OAC5C,0BAAM7P,UAAWC,IAAO6P,YAAa,gBACrC,2BAAOvS,KAAK,SAAS2C,GAAG,aAAaI,KAAK,aAAaN,UAAWC,IAAO+P,WACvE3B,MAAOhN,GAAY4O,SAAU,SAAArJ,GAAC,OAAI0F,GAAc1F,EAAEsJ,cAAc7B,YAGtE,2BAAOuB,QAAQ,kBAAkB5P,UAAWC,IAAO4P,OACjD,0BAAM7P,UAAWC,IAAO6P,YAAa,oBACrC,2BAAOvS,KAAK,OAAOqT,OAAO,UAAU1Q,GAAG,kBAAkBI,KAAK,kBAAkBN,UAAWC,IAAO+P,WAAYC,SAAU,SAAArJ,GACnHA,EAAEiK,OAAOC,OAASlK,EAAEiK,OAAOC,MAAM,GAClCvE,GAAmBwE,OAAOC,IAAIC,gBAAgBrK,EAAEiK,OAAOC,MAAM,KAE7DvE,GAAmB,QAIzB,2BAAOqD,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,cACrC,2BAAOvS,KAAK,OAAOqT,OAAO,UAAU1Q,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WAAYC,SAAU,SAAArJ,GAC3GA,EAAEiK,OAAOC,OAASlK,EAAEiK,OAAOC,MAAM,GAClCtE,GAAeuE,OAAOC,IAAIC,gBAAgBrK,EAAEiK,OAAOC,MAAM,KAEzDtE,GAAe,QAIrB,2BAAOoD,QAAQ,cAAc5P,UAAWC,IAAO4P,OAC7C,0BAAM7P,UAAWC,IAAO6P,YAAa,aACrC,2BAAOvS,KAAK,OAAOqT,OAAO,UAAU1Q,GAAG,cAAcI,KAAK,cAAcN,UAAWC,IAAO+P,WAAYC,SAAU,SAAArJ,GAC3GA,EAAEiK,OAAOC,OAASlK,EAAEiK,OAAOC,MAAM,GAClCrE,GAAesE,OAAOC,IAAIC,gBAAgBrK,EAAEiK,OAAOC,MAAM,KAEzDrE,GAAe,QAIN,WAAdpF,GACC,2BAAOuI,QAAQ,YAAY5P,UAAWC,IAAO4P,OAC3C,0BAAM7P,UAAWC,IAAO6P,YAAa,cACrC,2BAAOvS,KAAK,OAAOqT,OAAO,UAAU1Q,GAAG,YAAYI,KAAK,YAAYN,UAAWC,IAAO+P,WAAYC,SAAU,SAAArJ,GACvGA,EAAEiK,OAAOC,OAASlK,EAAEiK,OAAOC,MAAM,GAClCpE,GAAaqE,OAAOC,IAAIC,gBAAgBrK,EAAEiK,OAAOC,MAAM,KAEvDpE,GAAa,QAKrB,4BAAQ1M,UAAWC,IAAOqJ,OAAQG,QA5hBnB,WACnB,IAAM1J,EAAO0C,SAAS6O,eAAe,QAClCvR,GACDwR,IAAYC,MAAMzR,GACf+O,MAAK,SAAC2C,GACLC,IAASD,EAAD,UAAanR,IAAQ,OAArB,YAETqP,MAAMlR,QAAQZ,SAqhBf,qBACA,4BAAQmC,UAAWC,IAAOqJ,OAAQG,QAlhBrB,WACjBkF,UAAUC,UAAU+C,UAAU3C,KAAK4C,UAAUlD,SAihBzC,wBAEF,kBAAC,EAAD,CAAa3O,KAAM2O,W,iBCzsBVmD,EAhBO,WACpB,OACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,yBAAK9R,UAAWC,IAAOoJ,SACrB,4BAAQrJ,UAAWC,IAAO8R,QACxB,yBAAK/R,UAAWC,IAAO+R,gBAEzB,yBAAKhS,UAAWC,IAAOgS,SACrB,kBAACC,EAAD,OAEF,4BAAQlS,UAAWC,IAAOkS,YCJdC,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASlK,MACvB,2DCZNmK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhQ,SAAS6O,eAAe,SDiIpB,kBAAmB3C,WACrBA,UAAU+D,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEdlD,OAAM,SAAA9R,GACLY,QAAQZ,MAAMA,EAAMiV,c","file":"static/js/main.d1208f1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"input\":\"CardCreator_input__2bKy_\",\"horizontal\":\"CardCreator_horizontal__2ORLy\",\"inputField\":\"CardCreator_inputField__1c5d_\",\"inputLabel\":\"CardCreator_inputLabel__32xWl\",\"inputTextarea\":\"CardCreator_inputTextarea__3iCYP\",\"button\":\"CardCreator_button__2OfjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__2_WHG\",\"type\":\"EnergyPicker_type__2ib5D\",\"image\":\"EnergyPicker_image__21nPN\",\"button\":\"EnergyPicker_button__wxjLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"28.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"image\":\"CardDisplay_image__1Vf1q\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","export const getCardOptions = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_RELATIVE_PREFIX || ''}/data/cardOptions.json`);\n    return response.json();\n  } catch(e) {\n    console.error(e);\n  }\n}\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\nimport { Card } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText, relativePathPrefix } from './index';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst TrainerCard: React.FC<Props> = ({ imagePath, card }) => {\n  return (\n    <div className={styles.card} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={styles.name}>{formatText(card.name)}</span>\n      {card.type?.hasSubname && <span className={styles.subname}>{formatText(card.subname)}</span>}\n      <div className={styles.descriptionWrapper}>\n        <p className={styles.description}>{formatText(card.description)}</p>\n      </div>\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n      {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`)}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default TrainerCard;\n","import React from 'react';\nimport { Card } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText, relativePathPrefix } from './index';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst EnergyCard: React.FC<Props> = ({ imagePath, card }) => {\n  return (\n    <div className={styles.card} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      {card.type?.shortName === 'Special' && <>\n        <span className={styles.name}>{formatText(card.name)}</span>\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n        {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n        {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n        <span className={styles.setNumber}>\n          {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n          {card.rarityIcon &&\n            <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText ? '_white' : ''}.png`)}\n              alt={card.rarityIcon.name} className={styles.rarityIcon} />\n          }\n        </span>\n      </>}\n      {card.typeImage && <img src={card.typeImage}\n        className={`${styles.typeImage} ${card.type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />}\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default EnergyCard;\n","import React, { useEffect } from 'react';\nimport { Card, Move } from 'interfaces';\nimport styles from './CardDisplay.module.scss';\nimport { formatText, relativePathPrefix } from './index';\n\ninterface Props {\n  imagePath?: string,\n  card: Card,\n}\n\nconst PokemonCard: React.FC<Props> = ({ imagePath, card }) => {\n  useEffect(() => {\n    if(card.moves) {\n      let highestCost = 0;\n      card.moves.forEach((move) => {\n        let totalAmount: number = 0;\n        move.energyCost.forEach((energyCost) => totalAmount += energyCost.amount);\n        if(totalAmount > highestCost) {\n          highestCost = totalAmount;\n        }\n      });\n\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\n      moveNames.forEach((moveName) => {\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\n      });\n    }\n  }, [card.moves]);\n\n  const formatMoveCost = (move: Move) => {\n    let totalAmount: number = 0;\n    const moveImages = move.energyCost.map((moveType) => {\n      const returnValue: JSX.Element[] = [];\n      for(let i = 0; i < moveType.amount; i++) {\n        totalAmount++;\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\n      }\n      return returnValue;\n    });\n\n    if(totalAmount === 0) {\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\n    } else {\n      return moveImages;\n    }\n  }\n\n  return (\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\n      <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline ? styles.nameOutline : ''}`}>\n        {formatText(card.name)}\n        {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\n        {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\n      </span>\n      <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\n        <span className={styles.hitpointsHP}>HP</span>\n        <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\n      </div>\n      {(card.subtype?.hasPrevolve && card.prevolveName) &&\n        <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\n      }\n      {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\n        <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\n      }\n      <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\n        {card.ability &&\n          <div className={styles.ability}>\n            <div className={styles.abilityNameWrapper}>\n              {card.subtype?.hasVStyle ?\n                <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\n                :\n                <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\n              }\n              <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\n            </div>\n            <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\n          </div>\n        }\n        {card.moves && (card.moves.map((move, i) =>\n          <div key={i}\n            className={`${i === 0 ? card.moves && card.moves.length > 1 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\n            {move.name &&\n              <div className={styles.moveNameWrapper}>\n                <div className={styles.moveCost}>\n                  {formatMoveCost(move)}\n                </div>\n                <span className={`${styles.moveName} moveName`}>{move.name}</span>\n                <span className={styles.moveDamage}>{move.damage}</span>\n              </div>\n            }\n            <p className={styles.moveText}>{formatText(move.text)}</p>\n          </div>\n        ))}\n      </div>\n      <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\n        {card.weaknessType &&\n          <span className={styles.weakness}>\n            <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\n            <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\n          </span>\n        }\n        {card.resistanceType &&\n          <span className={styles.resistance}>\n            <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\n            <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\n          </span>\n        }\n        <div className={styles.retreatCost}>\n          {Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\n            i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\n          )}\n        </div>\n      </div>\n      {card.subtype?.hasDescription &&\n        <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\n          <p className={styles.description}>{formatText(card.description)}</p>\n        </div>\n      }\n      {card.illustrator && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\n      {card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />}\n      {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\n      <span className={styles.setNumber}>\n        {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\n        {card.rarityIcon &&\n          <img src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${card.type?.hasWhiteText || card.subtype?.hasVStyle? '_white' : ''}.png`)}\n            alt={card.rarityIcon.name} className={styles.rarityIcon} />\n        }\n      </span>\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\n      {(card.subtype?.hasPrevolve && card.prevolveImage) &&\n        <div className={styles.prevolveImageWrapper}>\n          <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\n        </div>\n      }\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\n    </div>\n  )\n}\n\nexport default PokemonCard;\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'interfaces';\nimport TrainerCard from './Trainer';\nimport styles from './CardDisplay.module.scss';\nimport EnergyCard from './Energy';\nimport PokemonCard from './Pokemon';\n\ninterface ImagePathOptions {\n  baseSet: string,\n  type: string,\n  subtype?: string,\n  variation?: string,\n  rarity?: string,\n  supertype?: string,\n}\n\ninterface Props {\n  card: Card,\n}\n\n\nconst CardDisplay: React.FC<Props> = ({ card }) => {\n  const [imagePath, setImagePath] = useState<string>();\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\n\n  useEffect(() => {\n    const getImage = (options: ImagePathOptions, folder: string | undefined = undefined): string => {\n      // Format the options according to the formatting defined in the README\n      let filePath: string = relativePathPrefix(`/assets/${supertype}/`);\n      if(folder) {\n        filePath += `${folder}/`;\n      }\n      Object.values(options).forEach((param: string, i: number) => {\n        if(param !== undefined && param !== 'default') {\n          if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\n            (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\n            (options.rarity === 'Promo' && param === 'Basic')) {\n            return;\n          }\n          if(i !== 0) {\n            filePath += '_';\n          }\n          filePath += param;\n          if(param === 'Rainbow') {\n            if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\n              filePath += `_${options.variation}`;\n            }\n          }\n          if(param === 'V' && !options.rarity) {\n            filePath += '_Basic';\n          }\n        }\n      });\n      return `${filePath}.png`;\n    }\n\n    if(supertype && type && baseSet) {\n      let imagePath: string;\n      switch(supertype) {\n        case 'Pokemon':\n          imagePath = getImage({ baseSet: baseSet.shortName, subtype: subtype?.shortName, variation: variation?.shortName,\n            rarity: rarity?.shortName, type: type.shortName }, type.shortName);\n          break;\n        case 'Energy':\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName });\n          break;\n        case 'Trainer':\n          imagePath = getImage({ baseSet: baseSet.shortName, supertype, type: type.shortName, subtype: subtype?.shortName });\n          break;\n        default:\n          return;\n      }\n      setImagePath(imagePath);\n    }\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\n\n  if(supertype === 'Trainer') {\n    return <TrainerCard imagePath={imagePath} card={card} />\n  } else if(supertype === 'Energy') {\n    return <EnergyCard imagePath={imagePath} card={card} />\n  } else {\n    return <PokemonCard imagePath={imagePath} card={card} />\n  }\n}\n\nexport default CardDisplay;\n\nexport const formatText = (text: string | undefined) => {\n  if(text) {\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\n    if(chars) {\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\n      const textNoChars = text.split(/\\[.*?\\]/g);\n      const returnText: (JSX.Element | string)[] = [];\n      textNoChars.forEach((textElm, i) => {\n        returnText.push(textElm);\n        if(charsArr.length > i) {\n          if(charsArr[i].length > 1) {\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\n          } else {\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\n          }\n        }\n      });\n      return returnText;\n    } else {\n      return text;\n    }\n  } else {\n    return false;\n  }\n}\n\nexport const relativePathPrefix = (path: string): string  => `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\n","import React, { useState, useEffect } from 'react';\nimport styles from './EnergyPicker.module.scss';\nimport { MoveType, Type } from 'interfaces';\n\ninterface Props {\n  label: String,\n  types: Type[],\n  moveCost: MoveType[],\n  setMoveCost: (moveTypes: MoveType[]) => void,\n}\n\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    const newMoveTypes: MoveType[] = [];\n    types.forEach((type) => {\n      if(type.supertype === 'Pokemon') {\n        newMoveTypes.push({\n          type,\n          amount: 0,\n        });\n      }\n    });\n    setMoveTypes(newMoveTypes);\n  }, [types]);\n\n  return (\n    <div>\n      <span>{label}</span>\n      <div className={styles.wrapper}>\n        {moveTypes.map((moveType, i) =>\n          <div className={styles.type} key={i}>\n            <span className={styles.button} role='img' aria-label='arrow up' onClick={() => {\n              let newMoveCost: MoveType[] = [...moveCost];\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\n              if(type) {\n                type.amount = type.amount + 1;\n              } else {\n                type = {\n                  type: moveType.type,\n                  amount: 1,\n                }\n                newMoveCost.push(type);\n              }\n              setMoveCost(newMoveCost);\n            }}>🔺</span>\n            <img src={`${process.env.REACT_APP_RELATIVE_PREFIX || ''}/assets/icons_symbols/types/${moveType.type.shortName}_border.png`} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\n            <span className={styles.button} role='img' aria-label='arrow down' onClick={() => {\n              let newMoveCost: MoveType[] = [...moveCost];\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\n              if(type) {\n                type.amount = type.amount - 1;\n                if(type.amount <= 0) {\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\n                }\n                setMoveCost(newMoveCost);\n              }\n            }}>🔻</span>\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default EnergyPicker;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { CardOptionsState } from 'reducers/cardOptions';\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card } from 'interfaces';\nimport { bindActionCreators } from 'redux';\nimport { requestCardOptions } from 'actions';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport styles from './CardCreator.module.scss';\nimport CardDisplay from 'components/CardDisplay';\nimport EnergyPicker from './components/EnergyPicker';\n\ninterface Props {\n  cardOptionsState: CardOptionsState,\n  requestCardOptions: () => Object,\n}\n\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, requestCardOptions }) => {\n  const importingCard = useRef<boolean>(false);\n  // Selectors\n  const [supertype, setSupertype] = useState<string>('Pokemon');\n  const [type, setType] = useState<Type>();\n  const [baseSet, setBaseSet] = useState<BaseSet>();\n  const [set, setSet] = useState<Set>();\n  const [rotation, setRotation] = useState<Rotation>();\n  const [variation, setVariation] = useState<Variation>();\n  const [subtype, setSubtype] = useState<Subtype>();\n  const [rarity, setRarity] = useState<Rarity>();\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\n  const [weaknessType, setWeaknessType] = useState<Type>();\n  const [resistanceType, setResistanceType] = useState<Type>();\n  // Selector refs\n  const baseSetRef = useRef<HTMLSelectElement>(null);\n  const supertypeRef = useRef<HTMLSelectElement>(null);\n  const typeRef = useRef<HTMLSelectElement>(null);\n  const subtypeRef = useRef<HTMLSelectElement>(null);\n  const variationRef = useRef<HTMLSelectElement>(null);\n  const rarityRef = useRef<HTMLSelectElement>(null);\n  const setIconRef = useRef<HTMLSelectElement>(null);\n  const rotationRef = useRef<HTMLSelectElement>(null);\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\n  // Inputs\n  const [name, setName] = useState<string>('');\n  const [prevolveName, setPrevolveName] = useState<string>('');\n  const [hitpoints, setHitpoints] = useState<number>(100);\n  const [subname, setSubname] = useState<string>('');\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\n  const [retreatCost, setRetreatCost] = useState<number>(1);\n  const [description, setDescription] = useState<string>('');\n  const [illustrator, setIllustrator] = useState<string>('');\n  const [cardNumber, setCardNumber] = useState<string>('');\n  const [totalInSet, setTotalInSet] = useState<string>('');\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\n  const [imageLayer1, setImageLayer1] = useState<string>('');\n  const [imageLayer2, setImageLayer2] = useState<string>('');\n  const [typeImage, setTypeImage] = useState<string>('');\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\n  // Ability/Moves\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\n  const [abilityName, setAbilityName] = useState<string>('');\n  const [abilityText, setAbilityText] = useState<string>('');\n  const [move1Name, setMove1Name] = useState<string>('');\n  const [move1Damage, setMove1Damage] = useState<string>('');\n  const [move1Text, setMove1Text] = useState<string>('');\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\n  const [move2Name, setMove2Name] = useState<string>('');\n  const [move2Text, setMove2Text] = useState<string>('');\n  const [move2Damage, setMove2Damage] = useState<string>('');\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\n\n  useEffect(() => {\n    requestCardOptions();\n  }, [requestCardOptions]);\n\n  useEffect(() => {\n    setType(cardOptionsState.cardOptions.types[0]);\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\n    setSet(cardOptionsState.cardOptions.sets[0]);\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\n  }, [cardOptionsState]);\n\n  /**\n   * Changes the types/subtypes etc to the first available one within their parent\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\n   */\n  useEffect(() => {\n    if(importingCard.current) {\n      return;\n    }\n    if(typeRef.current) {\n      const { selectedIndex, options } = typeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newType = cardOptionsState.cardOptions.types.find((a: Type) => a.id === +value);\n      if(newType && newType !== type) {\n        setType(newType);\n      }\n    } else {\n      setType(undefined);\n    }\n    if(subtypeRef.current) {\n      const { selectedIndex, options } = subtypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSubtype = cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +value);\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\n        setSubtype(newSubtype);\n      }\n    } else {\n      setSubtype(undefined);\n    }\n    if(variationRef.current) {\n      const { selectedIndex, options } = variationRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newVariation = cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +value);\n      if(newVariation && newVariation !== variation) {\n        setVariation(newVariation);\n      }\n    } else {\n      setVariation(undefined);\n    }\n    if(rarityRef.current) {\n      const { selectedIndex, options } = rarityRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newRarity = cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +value);\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\n        setRarity(newRarity);\n      }\n    } else {\n      setRarity(undefined);\n    }\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\n\n  /**\n   * Turns state data into a Card object\n   */\n  const makeCard = (): Card => ({\n    baseSet,\n    supertype,\n    type,\n    set,\n    variation,\n    subtype,\n    rarity,\n    name,\n    prevolveName,\n    prevolveImage,\n    hitpoints,\n    subname,\n    typeImage,\n    pokedexEntry,\n    ability: hasAbility ? {\n      name: abilityName,\n      text: abilityText,\n    } : undefined,\n    moves: [\n      {\n        name: move1Name,\n        text: move1Text,\n        damage: move1Damage,\n        energyCost: move1Cost,\n      },\n      ...(!hasAbility && hasSecondMove ? [{\n        name: move2Name,\n        text: move2Text,\n        damage: move2Damage,\n        energyCost: move2Cost,\n      }] : []),\n    ],\n    weaknessType,\n    weaknessAmount,\n    resistanceType,\n    resistanceAmount,\n    retreatCost,\n    illustrator,\n    cardNumber,\n    totalInSet,\n    rotation,\n    rarityIcon,\n    description,\n    backgroundImage,\n    imageLayer1,\n    imageLayer2,\n  });\n\n  const downloadCard = () => {\n    const card = document.getElementById('card');\n    if(card) {\n      htmlToImage.toPng(card)\n        .then((dataUrl) => {\n          download(dataUrl, `${name || 'card'}.png`);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const exportCard = () => {\n    navigator.clipboard.writeText(JSON.stringify(makeCard()));\n  }\n\n  /**\n   * Sets all card data, selectors and energy pickers to certain values based on stringified json\n   */\n  const importCard = () => {\n    navigator.clipboard.readText()\n      .then((value: string) => {\n        const cardObj = JSON.parse(value);\n        importingCard.current = true;\n        // Base values\n        setName(cardObj.name);\n        setPrevolveName(cardObj.prevolveName);\n        setPrevolveImage(cardObj.prevolveImage);\n        setHitpoints(cardObj.hitpoints);\n        setSubname(cardObj.subname);\n        setTypeImage(cardObj.typeImage);\n        setPokedexEntry(cardObj.pokedexEntry);\n        setWeaknessAmount(cardObj.weaknessAmount);\n        setResistanceAmount(cardObj.resistanceAmount);\n        setRetreatCost(cardObj.retreatCost);\n        setIllustrator(cardObj.illustrator);\n        setCardNumber(cardObj.cardNumber);\n        setTotalInSet(cardObj.totalInSet);\n        setDescription(cardObj.description);\n        setBackgroundImage(cardObj.backgroundImage);\n        setImageLayer1(cardObj.imageLayer1);\n        setImageLayer2(cardObj.imageLayer2);\n        if(cardObj.ability) {\n          setHasAbility(true);\n          setAbilityName(cardObj.ability.name);\n          setAbilityText(cardObj.ability.text);\n        }\n        setMove1Name(cardObj.moves[0].name);\n        setMove1Damage(cardObj.moves[0].damage);\n        setMove1Text(cardObj.moves[0].text);\n        setMove1Cost(cardObj.moves[0].energyCost);\n        if(cardObj.moves[1]) {\n          setHasSecondMove(true);\n          setMove2Name(cardObj.moves[1].name);\n          setMove2Damage(cardObj.moves[1].damage);\n          setMove2Text(cardObj.moves[1].text);\n          setMove2Cost(cardObj.moves[1].energyCost);\n        }\n        // Selectors\n        const newBaseSet: BaseSet | undefined = cardOptionsState.cardOptions.baseSets.find((a) => a.id === cardObj.baseSet.id);\n        if(newBaseSet) {\n          setBaseSet(newBaseSet);\n          if(baseSetRef.current && newBaseSet) {\n            baseSetRef.current.selectedIndex = cardOptionsState.cardOptions.baseSets.indexOf(newBaseSet);\n          }\n        } else {\n          if(baseSetRef.current) {\n            baseSetRef.current.selectedIndex = 0;\n          }\n          setBaseSet(undefined);\n        }\n        const newSupertype = cardObj.supertype;\n        if(newSupertype) {\n          setSupertype(newSupertype);\n          if(supertypeRef.current) {\n            supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => t.value === newSupertype);\n          }\n        } else {\n          if(supertypeRef.current) {\n            supertypeRef.current.selectedIndex = 0;\n          }\n          setSupertype('Pokemon');\n        }\n        const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.type.id);\n        if(newType) {\n          setType(newType);\n          if(typeRef.current) {\n            typeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newType);\n          }\n        } else {\n          if(typeRef.current) {\n            typeRef.current.selectedIndex = 0;\n          }\n          setType(undefined);\n        }\n        if(cardObj.subtype) {\n          const newSubtype: Subtype | undefined = cardOptionsState.cardOptions.subtypes.find((a) => a.id === cardObj.subtype.id);\n          if(newSubtype) {\n            setSubtype(newSubtype);\n            if(subtypeRef.current) {\n              subtypeRef.current.selectedIndex = cardOptionsState.cardOptions.subtypes.indexOf(newSubtype);\n            }\n          }\n        } else {\n          if(subtypeRef.current) {\n            subtypeRef.current.selectedIndex = 0;\n          }\n          setSubtype(undefined);\n        }\n        if(cardObj.set) {\n          const newSet: Set | undefined = cardOptionsState.cardOptions.sets.find((a) => a.id === cardObj.set.id);\n          if(newSet) {\n            setSet(newSet);\n            if(setIconRef.current) {\n              setIconRef.current.selectedIndex = cardOptionsState.cardOptions.sets.indexOf(newSet);\n            }\n          }\n        } else {\n          if(setIconRef.current) {\n            setIconRef.current.selectedIndex = 0;\n          }\n          setSubtype(undefined);\n        }\n        if(cardObj.weaknessType) {\n          const newWeaknessType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.weaknessType.id);\n          if(newWeaknessType) {\n            setWeaknessType(newWeaknessType);\n            if(weaknessTypeRef.current) {\n              weaknessTypeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newWeaknessType);\n            }\n          }\n        } else {\n          if(weaknessTypeRef.current) {\n            weaknessTypeRef.current.selectedIndex = 0;\n          }\n          setWeaknessType(undefined);\n        }\n        if(cardObj.resistanceType) {\n          const newResistanceType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.resistanceType.id);\n          if(newResistanceType) {\n            setResistanceType(newResistanceType);\n            if(resistanceTypeRef.current) {\n              resistanceTypeRef.current.selectedIndex = cardOptionsState.cardOptions.types.indexOf(newResistanceType);\n            }\n          }\n        } else {\n          if(resistanceTypeRef.current) {\n            resistanceTypeRef.current.selectedIndex = 0;\n          }\n          setResistanceType(undefined);\n        }\n        if(cardObj.rotation) {\n          const newRotation: Rotation | undefined = cardOptionsState.cardOptions.rotations.find((a) => a.id === cardObj.rotation.id);\n          if(newRotation) {\n            setRotation(newRotation);\n            if(rotationRef.current) {\n              rotationRef.current.selectedIndex = cardOptionsState.cardOptions.rotations.indexOf(newRotation);\n            }\n          }\n        } else {\n          if(rotationRef.current) {\n            rotationRef.current.selectedIndex = 0;\n          }\n          setRotation(undefined);\n        }\n        if(cardObj.variation) {\n          const newVariation: Variation | undefined = cardOptionsState.cardOptions.variations.find((a) => a.id === cardObj.variation.id);\n          if(newVariation) {\n            setVariation(newVariation);\n            if(variationRef.current) {\n              variationRef.current.selectedIndex = cardOptionsState.cardOptions.variations.indexOf(newVariation);\n            }\n          }\n        } else {\n          if(variationRef.current) {\n            variationRef.current.selectedIndex = 0;\n          }\n          setVariation(undefined);\n        }\n        if(cardObj.rarity) {\n          const newRarity: Rarity | undefined = cardOptionsState.cardOptions.rarities.find((a) => a.id === cardObj.rarity.id);\n          if(newRarity) {\n            setRarity(newRarity);\n            if(rarityRef.current) {\n              rarityRef.current.selectedIndex = cardOptionsState.cardOptions.rarities.indexOf(newRarity);\n            }\n          }\n        } else {\n          if(rarityRef.current) {\n            rarityRef.current.selectedIndex = 0;\n          }\n          setRarity(undefined);\n        }\n        if(cardObj.rarityIcon) {\n          const newRarityIcon: RarityIcon | undefined = cardOptionsState.cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIcon.id);\n          if(newRarityIcon) {\n            setRarityIcon(newRarityIcon);\n            if(rarityIconRef.current) {\n              rarityIconRef.current.selectedIndex = cardOptionsState.cardOptions.rarityIcons.indexOf(newRarityIcon);\n            }\n          }\n        } else {\n          if(rarityIconRef.current) {\n            rarityIconRef.current.selectedIndex = 0;\n          }\n          setRarityIcon(undefined);\n        }\n        importingCard.current = false;\n      })\n      .catch(console.error);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div>\n        <button className={styles.button} onClick={importCard}>Import from clipboard</button>\n        <label htmlFor='baseSet' className={styles.input}>\n          <span className={styles.inputLabel}>{'Base Set'}</span>\n          <select id='baseSet' ref={baseSetRef} name='baseSet' className={styles.inputField}\n            onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\n              <option value={value.id} key={i}>{value.name}</option>\n            )}\n          </select>\n        </label>\n        <label htmlFor='supertype' className={styles.input}>\n          <span className={styles.inputLabel}>{'Supertype'}</span>\n          <select id='supertype' ref={supertypeRef} name='supertype' className={styles.inputField} onChange={e => setSupertype(e.currentTarget.value)}>\n            <option value={'Pokemon'}>{'Pokémon'}</option>\n            <option value={'Trainer'}>{'Trainer'}</option>\n            <option value={'Energy'}>{'Energy'}</option>\n          </select>\n        </label>\n        <label htmlFor='type' className={styles.input}>\n          <span className={styles.inputLabel}>{'Type'}</span>\n          <select ref={typeRef} id='type' name='type' className={styles.inputField}\n            onChange={e => setType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n              if(supertype !== value.supertype) {\n                return false;\n              } else {\n                return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n              }\n            })}\n          </select>\n        </label>\n        {type?.hasSubtypes && supertype !== 'Energy' &&\n          <label htmlFor='subtype' className={styles.input}>\n            <span className={styles.inputLabel}>{'Subtype'}</span>\n            <select ref={subtypeRef} id='subtype' name='subtype' className={styles.inputField}\n              onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\n              {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\n                if(!value.types.includes(type?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </select>\n          </label>\n        }\n        {subtype?.hasVariations && supertype !== 'Energy' && supertype !== 'Trainer' &&\n          <label htmlFor='variation' className={styles.input}>\n            <span className={styles.inputLabel}>{'Variation'}</span>\n            <select ref={variationRef} id='variation' name='variation' className={styles.inputField}\n              onChange={e => setVariation(cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\n                if(!value.subtypes.includes(subtype?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </select>\n          </label>\n        }\n        {supertype !== 'Energy' && supertype !== 'Trainer' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0]) &&\n          <label htmlFor='rarity' className={styles.input}>\n            <span className={styles.inputLabel}>{'Rarity'}</span>\n            <select ref={rarityRef} id='rarity' name='rarity' className={styles.inputField}\n              onChange={e => setRarity(cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\n              <option value={'default'}>{'Default'}</option>\n              {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\n                  || (includesSubtype && (includesVariation || !variation))\n                  || includesVariation) {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                } else {\n                  return false;\n                }\n              })}\n            </select>\n          </label>\n        }\n        {!(supertype === 'Energy' && type?.shortName !== 'Special') && <>\n          <label htmlFor='set' className={styles.input}>\n            <span className={styles.inputLabel}>{'Set Icon'}</span>\n            <select ref={setIconRef} id='set' name='set' className={styles.inputField}\n              onChange={e => setSet(cardOptionsState.cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='rotation' className={styles.input}>\n            <span className={styles.inputLabel}>{'Rotation'}</span>\n            <select ref={rotationRef} id='rotation' name='rotation' className={styles.inputField}\n              onChange={e => setRotation(cardOptionsState.cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='rarityIcon' className={styles.input}>\n            <span className={styles.inputLabel}>{'Rarity Icon'}</span>\n            <select ref={rarityIconRef} id='rarityIcon' name='rarityIcon' className={styles.inputField}\n              onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\n              <option value={'none'}>{'None'}</option>\n              {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </select>\n          </label>\n          <label htmlFor='name' className={styles.input}>\n            <span className={styles.inputLabel}>{'Name'}</span>\n            <input type='text' id='name' name='name' className={styles.inputField}\n              value={name} onChange={e => setName(e.currentTarget.value)} />\n          </label>\n          {supertype === 'Pokemon' &&\n            <label htmlFor='hitpoints' className={styles.input}>\n              <span className={styles.inputLabel}>{'Hitpoints'}</span>\n              <input type='number' max='999' min='0' id='hitpoints' name='hitpoints' className={styles.inputField}\n                value={hitpoints} onChange={e => setHitpoints(+e.currentTarget.value)} />\n            </label>\n          }\n          {subtype?.hasPrevolve && <>\n            <label htmlFor='prevolveName' className={styles.input}>\n              <span className={styles.inputLabel}>{'Prevolve Name'}</span>\n              <input type='text' id='prevolveName' name='prevolveName' className={styles.inputField}\n                value={prevolveName} onChange={e => setPrevolveName(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='prevolveImage' className={styles.input}>\n              <span className={styles.inputLabel}>{'Prevolve Image'}</span>\n              <input type='file' accept='image/*' id='prevolveImage' name='prevolveImage' className={styles.inputField} onChange={e => {\n                if(e.target.files && e.target.files[0]) {\n                  setPrevolveImage(window.URL.createObjectURL(e.target.files[0]));\n                } else {\n                  setPrevolveImage('');\n                }\n              }} />\n          </label>\n          </>}\n          {subtype?.hasPokedexEntry &&\n            <label htmlFor='pokedexEntry' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Pokédex Entry'}</span>\n              <input type='text' id='pokedexEntry' name='pokedexEntry' className={styles.inputField}\n                value={pokedexEntry} onChange={e => setPokedexEntry(e.currentTarget.value)} />\n            </label>\n          }\n          {type?.hasSubname &&\n            <label htmlFor='subname' className={styles.input}>\n              <span className={styles.inputLabel}>{'Subname'}</span>\n              <input type='text' id='subname' name='subname' className={styles.inputField}\n                value={subname} onChange={e => setSubname(e.currentTarget.value)} />\n            </label>\n          }\n          {supertype === 'Pokemon' && <>\n            <label htmlFor='hasAbility' className={styles.input}>\n              <span className={styles.inputLabel}>{'Has Ability'}</span>\n              <input type='checkbox' id='hasAbility' name='hasAbility' className={styles.inputCheckbox}\n                checked={hasAbility} onChange={e => setHasAbility(e.currentTarget.checked)} />\n            </label>\n            {hasAbility && <>\n              <label htmlFor='abilityName' className={styles.input}>\n                <span className={styles.inputLabel}>{'Ability Name'}</span>\n                <input type='text' id='abilityName' name='abilityName' className={styles.inputField}\n                  value={abilityName} onChange={e => setAbilityName(e.currentTarget.value)} />\n              </label>\n              <label htmlFor='abilityText' className={`${styles.input} ${styles.horizontal}`}>\n                <span className={styles.inputLabel}>{'Ability Text'}</span>\n                <textarea id='abilityText' name='abilityText' className={`${styles.inputField} ${styles.inputTextarea}`}\n                  value={abilityText} onChange={e => setAbilityText(e.currentTarget.value)}></textarea>\n              </label>\n            </>}\n            <label htmlFor='move1Name' className={styles.input}>\n              <span className={styles.inputLabel}>{'Move Name'}</span>\n              <input type='text' id='move1Name' name='move1Name' className={styles.inputField}\n                value={move1Name} onChange={e => setMove1Name(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='move1Damage' className={styles.input}>\n              <span className={styles.inputLabel}>{'Move Damage'}</span>\n              <input type='text' id='move1Damage' name='move1Damage' className={styles.inputField}\n                value={move1Damage} onChange={e => setMove1Damage(e.currentTarget.value)} />\n            </label>\n            <label htmlFor='move1Text' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Move Text'}</span>\n              <textarea id='move1Text' name='move1Text' className={`${styles.inputField} ${styles.inputTextarea}`}\n                value={move1Text} onChange={e => setMove1Text(e.currentTarget.value)}></textarea>\n            </label>\n            <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\n            {!hasAbility && <>\n              <label htmlFor='hasSecondMove' className={styles.input}>\n                <span className={styles.inputLabel}>{'Has Second Move'}</span>\n                <input type='checkbox' id='hasSecondMove' name='hasSecondMove' className={styles.inputCheckbox}\n                  checked={hasSecondMove} onChange={e => setHasSecondMove(e.currentTarget.checked)} />\n              </label>\n              {hasSecondMove && <>\n                <label htmlFor='move2Name' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Move Name'}</span>\n                  <input type='text' id='move2Name' name='move2Name' className={styles.inputField}\n                    value={move2Name} onChange={e => setMove2Name(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='move2Damage' className={styles.input}>\n                  <span className={styles.inputLabel}>{'Move Damage'}</span>\n                  <input type='text' id='move2Damage' name='move2Damage' className={styles.inputField}\n                    value={move2Damage} onChange={e => setMove2Damage(e.currentTarget.value)} />\n                </label>\n                <label htmlFor='move2Text' className={`${styles.input} ${styles.horizontal}`}>\n                  <span className={styles.inputLabel}>{'Move Text'}</span>\n                  <textarea id='move2Text' name='move2Text' className={`${styles.inputField} ${styles.inputTextarea}`}\n                    value={move2Text} onChange={e => setMove2Text(e.currentTarget.value)}></textarea>\n                </label>\n                <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\n              </>}\n            </>}\n            <label htmlFor='weaknessType' className={styles.input}>\n              <span className={styles.inputLabel}>{'Weakness Type'}</span>\n              <select ref={weaknessTypeRef} id='weaknessType' name='weaknessType' className={styles.inputField}\n                onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                    if(supertype !== value.supertype) {\n                      return false;\n                    } else {\n                      return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                    }\n                })}\n              </select>\n            </label>\n            <label htmlFor='weaknessAmount' className={styles.input}>\n              <span className={styles.inputLabel}>{'Weakness Amount'}</span>\n              <input type='number' max='99' min='0' id='weaknessAmount' name='weaknessAmount' className={styles.inputField}\n                value={weaknessAmount} onChange={e => setWeaknessAmount(+e.currentTarget.value)} />\n            </label>\n            <label htmlFor='resistanceType' className={styles.input}>\n              <span className={styles.inputLabel}>{'Resistance Type'}</span>\n              <select ref={resistanceTypeRef} id='resistanceType' name='resistanceType' className={styles.inputField}\n                onChange={e => setResistanceType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                <option value={'none'}>{'None'}</option>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                    if(supertype !== value.supertype) {\n                      return false;\n                    } else {\n                      return <option disabled={supertype !== value.supertype} value={value.id} key={i}>{value.name}</option>;\n                    }\n                })}\n              </select>\n            </label>\n            {resistanceType &&\n              <label htmlFor='resistanceAmount' className={styles.input}>\n                <span className={styles.inputLabel}>{'Weakness Amount'}</span>\n                <input type='number' max='99' min='0' id='resistanceAmount' name='resistanceAmount' className={styles.inputField}\n                  value={resistanceAmount} onChange={e => setResistanceAmount(+e.currentTarget.value)} />\n              </label>\n            }\n            <label htmlFor='retreatCost' className={styles.input}>\n              <span className={styles.inputLabel}>{'Retreat Cost'}</span>\n              <input type='number' max='5' min='0' id='retreatCost' name='retreatCost' className={styles.inputField}\n                value={retreatCost} onChange={e => setRetreatCost(+e.currentTarget.value)} />\n            </label>\n          </>}\n          {subtype?.hasDescription &&\n            <label htmlFor='description' className={`${styles.input} ${styles.horizontal}`}>\n              <span className={styles.inputLabel}>{'Description'}</span>\n              <textarea id='description' name='description' className={`${styles.inputField} ${styles.inputTextarea}`}\n                value={description} onChange={e => setDescription(e.currentTarget.value)}></textarea>\n            </label>\n          }\n          {supertype !== 'Energy' &&\n            <label htmlFor='illustrator' className={styles.input}>\n              <span className={styles.inputLabel}>{'Illustrator'}</span>\n              <input type='text' id='illustrator' name='illustrator' className={styles.inputField}\n                value={illustrator} onChange={e => setIllustrator(e.currentTarget.value)} />\n            </label>\n          }\n          <label htmlFor='cardNumber' className={styles.input}>\n            <span className={styles.inputLabel}>{'Card Number'}</span>\n            <input type='string' id='cardNumber' name='cardNumber' className={styles.inputField}\n              value={cardNumber} onChange={e => setCardNumber(e.currentTarget.value)} />\n          </label>\n          <label htmlFor='totalInSet' className={styles.input}>\n            <span className={styles.inputLabel}>{'Total In Set'}</span>\n            <input type='string' id='totalInSet' name='totalInSet' className={styles.inputField}\n              value={totalInSet} onChange={e => setTotalInSet(e.currentTarget.value)} />\n          </label>\n        </>}\n        <label htmlFor='backgroundImage' className={styles.input}>\n          <span className={styles.inputLabel}>{'Background Image'}</span>\n          <input type='file' accept='image/*' id='backgroundImage' name='backgroundImage' className={styles.inputField} onChange={e => {\n            if(e.target.files && e.target.files[0]) {\n              setBackgroundImage(window.URL.createObjectURL(e.target.files[0]));\n            } else {\n              setBackgroundImage('');\n            }\n          }} />\n        </label>\n        <label htmlFor='imageLayer1' className={styles.input}>\n          <span className={styles.inputLabel}>{'Card Image'}</span>\n          <input type='file' accept='image/*' id='imageLayer1' name='imageLayer1' className={styles.inputField} onChange={e => {\n            if(e.target.files && e.target.files[0]) {\n              setImageLayer1(window.URL.createObjectURL(e.target.files[0]));\n            } else {\n              setImageLayer1('');\n            }\n          }} />\n        </label>\n        <label htmlFor='imageLayer2' className={styles.input}>\n          <span className={styles.inputLabel}>{'Top Image'}</span>\n          <input type='file' accept='image/*' id='imageLayer2' name='imageLayer2' className={styles.inputField} onChange={e => {\n            if(e.target.files && e.target.files[0]) {\n              setImageLayer2(window.URL.createObjectURL(e.target.files[0]));\n            } else {\n              setImageLayer2('');\n            }\n          }} />\n        </label>\n        {supertype === 'Energy' &&\n          <label htmlFor='typeImage' className={styles.input}>\n            <span className={styles.inputLabel}>{'Type Image'}</span>\n            <input type='file' accept='image/*' id='typeImage' name='typeImage' className={styles.inputField} onChange={e => {\n              if(e.target.files && e.target.files[0]) {\n                setTypeImage(window.URL.createObjectURL(e.target.files[0]));\n              } else {\n                setTypeImage('');\n              }\n            }} />\n          </label>\n        }\n        <button className={styles.button} onClick={downloadCard}>Download as image</button>\n        <button className={styles.button} onClick={exportCard}>Export to clipboard</button>\n      </div>\n      <CardDisplay card={makeCard()} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport CardCreatorPage from 'pages/CardCreator';\nimport styles from './App.module.scss';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className={styles.wrapper}>\n        <header className={styles.header}>\n          <div className={styles.headerCircle} />\n        </header>\n        <div className={styles.content}>\n          <CardCreatorPage />\n        </div>\n        <footer className={styles.footer} />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}