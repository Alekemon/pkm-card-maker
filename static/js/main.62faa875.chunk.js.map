{"version":3,"sources":["components/CardDisplay/CardDisplay.module.scss","App.module.scss","components/FormElements/EnergyPicker/EnergyPicker.module.scss","actions.ts","reducers/cardOptions.ts","reducers/index.ts","services.ts","api.ts","sagas.ts","store.ts","components/CardDisplay/Trainer.tsx","components/CardDisplay/Energy.tsx","components/CardDisplay/Pokemon.tsx","components/CardDisplay/RaidBoss.tsx","components/CardDisplay/index.tsx","components/FormElements/InputLabel/index.tsx","components/FormElements/Checkbox/index.tsx","components/FormElements/EnergyPicker/index.tsx","components/FormElements/ImageInput/index.tsx","components/FormElements/Input/index.tsx","components/FormElements/Select/index.tsx","cropImage.ts","components/FormElements/Button/index.tsx","pages/CardCreator/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/FormElements/Form.module.scss","pages/CardCreator/CardCreator.module.scss"],"names":["module","exports","requestCardOptions","type","requestCardOptionsSuccess","cardOptions","payload","initialState","isLoading","error","supertypes","baseSets","rarities","sets","subtypes","types","variations","rotations","rarityIcons","combineReducers","state","action","console","errorMessage","relativePathPrefix","path","process","cardOptionsToImage","options","folder","supertype","filePath","Object","values","forEach","param","i","undefined","rarity","variation","getCardImage","imagePath","baseSet","subtype","getCardOptions","a","fetch","response","json","fetchCardOptions","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","TrainerCard","name","description","subname","className","styles","formatText","descriptionWrapper","hasSubname","EnergyCard","typeImage","hasSpecialStyle","descriptionWrapperEnergy","src","shortName","typeImageSpecial","alt","PokemonCard","card","getMoveTotalCost","move","energyCost","reduce","acc","currentValue","amount","useEffect","move1","move2","highestCost","Math","max","moveNames","document","querySelectorAll","initialLeft","moveNameLeft","substr","length","moveName","style","left","formatMove","firstMove","moveMultiple","hasVStyle","moveV","moveNameWrapper","moveCost","totalAmount","moveImages","map","moveType","returnValue","push","moveEnergy","key","formatMoveCost","moveDamage","damage","moveText","moveTextV","text","namePokemon","hasNameOutline","nameOutline","hasVSymbol","nameIcon","hasVMaxSymbol","hitpointsWrapper","hitpointsWrapperV","hitpointsHP","hitpoints","hasPrevolve","prevolveName","hasPokedexEntry","pokedexEntry","movesWrapper","movesWrapperV","ability","abilityNameWrapper","abilityIcon","abilityIconV","abilityText","typeBar","hasBlackTopText","hasWhiteTopText","whiteText","weaknessType","weakness","weaknessIcon","weaknessAmount","resistanceType","resistance","resistanceIcon","resistanceAmount","retreatCost","Array","from","e","retreatCostIcon","noDescription","descriptionWrapperPokemon","prevolveImage","prevolveImageWrapper","RaidBossCard","damageHasSymbol","test","raidBossMove","raidBossMoveName","raidBossMoveText","raidBossMoveDamage","raidBossMoveDamageShoved","nameRaidBoss","hitpointsWrapperRaidBoss","raidBossType","raidBossMovesWrapper","move3","cardNumber","raidBossNumber","CardDisplay","useState","setImagePath","set","newImage","hasWhiteText","id","backgroundImage","Trainer","Energy","Pokemon","RaidBoss","cardInfoWhite","illustrator","customSetIcon","setIcon","number","rotation","setNumber","totalInSet","rarityIcon","imageLayer1","image","imageLayer2","background","chars","match","charsArr","char","replace","textNoChars","split","returnText","textElm","italicText","ptcgText","InputLabel","horizontal","buttons","children","htmlFor","input","inputLabel","inputLabelButtonWrapper","button","icon","title","inputLabelButton","onClick","preventDefault","Checkbox","checked","setter","onChange","currentTarget","inputField","checkbox","checkboxFake","faCheck","checkboxIcon","EnergyPicker","label","setMoveCost","moveTypes","setMoveTypes","newMoveTypes","isEnergy","wrapper","newMoveCost","find","faCaretUp","splice","indexOf","faCaretDown","ImageInput","info","croppable","cropperSetter","setImage","inputRef","useRef","initialRender","acceptedTypes","current","log","faCropAlt","faTimes","value","ref","target","files","includes","window","URL","createObjectURL","file","accept","join","Input","min","inputTextarea","Select","selectRef","select","createImage","url","Promise","resolve","reject","Image","addEventListener","setAttribute","getCroppedImg","imageSrc","pixelCrop","canvas","createElement","ctx","getContext","maxSize","width","height","safeArea","sqrt","translate","drawImage","data","getImageData","putImageData","x","y","toBlob","Button","buttonIcon","connect","cardOptionsState","dispatch","bindActionCreators","importingCard","initialImported","importingTrigger","setImportingTrigger","setSupertype","setType","setBaseSet","setSet","setRotation","setVariation","setSubtype","setRarity","setRarityIcon","setWeaknessType","setResistanceType","raidLevel","setRaidLevel","baseSetRef","supertypeRef","typeRef","subtypeRef","variationRef","rarityRef","setIconRef","rotationRef","rarityIconRef","weaknessTypeRef","resistanceTypeRef","raidLevelRef","setName","setPrevolveName","setHitpoints","setSubname","setPokedexEntry","setWeaknessAmount","setResistanceAmount","setRetreatCost","setDescription","setIllustrator","setCardNumber","setTotalInSet","setBackgroundImage","setImageLayer1","setImageLayer2","setTypeImage","setPrevolveImage","hasCustomSetIcon","setHasCustomSetIcon","setCustomSetIcon","cropArea","setCropArea","cropZoom","setCropZoom","cropImage","setCropImage","croppedAreaPixels","setCroppedAreaPixels","currentCropSetter","setCurrentCropSetter","hasAbility","setHasAbility","abilityName","setAbilityName","setAbilityText","move1Name","setMove1Name","move1Damage","setMove1Damage","move1Text","setMove1Text","move1Cost","setMove1Cost","hasSecondMove","setHasSecondMove","move2Name","setMove2Name","move2Text","setMove2Text","move2Damage","setMove2Damage","move2Cost","setMove2Cost","move3Name","setMove3Name","move3Text","setMove3Text","move3Damage","setMove3Damage","selectedIndex","newSupertype","newType","newSubtype","newVariation","newRarity","makeCard","importCard","cardObj","result","typeId","newBaseSet","baseSetId","findIndex","t","supertypeId","subtypeId","setId","newSet","weaknessTypeId","newWeaknessType","resistanceTypeId","newResistanceType","rotationId","newRotation","variationId","rarityId","rarityIconId","newRarityIcon","resetCropper","imageSetter","form","seperator","faPaste","navigator","clipboard","readText","then","JSON","parse","catch","hasSubtypes","subtypeOptional","hasVariations","includesType","includesSubtype","includesVariation","newValue","round","cropperWrapper","crop","zoom","cropSize","maxZoom","minZoom","restrictPosition","zoomSpeed","aspect","onCropChange","location","onCropComplete","croppedArea","cap","onZoomChange","newZoom","cropperImage","faCheckSquare","buttonCrop","croppedImage","faFileDownload","buttonDownload","getElementById","htmlToImage","toPng","dataUrl","download","faClipboard","exportCard","cardToImportedCard","writeText","stringify","cardWrapper","App","store","header","headerCircle","content","exact","CardCreator","garbodor","pikachu","footer","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.62faa875.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveNameLeft\":\"29.5%\",\"ptcgText\":\"CardDisplay_ptcgText__1MAix\",\"italicText\":\"CardDisplay_italicText__1QKFc\",\"card\":\"CardDisplay_card__1XFzg\",\"whiteText\":\"CardDisplay_whiteText__3iIoF\",\"name\":\"CardDisplay_name__2Lp78\",\"namePokemon\":\"CardDisplay_namePokemon__4BM6Q\",\"nameRaidBoss\":\"CardDisplay_nameRaidBoss__3GlaA\",\"nameIcon\":\"CardDisplay_nameIcon__1q13W\",\"nameOutline\":\"CardDisplay_nameOutline__1b7MD\",\"hitpoints\":\"CardDisplay_hitpoints__2ZXbp\",\"hitpointsWrapper\":\"CardDisplay_hitpointsWrapper__2ZDHS\",\"hitpointsWrapperV\":\"CardDisplay_hitpointsWrapperV__Z4EvZ\",\"hitpointsWrapperRaidBoss\":\"CardDisplay_hitpointsWrapperRaidBoss__-4HXt\",\"hitpointsHP\":\"CardDisplay_hitpointsHP__73v1W\",\"prevolveName\":\"CardDisplay_prevolveName__134Di\",\"subname\":\"CardDisplay_subname__3F0pF\",\"pokedexEntry\":\"CardDisplay_pokedexEntry__59fzz\",\"movesWrapper\":\"CardDisplay_movesWrapper__1J4k2\",\"movesWrapperV\":\"CardDisplay_movesWrapperV__-s-lu\",\"abilityNameWrapper\":\"CardDisplay_abilityNameWrapper__p-cBp\",\"abilityIcon\":\"CardDisplay_abilityIcon__2XYwJ\",\"abilityIconV\":\"CardDisplay_abilityIconV__2Ozqw\",\"abilityText\":\"CardDisplay_abilityText__VDFJ6\",\"move\":\"CardDisplay_move__66xJF\",\"moveMultiple\":\"CardDisplay_moveMultiple__2ta0Q\",\"moveV\":\"CardDisplay_moveV__187Ns\",\"moveName\":\"CardDisplay_moveName__2Umut\",\"moveNameWrapper\":\"CardDisplay_moveNameWrapper__wUKlI\",\"moveNameShoved\":\"CardDisplay_moveNameShoved__2XB7i\",\"moveCost\":\"CardDisplay_moveCost__jLtGU\",\"moveEnergy\":\"CardDisplay_moveEnergy__A5hMX\",\"moveDamage\":\"CardDisplay_moveDamage__i06G_\",\"moveText\":\"CardDisplay_moveText__3C_v4\",\"moveTextV\":\"CardDisplay_moveTextV__1rkAy\",\"typeBar\":\"CardDisplay_typeBar__18jtt\",\"weakness\":\"CardDisplay_weakness__YQq3m\",\"weaknessIcon\":\"CardDisplay_weaknessIcon__3CynA\",\"resistance\":\"CardDisplay_resistance__2bkTi\",\"resistanceIcon\":\"CardDisplay_resistanceIcon__P-0Py\",\"retreatCost\":\"CardDisplay_retreatCost__2lpKE\",\"retreatCostIcon\":\"CardDisplay_retreatCostIcon__1z8qn\",\"illustrator\":\"CardDisplay_illustrator__235hf\",\"setIcon\":\"CardDisplay_setIcon__1aFAc\",\"setNumber\":\"CardDisplay_setNumber__17ac3\",\"rotation\":\"CardDisplay_rotation__3ry_3\",\"rarityIcon\":\"CardDisplay_rarityIcon__1G7BB\",\"cardInfoWhite\":\"CardDisplay_cardInfoWhite__3lNt0\",\"description\":\"CardDisplay_description__OeJug\",\"descriptionWrapper\":\"CardDisplay_descriptionWrapper__2Wtnx\",\"descriptionWrapperEnergy\":\"CardDisplay_descriptionWrapperEnergy__3hXWW\",\"descriptionWrapperPokemon\":\"CardDisplay_descriptionWrapperPokemon__2HLt6\",\"prevolveImage\":\"CardDisplay_prevolveImage__3Jrnh\",\"prevolveImageWrapper\":\"CardDisplay_prevolveImageWrapper__2130A\",\"image\":\"CardDisplay_image__1Vf1q\",\"backgroundImage\":\"CardDisplay_backgroundImage__2AC27\",\"imageLayer1\":\"CardDisplay_imageLayer1__qRJeQ\",\"imageLayer2\":\"CardDisplay_imageLayer2__15z-1\",\"typeImage\":\"CardDisplay_typeImage__3RpoQ\",\"typeImageSpecial\":\"CardDisplay_typeImageSpecial__1Z-XN\",\"background\":\"CardDisplay_background__20FmV\",\"raidBossType\":\"CardDisplay_raidBossType__2kYcK\",\"raidBossNumber\":\"CardDisplay_raidBossNumber__3prk4\",\"raidBossMovesWrapper\":\"CardDisplay_raidBossMovesWrapper__3XnL2\",\"raidBossMove\":\"CardDisplay_raidBossMove__-tBIj\",\"raidBossMoveName\":\"CardDisplay_raidBossMoveName__1mXVr\",\"raidBossMoveText\":\"CardDisplay_raidBossMoveText__qvEHn\",\"raidBossMoveDamage\":\"CardDisplay_raidBossMoveDamage__27eHA\",\"raidBossMoveDamageShoved\":\"CardDisplay_raidBossMoveDamageShoved__RMYlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1WBu2\",\"header\":\"App_header__2Qyab\",\"headerCircle\":\"App_headerCircle__1xHEs\",\"content\":\"App_content__1WEil\",\"footer\":\"App_footer__1Cr4W\",\"background\":\"App_background__3Pstm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnergyPicker_wrapper__1gcFF\",\"type\":\"EnergyPicker_type__3zMxj\",\"image\":\"EnergyPicker_image__n99hQ\",\"button\":\"EnergyPicker_button__3c3pQ\"};","import { CardOptions } from \"interfaces\";\r\n\r\nexport const REQUEST_CARD_OPTIONS         = 'REQUEST_CARD_OPTIONS';\r\nexport const REQUEST_CARD_OPTIONS_SUCCESS = 'REQUEST_CARD_OPTIONS_SUCCESS';\r\nexport const REQUEST_CARD_OPTIONS_FAILED  = 'REQUEST_CARD_OPTIONS_FAILED';\r\n\r\n\r\nexport const requestCardOptions = () => ({ type: REQUEST_CARD_OPTIONS });\r\nexport const requestCardOptionsSuccess = (cardOptions: CardOptions) => ({ type: REQUEST_CARD_OPTIONS_SUCCESS, payload: { cardOptions } });\r\nexport const requestCardOptionsFailed = (errorMessage: string) => ({ type: REQUEST_CARD_OPTIONS_FAILED, payload: { errorMessage } });\r\n","import { REQUEST_CARD_OPTIONS, REQUEST_CARD_OPTIONS_SUCCESS, REQUEST_CARD_OPTIONS_FAILED } from 'actions';\r\nimport { CardOptions, CardOptionsAction } from 'interfaces';\r\n\r\nexport interface CardOptionsState {\r\n  isLoading: boolean,\r\n  error: boolean,\r\n  cardOptions: CardOptions,\r\n}\r\n\r\nconst initialState: CardOptionsState = {\r\n  isLoading: false,\r\n  error: false,\r\n  cardOptions: {\r\n    supertypes: [],\r\n    baseSets: [],\r\n    rarities: [],\r\n    sets: [],\r\n    subtypes: [],\r\n    types: [],\r\n    variations: [],\r\n    rotations: [],\r\n    rarityIcons: [],\r\n  },\r\n}\r\n\r\nexport const cardOptionsReducer = (\r\n  state: CardOptionsState = initialState,\r\n  action: CardOptionsAction,\r\n): CardOptionsState => {\r\n  switch(action.type) {\r\n    case REQUEST_CARD_OPTIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        error: false,\r\n        cardOptions: action.payload.cardOptions || initialState.cardOptions,\r\n      };\r\n    case REQUEST_CARD_OPTIONS_FAILED:\r\n      console.error(action.payload.errorMessage || 'error');\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default [];\r\n","import { combineReducers } from 'redux';\r\nimport { CardOptionsState, cardOptionsReducer } from './cardOptions';\r\n\r\nexport interface State {\r\n  cardOptions: CardOptionsState,\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  cardOptions: cardOptionsReducer,\r\n});\r\n","import { ImportedCard, Card, MoveType, ImagePathOptions } from 'interfaces';\r\n\r\nexport const relativePathPrefix = (path: string): string  => `${process.env.REACT_APP_RELATIVE_PREFIX || ''}${path}`;\r\n\r\nexport const cardToImportedCard = (card: Card): ImportedCard => ({\r\n  name: card.name,\r\n  subname: card.subname,\r\n  backgroundImage: card.backgroundImage,\r\n  imageLayer1: card.imageLayer1,\r\n  imageLayer2: card.imageLayer2,\r\n  typeImage: card.typeImage,\r\n  customSetIcon: card.customSetIcon,\r\n  cardNumber: card.cardNumber,\r\n  totalInSet: card.totalInSet,\r\n  hitpoints: card.hitpoints,\r\n  illustrator: card.illustrator,\r\n  weaknessAmount: card.weaknessAmount,\r\n  resistanceAmount: card.resistanceAmount,\r\n  retreatCost: card.retreatCost,\r\n  prevolveName: card.prevolveName,\r\n  prevolveImage: card.prevolveImage,\r\n  pokedexEntry: card.pokedexEntry,\r\n  description: card.description,\r\n  raidLevel: card.raidLevel,\r\n  supertypeId: card.supertype?.id,\r\n  baseSetId: card.baseSet?.id,\r\n  setId: card.set?.id,\r\n  typeId: card.type?.id,\r\n  weaknessTypeId: card.weaknessType?.id,\r\n  resistanceTypeId: card.resistanceType?.id,\r\n  subtypeId: card.subtype?.id,\r\n  rarityId: card.rarity?.id,\r\n  variationId: card.variation?.id,\r\n  rotationId: card.rotation?.id,\r\n  rarityIconId: card.rarityIcon?.id,\r\n  ability: card.ability,\r\n  move1: card.move1 ? {\r\n    name: card.move1.name,\r\n    damage: card.move1.damage,\r\n    text: card.move1.text,\r\n    energyCost: card.move1.energyCost.map((moveType: MoveType) => ({\r\n      amount: moveType.amount,\r\n      typeId: moveType.type.id,\r\n    })),\r\n  } : undefined,\r\n  move2: card.move2 ? {\r\n    name: card.move2.name,\r\n    damage: card.move2.damage,\r\n    text: card.move2.text,\r\n    energyCost: card.move2.energyCost.map((moveType: MoveType) => ({\r\n      amount: moveType.amount,\r\n      typeId: moveType.type.id,\r\n    })),\r\n  } : undefined,\r\n  move3: card.move3 ? {\r\n    name: card.move3.name,\r\n    damage: card.move3.damage,\r\n    text: card.move3.text,\r\n  } : undefined,\r\n});\r\n\r\nconst cardOptionsToImage = (options: ImagePathOptions, folder?: string, supertype?: string) => {\r\n  // Format the options according to the formatting defined in the README\r\n  let filePath: string = relativePathPrefix(`/assets/${options.supertype || supertype}/`);\r\n  if(folder) {\r\n    filePath += `${folder}/`;\r\n  }\r\n  Object.values(options).forEach((param: string, i: number) => {\r\n    if(param !== undefined && param !== 'default') {\r\n      if((param === 'Dynamax' && options.rarity === 'Rainbow') ||\r\n        (param === 'Gigantamax' && options.rarity === 'Rainbow') ||\r\n        (options.rarity === 'Promo' && param === 'Basic')) {\r\n        return;\r\n      }\r\n      if(i !== 0) {\r\n        filePath += '_';\r\n      }\r\n      filePath += param;\r\n      if(param === 'Rainbow') {\r\n        if(options.variation === 'Dynamax' || options.variation === 'Gigantamax') {\r\n          filePath += `_${options.variation}`;\r\n        }\r\n      }\r\n      if(param === 'V' && !options.rarity) {\r\n        filePath += '_Basic';\r\n      }\r\n    }\r\n  });\r\n  return `${filePath}.png`;\r\n}\r\n\r\nexport const getCardImage = (options: ImagePathOptions): string => {\r\n  let imagePath: string;\r\n  switch(options.supertype) {\r\n    case 'Pokemon':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, subtype: options.subtype, variation: options.variation,\r\n        rarity: options.rarity, type: options.type }, options.type, options.supertype);\r\n      break;\r\n    case 'Energy':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type });\r\n      break;\r\n    case 'Trainer':\r\n      imagePath = cardOptionsToImage({ baseSet: options.baseSet, supertype: options.supertype, type: options.type, subtype: options.subtype });\r\n      break;\r\n    case 'RaidBoss':\r\n      return relativePathPrefix('/assets/RaidBoss/pikachu.png');\r\n    default:\r\n      imagePath = '';\r\n  }\r\n  return imagePath;\r\n}\r\n","import { relativePathPrefix } from \"services\";\r\n\r\nexport const getCardOptions = async () => {\r\n  try {\r\n    const response = await fetch(relativePathPrefix('/data/cardOptions.json'));\r\n    return response.json();\r\n  } catch(e) {\r\n    console.error(e);\r\n  }\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { CardOptionsAction } from 'interfaces';\r\nimport { getCardOptions } from 'api';\r\nimport { requestCardOptionsSuccess, requestCardOptionsFailed, REQUEST_CARD_OPTIONS } from 'actions';\r\n\r\nfunction* fetchCardOptions(action: CardOptionsAction) {\r\n  try {\r\n    const cardOptions = yield call(getCardOptions);\r\n    yield put(requestCardOptionsSuccess(cardOptions));\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put(requestCardOptionsFailed('Request failed'));\r\n  }\r\n}\r\n\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_CARD_OPTIONS, fetchCardOptions);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from 'reducers';\r\nimport mySaga from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  subname?: string,\r\n}\r\n\r\nconst TrainerCard: React.FC<Props> = ({ name, description, type, subname }) => <>\r\n  <span className={styles.name}>{formatText(name)}</span>\r\n  <div className={styles.descriptionWrapper}>\r\n    <p className={styles.description}>{formatText(description)}</p>\r\n  </div>\r\n  {type?.hasSubname && <span className={styles.subname}>{formatText(subname)}</span>}\r\n</>\r\n\r\nexport default TrainerCard;\r\n","import React from 'react';\r\nimport { Type } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\n\r\ninterface Props {\r\n  name?: string,\r\n  description?: string,\r\n  type?: Type,\r\n  typeImage?: string,\r\n}\r\n\r\nconst EnergyCard: React.FC<Props> = ({ name, description, type, typeImage }) => <>\r\n  {type?.hasSpecialStyle && <>\r\n    <span className={styles.name}>{formatText(name)}</span>\r\n    <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperEnergy}`}>\r\n      <p className={styles.description}>{formatText(description)}</p>\r\n    </div>\r\n  </>}\r\n  {typeImage &&\r\n    <img src={typeImage} className={`${styles.typeImage} ${type?.shortName === 'Special' ? styles.typeImageSpecial : ''}`} alt='' />\r\n  }\r\n</>\r\n\r\nexport default EnergyCard;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Move, MoveType } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\nconst PokemonCard: React.FC<Props> = ({ card }) => {\r\n  const getMoveTotalCost = (move: Move) => move.energyCost.reduce((acc: number, currentValue: MoveType) => acc += currentValue.amount, 0);\r\n\r\n  useEffect(() => {\r\n    if(card.move1 && card.move2) {\r\n      let highestCost = Math.max(getMoveTotalCost(card.move1), getMoveTotalCost(card.move2));\r\n\r\n      const moveNames: HTMLElement[] = document.querySelectorAll('.moveName') as unknown as HTMLElement[];\r\n      const initialLeft = +styles.moveNameLeft.substr(0, styles.moveNameLeft.length - 1);\r\n      moveNames.forEach((moveName) => {\r\n        moveName.style.left = `${Math.max(initialLeft, initialLeft + ((highestCost - 4) * 7))}%`;\r\n      });\r\n    }\r\n  }, [card.move1, card.move2]);\r\n\r\n  const formatMoveCost = (move: Move) => {\r\n    let totalAmount: number = 0;\r\n    const moveImages = move.energyCost.map((moveType) => {\r\n      const returnValue: JSX.Element[] = [];\r\n      for(let i = 0; i < moveType.amount; i++) {\r\n        totalAmount++;\r\n        returnValue.push(<img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.moveEnergy} alt='' key={i} />);\r\n      }\r\n      return returnValue;\r\n    });\r\n\r\n    if(totalAmount === 0) {\r\n      return <img src={relativePathPrefix('/assets/icons_symbols/types/Empty_border.png')} className={styles.moveEnergy} alt='' />;\r\n    } else {\r\n      return moveImages;\r\n    }\r\n  }\r\n\r\n  const formatMove = (move: Move, firstMove?: boolean): JSX.Element =>\r\n    <div className={`${firstMove ? card.move2 ? styles.moveMultiple : styles.move : ''} ${card.subtype?.hasVStyle ? styles.moveV : ''}`}>\r\n      {move.name &&\r\n        <div className={styles.moveNameWrapper}>\r\n          <div className={styles.moveCost}>\r\n            {formatMoveCost(move)}\r\n          </div>\r\n          <span className={`${styles.moveName} moveName`}>{move.name}</span>\r\n          <span className={styles.moveDamage}>{move.damage}</span>\r\n        </div>\r\n      }\r\n      <p className={`${styles.moveText} ${card.subtype?.hasVStyle ? styles.moveTextV : ''}`}>{formatText(move.text)}</p>\r\n    </div>\r\n\r\n  return <>\r\n    <span className={`${styles.name} ${styles.namePokemon} ${card.rarity?.hasNameOutline || card.subtype?.hasNameOutline ? styles.nameOutline : ''}`}>\r\n      {formatText(card.name)}\r\n      {card.subtype?.hasVSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/v_icon.png')} className={styles.nameIcon} alt='' />}\r\n      {card.subtype?.hasVMaxSymbol && <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />}\r\n    </span>\r\n    <div className={`${styles.hitpointsWrapper} ${card.subtype?.hasVStyle ? styles.hitpointsWrapperV : ''}`}>\r\n      <span className={styles.hitpointsHP}>HP</span>\r\n      <span className={styles.hitpoints}>{card.hitpoints && card.hitpoints <= 999 ? card.hitpoints : 999}</span>\r\n    </div>\r\n    {(card.subtype?.hasPrevolve && card.prevolveName) &&\r\n      <span className={styles.prevolveName}>{'Evolves from '}{formatText(card.prevolveName)}</span>\r\n    }\r\n    {(card.subtype?.hasPokedexEntry && card.pokedexEntry) &&\r\n      <span className={styles.pokedexEntry}>{card.pokedexEntry}</span>\r\n    }\r\n    <div className={`${styles.movesWrapper} ${card.subtype?.hasVStyle ? styles.movesWrapperV : ''}`}>\r\n      {card.ability &&\r\n        <div className={styles.ability}>\r\n          <div className={styles.abilityNameWrapper}>\r\n            {card.subtype?.hasVStyle ?\r\n              <img className={`${styles.abilityIcon} ${styles.abilityIconV}`} src={relativePathPrefix('/assets/icons_symbols/other/ability_v.png')} alt='' />\r\n              :\r\n              <img className={styles.abilityIcon} src={relativePathPrefix('/assets/icons_symbols/other/ability.png')} alt='' />\r\n            }\r\n            <span className={`${styles.moveName} moveName`}>{card.ability.name}</span>\r\n          </div>\r\n          <p className={styles.abilityText}>{formatText(card.ability.text)}</p>\r\n        </div>\r\n      }\r\n      {card.move1 && formatMove(card.move1, true)}\r\n      {card.move2 && formatMove(card.move2)}\r\n    </div>\r\n    <div className={`${styles.typeBar} ${!card.rarity?.hasBlackTopText && card.subtype?.hasWhiteTopText ? styles.whiteText : ''}`}>\r\n      {card.weaknessType &&\r\n        <span className={styles.weakness}>\r\n          <img className={styles.weaknessIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.weaknessType.shortName}.png`)} alt='' />\r\n          <span>×{card.weaknessAmount && card.weaknessAmount < 100 ? card.weaknessAmount : 99}</span>\r\n        </span>\r\n      }\r\n      {card.resistanceType &&\r\n        <span className={styles.resistance}>\r\n          <img className={styles.resistanceIcon} src={relativePathPrefix(`/assets/icons_symbols/types/${card.resistanceType.shortName}.png`)} alt='' />\r\n          <span>-{card.resistanceAmount && card.resistanceAmount < 100 ? card.resistanceAmount : 99}</span>\r\n        </span>\r\n      }\r\n      <div className={styles.retreatCost}>\r\n        {card.retreatCost ? Array.from(Array(card.retreatCost >= 0 ? card.retreatCost : 0), (e, i) =>\r\n          i < 5 && <img key={i} className={styles.retreatCostIcon} src={relativePathPrefix('/assets/icons_symbols/types/Colorless.png')} alt='' />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n    {!card.subtype?.noDescription &&\r\n      <div className={`${styles.descriptionWrapper} ${styles.descriptionWrapperPokemon}`}>\r\n        <p className={styles.description}>{formatText(card.description)}</p>\r\n      </div>\r\n    }\r\n    {(card.subtype?.hasPrevolve && card.prevolveImage) &&\r\n      <div className={styles.prevolveImageWrapper}>\r\n        <img src={card.prevolveImage} className={styles.prevolveImage} alt='' />\r\n      </div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default PokemonCard;\r\n","import React from 'react';\r\nimport { Card, Move, BaseMove } from 'interfaces';\r\nimport styles from './CardDisplay.module.scss';\r\nimport { formatText } from './index';\r\nimport { relativePathPrefix } from 'services';\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\nconst RaidBossCard: React.FC<Props> = ({ card }) => {\r\n  const damageHasSymbol = (damage: string = ''): boolean => /[^\\d]/.test(damage);\r\n\r\n  const formatMove = (move: Move | BaseMove): JSX.Element =>\r\n    <div className={styles.raidBossMove}>\r\n      <span className={styles.raidBossMoveName}>{move.name}</span>\r\n      <p className={styles.raidBossMoveText}>{move.text}</p>\r\n      <span className={`${styles.raidBossMoveDamage} ${damageHasSymbol(move.damage) ? styles.raidBossMoveDamageShoved : ''}`}>{move.damage}</span>\r\n    </div>\r\n\r\n  return <>\r\n    <span className={`${styles.name} ${styles.nameRaidBoss} ${styles.nameOutline}`}>\r\n      {formatText(card.name)}\r\n      <img src={relativePathPrefix('/assets/icons_symbols/other/vmax_icon.png')} className={styles.nameIcon} alt='' />\r\n    </span>\r\n    <div className={`${styles.hitpointsWrapper} ${styles.hitpointsWrapperRaidBoss}`}>\r\n      <span className={styles.hitpointsHP}>HP</span>\r\n      <span className={styles.hitpoints}>{card.hitpoints}</span>\r\n    </div>\r\n    <img src={relativePathPrefix(`/assets/icons_symbols/types/${card.type?.shortName}_border.png`)} className={styles.raidBossType} alt={card.type?.name} />\r\n    <div className={styles.raidBossMovesWrapper}>\r\n      {card.move1 && formatMove(card.move1)}\r\n      {card.move2 && formatMove(card.move2)}\r\n      {card.move3 && formatMove(card.move3)}\r\n    </div>\r\n    {card.cardNumber &&\r\n      <div className={styles.raidBossNumber}>\r\n        {card.cardNumber}\r\n      </div>\r\n    }\r\n  </>\r\n}\r\n\r\nexport default RaidBossCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'interfaces';\r\nimport TrainerCard from './Trainer';\r\nimport styles from './CardDisplay.module.scss';\r\nimport EnergyCard from './Energy';\r\nimport PokemonCard from './Pokemon';\r\nimport { relativePathPrefix, getCardImage } from 'services';\r\nimport RaidBossCard from './RaidBoss';\r\n\r\ninterface Props {\r\n  card: Card,\r\n}\r\n\r\nconst CardDisplay: React.FC<Props> = ({ card }) => {\r\n  const [imagePath, setImagePath] = useState<string>();\r\n  const { supertype, type, baseSet, set, variation, subtype, rarity } = card;\r\n\r\n  useEffect(() => {\r\n    if(supertype && type && baseSet) {\r\n      const newImage: string = getCardImage({baseSet: baseSet.shortName, type: type.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype.shortName, variation: variation?.shortName})\r\n      setImagePath(newImage);\r\n    }\r\n  }, [supertype, type, baseSet, set, variation, subtype, rarity]);\r\n\r\n  return (\r\n    <div className={`${styles.card} ${card.type?.hasWhiteText ? styles.whiteText : ''}`} id='card'>\r\n      {card.backgroundImage && <img src={card.backgroundImage} className={styles.backgroundImage} alt='' />}\r\n      {supertype?.shortName === 'Trainer' && <TrainerCard name={card.name} subname={card.subname} description={card.description} type={card.type} />}\r\n      {supertype?.shortName === 'Energy' && <EnergyCard name={card.name} description={card.description} type={card.type} typeImage={card.typeImage} />}\r\n      {supertype?.shortName === 'Pokemon' && <PokemonCard card={card} />}\r\n      {supertype?.shortName === 'RaidBoss' && <RaidBossCard card={card} />}\r\n      {(!(supertype?.shortName === 'Energy' && !card.type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss') && <>\r\n        <div className={card.rarity?.hasNameOutline || card.subtype?.hasNameOutline ? styles.cardInfoWhite : ''}>\r\n          {(supertype?.shortName !== 'Energy' && card.illustrator) && <span className={styles.illustrator}>{`Illus. ${card.illustrator}`}</span>}\r\n          {card.customSetIcon ?\r\n            <img src={card.customSetIcon} alt='' className={styles.setIcon} />\r\n            :\r\n            card.set && <img src={relativePathPrefix(`/assets/icons_symbols/sets/${card.set.number}_SetIcon_${card.set.shortName}.png`)} alt={card.set.name} className={styles.setIcon} />\r\n          }\r\n          {card.rotation && <img src={relativePathPrefix(`/assets/icons_symbols/rotations/${card.rotation?.shortName}.png`)} alt={card.rotation?.name} className={styles.rotation} />}\r\n          <span className={styles.setNumber}>\r\n            {`${card.cardNumber || ''}${card.totalInSet ? `/${card.totalInSet}` : ''}`}\r\n            {card.rarityIcon &&\r\n              <img alt={card.rarityIcon.name} className={styles.rarityIcon}\r\n                src={relativePathPrefix(`/assets/icons_symbols/rarities/${card.rarityIcon.shortName}${(card.type?.hasWhiteText || card.subtype?.hasVStyle) ? '_white' : ''}.png`)}\r\n              />\r\n            }\r\n          </span>\r\n        </div>\r\n      </>}\r\n      {card.imageLayer1 && <img src={card.imageLayer1} className={styles.imageLayer1} alt='' />}\r\n      <img src={imagePath} className={styles.image} alt={card.name || ''} />\r\n      {card.imageLayer2 && <img src={card.imageLayer2} className={styles.imageLayer2} alt='' />}\r\n      <div className={styles.background} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardDisplay;\r\n\r\nexport const formatText = (text: string | undefined) => {\r\n  if(text) {\r\n    let chars: RegExpMatchArray | null = text.match(/\\[.*?\\]/g);\r\n    if(chars) {\r\n      const charsArr: string[] = chars.map(char => char.replace('[', '').replace(']', ''));\r\n      const textNoChars = text.split(/\\[.*?\\]/g);\r\n      const returnText: (JSX.Element | string)[] = [];\r\n      textNoChars.forEach((textElm, i) => {\r\n        returnText.push(textElm);\r\n        if(charsArr.length > i) {\r\n          if(charsArr[i].length > 1) {\r\n            returnText.push(<span key={i} className={styles.italicText}>{charsArr[i]}</span>);\r\n          } else {\r\n            returnText.push(<span key={i} className={styles.ptcgText}>{charsArr[i]}</span>);\r\n          }\r\n        }\r\n      });\r\n      return returnText;\r\n    } else {\r\n      return text;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface LabelButton {\r\n  name: string,\r\n  icon: IconDefinition,\r\n  onClick: () => void,\r\n}\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name?: string,\r\n  horizontal?: boolean,\r\n  buttons?: LabelButton[],\r\n}\r\n\r\nconst InputLabel: React.FC<Props> = ({ shortName, name, horizontal, buttons, children }) =>\r\n  <label htmlFor={shortName} className={`${styles.input} ${horizontal ? styles.horizontal : ''}`}>\r\n    {name &&\r\n      <div className={styles.inputLabel}>\r\n        <span>{name}</span>\r\n        {buttons &&\r\n          <span className={styles.inputLabelButtonWrapper}>\r\n            {buttons.map((button: LabelButton, i: number) =>\r\n              <FontAwesomeIcon icon={button.icon} title={button.name} className={styles.inputLabelButton} key={i}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  button.onClick();\r\n                }}\r\n              />\r\n            )}\r\n          </span>\r\n        }\r\n      </div>\r\n    }\r\n    {children}\r\n  </label>\r\n\r\nexport default InputLabel;\r\n","import React from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  checked: boolean,\r\n  setter: (newValue: boolean) => void,\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({ shortName, name, checked, setter }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n    <input\r\n      id={shortName}\r\n      name={shortName}\r\n      checked={checked}\r\n      onChange={e => setter(e.currentTarget.checked)}\r\n      className={`${styles.inputField} ${styles.checkbox}`}\r\n      type='checkbox'\r\n    />\r\n    <div className={styles.checkboxFake}>\r\n      {checked && <FontAwesomeIcon icon={faCheck} className={styles.checkboxIcon} />}\r\n    </div>\r\n  </InputLabel>\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './EnergyPicker.module.scss';\r\nimport { MoveType, Type } from 'interfaces';\r\nimport { relativePathPrefix } from 'services';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n  label: String,\r\n  types: Type[],\r\n  moveCost: MoveType[],\r\n  setMoveCost: (moveTypes: MoveType[]) => void,\r\n}\r\n\r\nconst EnergyPicker: React.FC<Props> = ({ label, types, moveCost, setMoveCost }) => {\r\n  let [moveTypes, setMoveTypes] = useState<MoveType[]>([]);\r\n\r\n  useEffect(() => {\r\n    const newMoveTypes: MoveType[] = [];\r\n    types.forEach((type) => {\r\n      if(type.isEnergy) {\r\n        newMoveTypes.push({\r\n          type,\r\n          amount: 0,\r\n        });\r\n      }\r\n    });\r\n    setMoveTypes(newMoveTypes);\r\n  }, [types]);\r\n\r\n  return (\r\n    <div>\r\n      <span>{label}</span>\r\n      <div className={styles.wrapper}>\r\n        {moveTypes.map((moveType, i) =>\r\n          <div className={styles.type} key={i}>\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount + 1;\r\n              } else {\r\n                type = {\r\n                  type: moveType.type,\r\n                  amount: 1,\r\n                };\r\n                newMoveCost.push(type);\r\n              }\r\n              setMoveCost(newMoveCost);\r\n            }}>\r\n              <FontAwesomeIcon icon={faCaretUp} />\r\n            </span>\r\n            <img src={relativePathPrefix(`/assets/icons_symbols/types/${moveType.type.shortName}_border.png`)} className={styles.image} alt={moveType.type.name} title={moveType.type.name} />\r\n            <span className={styles.button} onClick={() => {\r\n              let newMoveCost: MoveType[] = [...moveCost];\r\n              let type: MoveType | undefined = newMoveCost.find((a) => a.type.id === moveType.type.id);\r\n              if(type) {\r\n                type.amount = type.amount - 1;\r\n                if(type.amount <= 0) {\r\n                  newMoveCost.splice(newMoveCost.indexOf(type), 1)\r\n                }\r\n                setMoveCost(newMoveCost);\r\n              }\r\n            }}>\r\n              <FontAwesomeIcon icon={faCaretDown} />\r\n            </span>\r\n            <span>{moveCost.find((a) => a.type.id === moveType.type.id)?.amount || 0}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnergyPicker;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\nimport { faCropAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name?: string,\r\n  info?: string,\r\n  setter: (newValue:  any) => void,\r\n  onChange?: (newImage: string) => void,\r\n  croppable?: boolean,\r\n  cropperSetter?: (newImage: string, imageSetter: () => void) => void,\r\n}\r\n\r\nconst ImageInput: React.FC<Props> = ({ shortName, name, info, setter, onChange, croppable, cropperSetter }) => {\r\n  const [image, setImage] = useState<string>('none');\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const initialRender = useRef<boolean>(true);\r\n  const acceptedTypes = useRef<string[]>(['image/png', 'image/jpeg'])\r\n\r\n  useEffect(() => {\r\n    if(initialRender.current) {\r\n      initialRender.current = false;\r\n    } else {\r\n      console.log(image);\r\n      setter(image);\r\n      onChange && onChange(image);\r\n      cropperSetter && cropperSetter(image, () => setter);\r\n    }\r\n  }, [image, onChange, setter]);\r\n\r\n  return (\r\n    <InputLabel shortName={shortName} name={name} horizontal buttons={croppable ? [\r\n      {\r\n        name: 'Crop',\r\n        icon: faCropAlt,\r\n        onClick: () => cropperSetter && cropperSetter(image, () => setter),\r\n      },\r\n      {\r\n        name: 'Remove',\r\n        icon: faTimes,\r\n        onClick: () => {\r\n          setImage('');\r\n          if(inputRef.current) {\r\n            inputRef.current.value = '';\r\n          }\r\n        },\r\n      },\r\n    ] : []}>\r\n      {info && <span className={styles.info}>{info}</span>}\r\n      <input\r\n        ref={inputRef}\r\n        id={shortName}\r\n        name={shortName}\r\n        onChange={e => {\r\n          if(e.target.files && e.target.files[0] && acceptedTypes.current.includes(e.target.files[0].type)) {\r\n            setImage(window.URL.createObjectURL(e.target.files[0]));\r\n          } else {\r\n            setImage('');\r\n            e.target.value = '';\r\n          }\r\n        }}\r\n        className={styles.file}\r\n        type='file'\r\n        accept={acceptedTypes.current.join(',')}\r\n      />\r\n    </InputLabel>\r\n  )\r\n}\r\n\r\nexport default ImageInput;\r\n","import React from 'react';\nimport styles from '../Form.module.scss';\nimport InputLabel from '../InputLabel';\n\ninterface Props {\n  shortName: string,\n  name: string,\n  value: string | number,\n  type: 'text' | 'number' | 'textarea',\n  min?: number,\n  max?: number,\n  horizontal?: boolean,\n  setter: (newValue: any) => void,\n}\n\nconst Input: React.FC<Props> = ({ shortName, name, value, type, min, max, setter, horizontal }) =>\n  <InputLabel shortName={shortName} name={name} horizontal={horizontal || type === 'textarea'}>\n    {type !== 'textarea' ?\n      <input\n        id={shortName}\n        name={shortName}\n        value={value}\n        type={type}\n        min={min}\n        max={max}\n        onChange={e => setter(type === 'text' ? e.currentTarget.value : +e.currentTarget.value)}\n        className={styles.inputField}\n      />\n      :\n      <textarea\n        id={shortName}\n        name={shortName}\n        value={value}\n        onChange={e => setter(e.currentTarget.value)}\n        className={`${styles.inputField} ${styles.inputTextarea}`}\n      ></textarea>\n    }\n  </InputLabel>\n\nexport default Input;\n","import React, { ChangeEvent } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport InputLabel from '../InputLabel';\r\n\r\ninterface Props {\r\n  shortName: string,\r\n  name: string,\r\n  selectRef?: React.RefObject<HTMLSelectElement>,\r\n  onChange: (e: ChangeEvent<HTMLSelectElement>) => void,\r\n}\r\n\r\nconst Select: React.FC<Props> = ({ shortName, name, selectRef, onChange, children }) =>\r\n  <InputLabel shortName={shortName} name={name}>\r\n    <select id={shortName} ref={selectRef} name={shortName} className={`${styles.inputField} ${styles.select}`} onChange={onChange}>\r\n      {children}\r\n    </select>\r\n  </InputLabel>\r\n\r\nexport default Select;\r\n","import { Area } from \"react-easy-crop/types\"\r\n\r\nconst createImage = (url: string): Promise<HTMLImageElement> =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', error => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  });\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} imageSrc - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n */\r\nconst getCroppedImg = async (imageSrc: string, pixelCrop: Area): Promise<string> => {\r\n  let image: HTMLImageElement;\r\n  try {\r\n    image = await createImage(imageSrc);\r\n  } catch(e) {\r\n    return '';\r\n  }\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  if(ctx) {\r\n    // translate canvas context to a central location on image to allow rotating around the center.\r\n    ctx.translate(safeArea / 2, safeArea / 2);\r\n    ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n    // draw rotated image and store data.\r\n    ctx.drawImage(\r\n      image,\r\n      safeArea / 2 - image.width * 0.5,\r\n      safeArea / 2 - image.height * 0.5,\r\n    );\r\n    const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n    // set canvas width to final desired crop size - this will clear existing context\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // paste generated rotate image with correct offsets for x,y crop values.\r\n    ctx.putImageData(\r\n      data,\r\n      0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\r\n      0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y,\r\n    );\r\n  }\r\n\r\n  return new Promise(resolve =>\r\n    canvas.toBlob(\r\n      file => resolve(URL.createObjectURL(file)),\r\n      'image/png'\r\n    ));\r\n}\r\n\r\nexport default getCroppedImg;\r\n","import React, { MouseEvent } from 'react';\r\nimport styles from '../Form.module.scss';\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface Props {\r\n  className?: string,\r\n  onClick?: (e: MouseEvent) => void,\r\n  icon?: IconDefinition,\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ className, onClick, icon, children }) =>\r\n  <button className={`${styles.button} ${className ? className : ''}`} onClick={onClick}>\r\n    {icon && <FontAwesomeIcon className={styles.buttonIcon} icon={icon} />}\r\n    {children}\r\n  </button>\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\nimport { State } from 'reducers';\nimport { connect } from 'react-redux';\nimport { CardOptionsState } from 'reducers/cardOptions';\nimport { Variation, Type, Subtype, Set, Rarity, BaseSet, Rotation, RarityIcon, MoveType, Card, ImportedCard, ImportedMoveType, Supertype } from 'interfaces';\nimport { bindActionCreators } from 'redux';\nimport { requestCardOptions } from 'actions';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport styles from './CardCreator.module.scss';\nimport CardDisplay from 'components/CardDisplay';\nimport { Select, Input, Checkbox, ImageInput, EnergyPicker} from 'components/FormElements';\nimport { relativePathPrefix, cardToImportedCard, getCardImage } from 'services';\nimport Cropper from 'react-easy-crop';\nimport { Point, Area } from 'react-easy-crop/types';\nimport getCroppedImg from 'cropImage';\nimport Button from 'components/FormElements/Button';\nimport { faPaste, faFileDownload, faClipboard, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\ninterface Props {\n  cardOptionsState: CardOptionsState,\n  card?: ImportedCard,\n  requestCardOptions: () => Object,\n}\n\nconst CardCreatorPage: React.FC<Props> = ({ cardOptionsState, card, requestCardOptions }) => {\n  const importingCard = useRef<boolean>(false);\n  const initialImported = useRef<boolean>(false);\n  const [importingTrigger, setImportingTrigger] = useState<boolean>(false);\n  // Selectors\n  const [supertype, setSupertype] = useState<Supertype>();\n  const [type, setType] = useState<Type>();\n  const [baseSet, setBaseSet] = useState<BaseSet>();\n  const [set, setSet] = useState<Set>();\n  const [rotation, setRotation] = useState<Rotation>();\n  const [variation, setVariation] = useState<Variation>();\n  const [subtype, setSubtype] = useState<Subtype>();\n  const [rarity, setRarity] = useState<Rarity>();\n  const [rarityIcon, setRarityIcon] = useState<RarityIcon>();\n  const [weaknessType, setWeaknessType] = useState<Type>();\n  const [resistanceType, setResistanceType] = useState<Type>();\n  const [raidLevel, setRaidLevel] = useState<number>(1);\n  // Selector refs\n  const baseSetRef = useRef<HTMLSelectElement>(null);\n  const supertypeRef = useRef<HTMLSelectElement>(null);\n  const typeRef = useRef<HTMLSelectElement>(null);\n  const subtypeRef = useRef<HTMLSelectElement>(null);\n  const variationRef = useRef<HTMLSelectElement>(null);\n  const rarityRef = useRef<HTMLSelectElement>(null);\n  const setIconRef = useRef<HTMLSelectElement>(null);\n  const rotationRef = useRef<HTMLSelectElement>(null);\n  const rarityIconRef = useRef<HTMLSelectElement>(null);\n  const weaknessTypeRef = useRef<HTMLSelectElement>(null);\n  const resistanceTypeRef = useRef<HTMLSelectElement>(null);\n  const raidLevelRef = useRef<HTMLSelectElement>(null);\n  // Inputs\n  const [name, setName] = useState<string>('');\n  const [prevolveName, setPrevolveName] = useState<string>('');\n  const [hitpoints, setHitpoints] = useState<number>(100);\n  const [subname, setSubname] = useState<string>('');\n  const [pokedexEntry, setPokedexEntry] = useState<string>('');\n  const [weaknessAmount, setWeaknessAmount] = useState<number>(2);\n  const [resistanceAmount, setResistanceAmount] = useState<number>(30);\n  const [retreatCost, setRetreatCost] = useState<number>(1);\n  const [description, setDescription] = useState<string>('');\n  const [illustrator, setIllustrator] = useState<string>('');\n  const [cardNumber, setCardNumber] = useState<string>('');\n  const [totalInSet, setTotalInSet] = useState<string>('');\n  const [backgroundImage, setBackgroundImage] = useState<string>('');\n  const [imageLayer1, setImageLayer1] = useState<string>('');\n  const [imageLayer2, setImageLayer2] = useState<string>('');\n  const [typeImage, setTypeImage] = useState<string>('');\n  const [prevolveImage, setPrevolveImage] = useState<string>('');\n  const [hasCustomSetIcon, setHasCustomSetIcon] = useState<boolean>(false);\n  const [customSetIcon, setCustomSetIcon] = useState<string>('');\n  // Image cropper\n  const [cropArea, setCropArea] = useState<Point>({ x: 0, y: 0 });\n  const [cropZoom, setCropZoom] = useState<number>(1);\n  const [cropImage, setCropImage] = useState<string>('');\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState<Area>({ x: 0, y: 0, height: 0, width: 0 });\n  const [currentCropSetter, setCurrentCropSetter] = useState<Dispatch<SetStateAction<string>>>();\n  // Ability/Moves\n  const [hasAbility, setHasAbility] = useState<boolean>(false);\n  const [abilityName, setAbilityName] = useState<string>('');\n  const [abilityText, setAbilityText] = useState<string>('');\n  const [move1Name, setMove1Name] = useState<string>('');\n  const [move1Damage, setMove1Damage] = useState<string>('');\n  const [move1Text, setMove1Text] = useState<string>('');\n  const [move1Cost, setMove1Cost] = useState<MoveType[]>([]);\n  const [hasSecondMove, setHasSecondMove] = useState<boolean>(false);\n  const [move2Name, setMove2Name] = useState<string>('');\n  const [move2Text, setMove2Text] = useState<string>('');\n  const [move2Damage, setMove2Damage] = useState<string>('');\n  const [move2Cost, setMove2Cost] = useState<MoveType[]>([]);\n  const [move3Name, setMove3Name] = useState<string>('');\n  const [move3Text, setMove3Text] = useState<string>('');\n  const [move3Damage, setMove3Damage] = useState<string>('');\n\n  useEffect(() => {\n    requestCardOptions();\n  }, [requestCardOptions]);\n\n  useEffect(() => {\n    setSupertype(cardOptionsState.cardOptions.supertypes[0]);\n    setType(cardOptionsState.cardOptions.types[0]);\n    setWeaknessType(cardOptionsState.cardOptions.types[0]);\n    setSet(cardOptionsState.cardOptions.sets[0]);\n    setBaseSet(cardOptionsState.cardOptions.baseSets[0]);\n    setSubtype(cardOptionsState.cardOptions.subtypes[0]);\n    setRotation(cardOptionsState.cardOptions.rotations[0]);\n  }, [cardOptionsState]);\n\n  /**\n   * Changes the types/subtypes etc to the first available one within their parent\n   * For example, when Type is 'Item', and you switch Supertype to 'Pokemon', a Pokémon can't be an Item\n   * so it switches to the first available Type within 'Pokemon', which is 'Grass'\n   */\n  useEffect(() => {\n    if(importingCard.current) {\n      return;\n    }\n    if(supertypeRef.current) {\n      const { selectedIndex, options } = supertypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSupertype = cardOptionsState.cardOptions.supertypes.find((a: Supertype) => a.id === +value);\n      if(newSupertype && newSupertype !== supertype) {\n        setSupertype(newSupertype);\n      }\n    } else {\n      setSupertype(undefined);\n    }\n    if(typeRef.current) {\n      const { selectedIndex, options } = typeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newType = cardOptionsState.cardOptions.types.find((a: Type) => a.id === +value);\n      if(newType && newType !== type) {\n        setType(newType);\n      }\n    } else {\n      setType(undefined);\n    }\n    if(subtypeRef.current) {\n      const { selectedIndex, options } = subtypeRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newSubtype = cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +value);\n      if(value === 'default' || (newSubtype && newSubtype !== subtype)) {\n        setSubtype(newSubtype);\n      }\n    } else {\n      setSubtype(undefined);\n    }\n    if(variationRef.current) {\n      const { selectedIndex, options } = variationRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newVariation = cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +value);\n      if(newVariation && newVariation !== variation) {\n        setVariation(newVariation);\n      }\n    } else {\n      setVariation(undefined);\n    }\n    if(rarityRef.current) {\n      const { selectedIndex, options } = rarityRef.current;\n      const value: string | undefined = options[selectedIndex]?.value;\n      const newRarity = cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +value);\n      if(value === 'default' || (newRarity && newRarity !== rarity)) {\n        setRarity(newRarity);\n      }\n    } else {\n      setRarity(undefined);\n    }\n  }, [cardOptionsState.cardOptions, supertype, type, subtype, variation, rarity]);\n\n  /**\n   * Turns state data into a Card object\n   */\n  const makeCard = (): Card => ({\n    supertype,\n    baseSet,\n    type,\n    variation,\n    subtype,\n    rarity,\n    name: name || undefined,\n    prevolveName: prevolveName || undefined,\n    prevolveImage: prevolveImage || undefined,\n    hitpoints: hitpoints || undefined,\n    subname : subname || undefined,\n    typeImage: typeImage || undefined,\n    pokedexEntry: pokedexEntry || undefined,\n    ability: hasAbility ? {\n      name: abilityName,\n      text: abilityText,\n    } : undefined,\n    move1: move1Name ? {\n      name: move1Name,\n      text: move1Text,\n      damage: move1Damage,\n      energyCost: move1Cost,\n    } : undefined,\n    move2: (!hasAbility && hasSecondMove) || supertype?.shortName === 'RaidBoss' ? {\n      name: move2Name,\n      text: move2Text,\n      damage: move2Damage,\n      energyCost: move2Cost,\n    } : undefined,\n    move3: move3Name ? {\n      name: move3Name,\n      text: move3Text,\n      damage: move3Damage,\n    } : undefined,\n    weaknessType: supertype?.shortName === 'Pokemon' ? weaknessType : undefined,\n    weaknessAmount: supertype?.shortName === 'Pokemon' ? weaknessAmount : undefined,\n    resistanceType: supertype?.shortName === 'Pokemon' ? resistanceType : undefined,\n    resistanceAmount: supertype?.shortName === 'Pokemon' ? resistanceAmount : undefined,\n    retreatCost: supertype?.shortName === 'Pokemon' ? retreatCost : undefined,\n    illustrator: illustrator || undefined,\n    cardNumber: cardNumber || undefined,\n    totalInSet: totalInSet || undefined,\n    customSetIcon: hasCustomSetIcon && !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? customSetIcon : undefined,\n    set: !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? set : undefined,\n    rotation: !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? rotation : undefined,\n    rarityIcon: !(supertype?.shortName === 'Energy' && !type?.hasSpecialStyle) && supertype?.shortName !== 'RaidBoss' ? rarityIcon : undefined,\n    description: description || undefined,\n    backgroundImage: backgroundImage || undefined,\n    imageLayer1: imageLayer1 || undefined,\n    imageLayer2: imageLayer2 || undefined,\n    raidLevel: supertype?.shortName === 'RaidBoss' ? raidLevel : undefined,\n  });\n\n  const downloadCard = () => {\n    const card = document.getElementById('card');\n    if(card) {\n      htmlToImage.toPng(card)\n        .then((dataUrl) => {\n          download(dataUrl, `${name || 'card'}${subtype?.hasVSymbol ? ' V' : subtype?.hasVMaxSymbol ? ' VMAX' : ''}.png`);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const exportCard = () => {\n    const card: Card = makeCard();\n    const exportCard: ImportedCard = cardToImportedCard(card);\n    navigator.clipboard.writeText(JSON.stringify(exportCard));\n  }\n\n  /**\n   * Sets all card data, selectors and energy pickers to certain values based on the cardObj parameter\n   */\n  const importCard = (cardObj: ImportedCard) => {\n    importingCard.current = true;\n    // Base values\n    setName(cardObj.name || '');\n    setPrevolveName(cardObj.prevolveName || '');\n    setPrevolveImage(relativePathPrefix(cardObj.prevolveImage || ''));\n    setHitpoints(cardObj.hitpoints || 0);\n    setSubname(cardObj.subname || '');\n    setTypeImage(relativePathPrefix(cardObj.typeImage || ''));\n    setPokedexEntry(cardObj.pokedexEntry || '');\n    setWeaknessAmount(cardObj.weaknessAmount || 0);\n    setResistanceAmount(cardObj.resistanceAmount || 0);\n    setRetreatCost(cardObj.retreatCost || 0);\n    setIllustrator(cardObj.illustrator || '');\n    setCardNumber(cardObj.cardNumber || '');\n    setTotalInSet(cardObj.totalInSet || '');\n    setDescription(cardObj.description || '');\n    setBackgroundImage(relativePathPrefix(cardObj.backgroundImage || ''));\n    setImageLayer1(relativePathPrefix(cardObj.imageLayer1 || ''));\n    setImageLayer2(relativePathPrefix(cardObj.imageLayer2 || ''));\n    if(cardObj.customSetIcon) {\n      setHasCustomSetIcon(true);\n      setCustomSetIcon(cardObj.customSetIcon);\n    }\n    if(cardObj.ability) {\n      setHasAbility(true);\n      setAbilityName(cardObj.ability.name);\n      setAbilityText(cardObj.ability.text);\n    }\n    if(cardObj.move1) {\n      setMove1Name(cardObj.move1.name);\n      setMove1Damage(cardObj.move1.damage);\n      setMove1Text(cardObj.move1.text);\n      setMove1Cost(cardObj.move1.energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\n        const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\n        if(newType) {\n          result.push({\n            amount: moveType.amount,\n            type: newType,\n          });\n        }\n        return result;\n      }, []));\n    }\n    if(cardObj.move2) {\n      setHasSecondMove(true);\n      setMove2Name(cardObj.move2.name);\n      setMove2Damage(cardObj.move2.damage);\n      setMove2Text(cardObj.move2.text);\n      setMove2Cost(cardObj.move2.energyCost.reduce((result: MoveType[], moveType: ImportedMoveType) => {\n        const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === moveType.typeId);\n        if(newType) {\n          result.push({\n            amount: moveType.amount,\n            type: newType,\n          });\n        }\n        return result;\n      }, []));\n    }\n    if(cardObj.move3) {\n      setMove3Name(cardObj.move3.name);\n      setMove3Damage(cardObj.move3.damage);\n      setMove3Text(cardObj.move3.text);\n    }\n    // Selectors\n    const newBaseSet: BaseSet | undefined = cardOptionsState.cardOptions.baseSets.find((a) => a.id === cardObj.baseSetId);\n    if(newBaseSet) {\n      setBaseSet(newBaseSet);\n      if(baseSetRef.current && newBaseSet) {\n        baseSetRef.current.selectedIndex = Array.from(baseSetRef.current.options).findIndex((t) => +t.value === newBaseSet.id);\n      }\n    } else {\n      if(baseSetRef.current) {\n        baseSetRef.current.selectedIndex = 0;\n      }\n      setBaseSet(undefined);\n    }\n    const newSupertype: Supertype | undefined = cardOptionsState.cardOptions.supertypes.find((a) => a.id === cardObj.supertypeId);\n    if(newSupertype) {\n      setSupertype(newSupertype);\n      if(supertypeRef.current && newSupertype) {\n        supertypeRef.current.selectedIndex = Array.from(supertypeRef.current.options).findIndex((t) => +t.value === newSupertype.id);\n      }\n    } else {\n      if(supertypeRef.current) {\n        supertypeRef.current.selectedIndex = 0;\n      }\n      setSupertype(undefined);\n    }\n    const newType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.typeId);\n    if(newType) {\n      setType(newType);\n      if(typeRef.current) {\n        typeRef.current.selectedIndex = Array.from(typeRef.current.options).findIndex((t) => +t.value === newType.id);\n      }\n    } else {\n      if(typeRef.current) {\n        typeRef.current.selectedIndex = 0;\n      }\n      setType(undefined);\n    }\n    if(cardObj.subtypeId) {\n      const newSubtype: Subtype | undefined = cardOptionsState.cardOptions.subtypes.find((a) => a.id === cardObj.subtypeId);\n      if(newSubtype) {\n        setSubtype(newSubtype);\n        if(subtypeRef.current) {\n          subtypeRef.current.selectedIndex = Array.from(subtypeRef.current.options).findIndex((t) => +t.value === newSubtype.id);\n        }\n      }\n    } else {\n      if(subtypeRef.current) {\n        subtypeRef.current.selectedIndex = 0;\n      }\n      setSubtype(undefined);\n    }\n    if(cardObj.setId) {\n      const newSet: Set | undefined = cardOptionsState.cardOptions.sets.find((a) => a.id === cardObj.setId);\n      if(newSet) {\n        setSet(newSet);\n        if(setIconRef.current) {\n          setIconRef.current.selectedIndex = Array.from(setIconRef.current.options).findIndex((t) => +t.value === newSet.id);\n        }\n      }\n    } else {\n      if(setIconRef.current) {\n        setIconRef.current.selectedIndex = 0;\n      }\n      setSet(undefined);\n    }\n    if(cardObj.weaknessTypeId) {\n      const newWeaknessType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.weaknessTypeId);\n      if(newWeaknessType) {\n        setWeaknessType(newWeaknessType);\n        if(weaknessTypeRef.current) {\n          weaknessTypeRef.current.selectedIndex = Array.from(weaknessTypeRef.current.options).findIndex((t) => +t.value === newWeaknessType.id);\n        }\n      }\n    } else {\n      if(weaknessTypeRef.current) {\n        weaknessTypeRef.current.selectedIndex = 0;\n      }\n      setWeaknessType(undefined);\n    }\n    if(cardObj.resistanceTypeId) {\n      const newResistanceType: Type | undefined = cardOptionsState.cardOptions.types.find((a) => a.id === cardObj.resistanceTypeId);\n      if(newResistanceType) {\n        setResistanceType(newResistanceType);\n        if(resistanceTypeRef.current) {\n          resistanceTypeRef.current.selectedIndex = Array.from(resistanceTypeRef.current.options).findIndex((t) => +t.value === newResistanceType.id);\n        }\n      }\n    } else {\n      if(resistanceTypeRef.current) {\n        resistanceTypeRef.current.selectedIndex = 0;\n      }\n      setResistanceType(undefined);\n    }\n    if(cardObj.rotationId) {\n      const newRotation: Rotation | undefined = cardOptionsState.cardOptions.rotations.find((a) => a.id === cardObj.rotationId);\n      if(newRotation) {\n        setRotation(newRotation);\n        if(rotationRef.current) {\n          rotationRef.current.selectedIndex = Array.from(rotationRef.current.options).findIndex((t) => +t.value === newRotation.id);\n        }\n      }\n    } else {\n      if(rotationRef.current) {\n        rotationRef.current.selectedIndex = 0;\n      }\n      setRotation(undefined);\n    }\n    if(cardObj.variationId) {\n      const newVariation: Variation | undefined = cardOptionsState.cardOptions.variations.find((a) => a.id === cardObj.variationId);\n      if(newVariation) {\n        setVariation(newVariation);\n        if(variationRef.current) {\n          variationRef.current.selectedIndex = Array.from(variationRef.current.options).findIndex((t) => +t.value === newVariation.id);\n        }\n      }\n    } else {\n      if(variationRef.current) {\n        variationRef.current.selectedIndex = 0;\n      }\n      setVariation(undefined);\n    }\n    if(cardObj.rarityId) {\n      const newRarity: Rarity | undefined = cardOptionsState.cardOptions.rarities.find((a) => a.id === cardObj.rarityId);\n      if(newRarity) {\n        setRarity(newRarity);\n        if(rarityRef.current) {\n          rarityRef.current.selectedIndex = Array.from(rarityRef.current.options).findIndex((t) => +t.value === newRarity.id);\n        }\n      }\n    } else {\n      if(rarityRef.current) {\n        rarityRef.current.selectedIndex = 0;\n      }\n      setRarity(undefined);\n    }\n    if(cardObj.rarityIconId) {\n      const newRarityIcon: RarityIcon | undefined = cardOptionsState.cardOptions.rarityIcons.find((a) => a.id === cardObj.rarityIconId);\n      if(newRarityIcon) {\n        setRarityIcon(newRarityIcon);\n        if(rarityIconRef.current) {\n          rarityIconRef.current.selectedIndex = Array.from(rarityIconRef.current.options).findIndex((t) => +t.value === newRarityIcon.id);\n        }\n      }\n    } else {\n      if(rarityIconRef.current) {\n        rarityIconRef.current.selectedIndex = 0;\n      }\n      setRarityIcon(undefined);\n    }\n    if(cardObj.raidLevel) {\n      setRaidLevel(cardObj.raidLevel);\n      if(raidLevelRef.current) {\n        raidLevelRef.current.selectedIndex = Array.from(raidLevelRef.current.options).findIndex((t) => +t.value === cardObj.raidLevel);\n      }\n    } else {\n      if(raidLevelRef.current) {\n        raidLevelRef.current.selectedIndex = 0;\n      }\n      setRaidLevel(1);\n    }\n    setImportingTrigger(!importingTrigger);\n  }\n\n  /**\n   * Callback for the function above\n   */\n  useEffect(() => {\n    importingCard.current = false;\n  }, [importingTrigger]);\n\n  useEffect(() => {\n    // Initially import the prop-card once the selectors have loaded\n    if(!initialImported.current && card && subtypeRef.current) {\n      importCard(card);\n      initialImported.current = true;\n    }\n  }, [card, importCard]);\n\n  const resetCropper = (newImage: string, imageSetter: () => void) => {\n    setCropImage(newImage);\n    setCurrentCropSetter(imageSetter);\n    setCropArea({ x: 0, y: 0});\n    setCroppedAreaPixels({ ...croppedAreaPixels, x: 0, y: 0});\n    setCropZoom(1);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.form}>\n        <div className={styles.seperator}>\n          <Button icon={faPaste} onClick={e => {\n            navigator.clipboard.readText()\n              .then((value: string) => {\n                importCard(JSON.parse(value) as ImportedCard);\n              })\n              .catch(console.error);\n          }}>\n            {'Import from clipboard'}\n          </Button>\n        </div>\n        <div className={styles.seperator}>\n          <Select name='Base Set' shortName='baseSet' selectRef={baseSetRef} onChange={e => setBaseSet(cardOptionsState.cardOptions.baseSets.find((a: BaseSet) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.baseSets.map((value: BaseSet, i: number) =>\n              <option value={value.id} key={i}>{value.name}</option>\n            )}\n          </Select>\n          <Select name='Supertype' shortName='supertype' selectRef={supertypeRef} onChange={e => setSupertype(cardOptionsState.cardOptions.supertypes.find((a: Supertype) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.supertypes.map((value: Supertype, i: number) =>\n              <option value={value.id} key={i}>{value.name}</option>\n            )}\n          </Select>\n          <Select name='Type' shortName='type' selectRef={typeRef} onChange={e => setType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n            {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n              if(!value.supertypes.includes(supertype?.id || 0)) {\n                return false;\n              } else {\n                return <option value={value.id} key={i}>{value.name}</option>;\n              }\n            })}\n          </Select>\n          {type?.hasSubtypes &&\n            <Select name='Subtype' shortName='subtype' selectRef={subtypeRef} onChange={e => setSubtype(cardOptionsState.cardOptions.subtypes.find((a: Subtype) => a.id === +e.currentTarget.value))}>\n              {type?.subtypeOptional && <option value={'default'}>{'Default'}</option>}\n              {cardOptionsState.cardOptions.subtypes.map((value: Subtype, i: number) => {\n                if(!value.types.includes(type?.id || 0) || !value.supertypes.includes(supertype?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </Select>\n          }\n          {subtype?.hasVariations &&\n            <Select name='Variation' shortName='variation' selectRef={variationRef} onChange={e => setVariation(cardOptionsState.cardOptions.variations.find((a: Variation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.variations.map((value: Variation, i: number) => {\n                if(!value.subtypes.includes(subtype?.id || 0)) {\n                  return false;\n                } else {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                }\n              })}\n            </Select>\n          }\n          {(supertype?.shortName === 'Pokemon' && (type?.rarities[0] || subtype?.rarities[0] || variation?.rarities[0])) &&\n            <Select name='Rarity' shortName='rarity' selectRef={rarityRef} onChange={e => setRarity(cardOptionsState.cardOptions.rarities.find((a: Rarity) => a.id === +e.currentTarget.value))}>\n              <option value={'default'}>{'Default'}</option>\n              {cardOptionsState.cardOptions.rarities.map((value: Rarity, i: number) => {\n                const includesType: boolean = type?.rarities.includes(value.id) || false;\n                const includesSubtype: boolean = subtype?.rarities.includes(value.id) || false;\n                const includesVariation: boolean = variation?.rarities.includes(value.id) || false;\n                if((includesType && (includesSubtype || !subtype) && (includesVariation || !variation))\n                  || (includesSubtype && (includesVariation || !variation))\n                  || includesVariation) {\n                  return <option value={value.id} key={i}>{value.name}</option>;\n                } else {\n                  return false;\n                }\n              })}\n            </Select>\n          }\n          {(!(supertype?.shortName === 'Energy' && type?.shortName !== 'Special') && supertype?.shortName !== 'RaidBoss') && <>\n            <Select name='Rotation' shortName='rotation' selectRef={rotationRef} onChange={e => setRotation(cardOptionsState.cardOptions.rotations.find((a: Rotation) => a.id === +e.currentTarget.value))}>\n              {cardOptionsState.cardOptions.rotations.map((value: Rotation, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </Select>\n            <Select name='Rarity Icons' shortName='rarityIcon' selectRef={rarityIconRef} onChange={e => setRarityIcon(cardOptionsState.cardOptions.rarityIcons.find((a: RarityIcon) => a.id === +e.currentTarget.value))}>\n              <option value={'none'}>{'None'}</option>\n              {cardOptionsState.cardOptions.rarityIcons.map((value: RarityIcon, i: number) =>\n                <option value={value.id} key={i}>{value.name}</option>\n              )}\n            </Select>\n            <Checkbox name='Custom Set Icon' shortName='customSetIcon' checked={hasCustomSetIcon} setter={setHasCustomSetIcon} />\n            {hasCustomSetIcon ?\n              <ImageInput shortName='customSetIcon' setter={setCustomSetIcon} />\n              :\n              <Select name='Set Icon' shortName='set' selectRef={setIconRef} onChange={e => setSet(cardOptionsState.cardOptions.sets.find((a: Set) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.sets.map((value: Set, i: number) =>\n                  <option value={value.id} key={i}>{value.name}</option>\n                )}\n              </Select>\n            }\n          </>}\n          {supertype?.shortName === 'RaidBoss' &&\n            <Select name='Raid Level' shortName='raidLevel' selectRef={raidLevelRef} onChange={e => setRaidLevel(+e.currentTarget.value)}>\n              <option value={1}>{1}</option>\n              <option value={2}>{2}</option>\n              <option value={3}>{3}</option>\n            </Select>\n          }\n        </div>\n        {!(supertype?.shortName === 'Energy' && type?.shortName !== 'Special') && <>\n          <div className={styles.seperator}>\n            <Input type='text' name='Name' shortName='name' value={name} setter={setName} />\n            {(supertype?.shortName === 'Pokemon' || supertype?.shortName === 'RaidBoss') &&\n              <Input type='number' name='Hitpoints' shortName='hitpoints' value={hitpoints} setter={setHitpoints} min={0} />\n            }\n            {supertype?.shortName !== 'RaidBoss' && <>\n              {subtype?.hasPrevolve && <>\n                <Input type='text' name='Prevolve Name' shortName='prevolveName' value={prevolveName} setter={setPrevolveName} />\n                <ImageInput name='Prevolve Image' shortName='prevolveImage' setter={setPrevolveImage} />\n              </>}\n              {subtype?.hasPokedexEntry &&\n                <Input type='text' horizontal name='Pokédex Entry' shortName='pokedexEntry' value={pokedexEntry} setter={setPokedexEntry} />\n              }\n              {type?.hasSubname &&\n                <Input type='text' name='Subname' shortName='subname' value={subname} setter={setSubname} />\n              }\n            </>}\n          </div>\n          {(supertype?.shortName === 'Pokemon' || supertype?.shortName === 'RaidBoss') && <>\n            {supertype.shortName !== 'RaidBoss' &&\n              <div className={styles.seperator}>\n                <Checkbox name='Has Ability' shortName='hasAbility' checked={hasAbility} setter={setHasAbility} />\n                {hasAbility && <>\n                  <Input type='text' name='Ability Name' shortName='abilityName' value={abilityName} setter={setAbilityName} />\n                  <Input type='textarea' name='Ability Text' shortName='abilityText' value={abilityText} setter={setAbilityText} />\n                </>}\n              </div>\n            }\n            <div className={styles.seperator}>\n              <Input type='text' name='Move Name' shortName='move1Name' value={move1Name} setter={setMove1Name} />\n              <Input type='text' name='Move Damage' shortName='move1Damage' value={move1Damage} setter={setMove1Damage} />\n              <Input type='textarea' horizontal name='Move Text' shortName='move1Text' value={move1Text} setter={setMove1Text} />\n              {supertype.shortName !== 'RaidBoss' &&\n                <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move1Cost} setMoveCost={setMove1Cost} />\n              }\n            </div>\n            {(!hasAbility || supertype.shortName === 'RaidBoss') &&\n              <div className={styles.seperator}>\n                {supertype.shortName !== 'RaidBoss' &&\n                  <Checkbox name='Has Second Move' shortName='hasSecondMove' checked={hasSecondMove} setter={setHasSecondMove} />\n                }\n                {(hasSecondMove || supertype.shortName === 'RaidBoss') && <>\n                  <Input type='text' name='Move Name' shortName='move2Name' value={move2Name} setter={setMove2Name} />\n                  <Input type='text' name='Move Damage' shortName='move2Damage' value={move2Damage} setter={setMove2Damage} />\n                  <Input type='textarea' name='Move Text' shortName='move2Text' value={move2Text} setter={setMove2Text} />\n                  {supertype.shortName !== 'RaidBoss' &&\n                    <EnergyPicker label={'Move Cost'} types={cardOptionsState.cardOptions.types} moveCost={move2Cost} setMoveCost={setMove2Cost} />\n                }\n                </>}\n              </div>\n            }\n            {supertype.shortName === 'RaidBoss' &&\n              <div className={styles.seperator}>\n                <Input type='text' name='Move Name' shortName='move2Name' value={move3Name} setter={setMove3Name} />\n                <Input type='text' name='Move Damage' shortName='move2Damage' value={move3Damage} setter={setMove3Damage} />\n                <Input type='textarea' name='Move Text' shortName='move2Text' value={move3Text} setter={setMove3Text} />\n              </div>\n            }\n          </>}\n          {supertype?.shortName === 'Pokemon' && <>\n            <div className={styles.seperator}>\n              <Select name='Weakness Type' shortName='weaknessType' selectRef={weaknessTypeRef} onChange={e => setWeaknessType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                  if(!value.isEnergy) {\n                    return false;\n                  } else {\n                    return <option value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </Select>\n              <Input type='number' name='Weakness Amount' shortName='weaknessAmount' value={weaknessAmount} setter={setWeaknessAmount} max={999} min={0} />\n              <Select name='Resistance Type' shortName='resistanceType' selectRef={resistanceTypeRef} onChange={e => setResistanceType(cardOptionsState.cardOptions.types.find((a: Type) => a.id === +e.currentTarget.value))}>\n                <option value={'none'}>{'None'}</option>\n                {cardOptionsState.cardOptions.types.map((value: Type, i: number) => {\n                  if(!value.isEnergy) {\n                    return false;\n                  } else {\n                    return <option value={value.id} key={i}>{value.name}</option>;\n                  }\n                })}\n              </Select>\n              {resistanceType &&\n                <Input type='number' name='Resistance Amount' shortName='resistanceAmount' value={resistanceAmount} setter={setResistanceAmount} max={999} min={0} />\n              }\n              <Input type='number' name='Retreat Cost' shortName='retreatCost' value={retreatCost} setter={(newValue: number) => setRetreatCost(Math.round(newValue))} max={5} min={0} />\n            </div>\n          </>}\n          {(!subtype?.noDescription && supertype?.shortName !== 'RaidBoss') &&\n            <div className={styles.seperator}>\n              <Input type='textarea' name='Description' shortName='description' value={description} setter={setDescription} />\n            </div>\n          }\n          <div className={styles.seperator}>\n            {supertype?.shortName !== 'Energy' && supertype?.shortName !== 'RaidBoss' &&\n              <Input type='text' name='Illustrator' shortName='illustrator' value={illustrator} setter={setIllustrator} />\n            }\n            <Input type='text' name='Card Number' shortName='cardNumber' value={cardNumber} setter={setCardNumber} />\n            {supertype?.shortName !== 'RaidBoss' &&\n              <Input type='text' name='Total In Set' shortName='totalInSet' value={totalInSet} setter={setTotalInSet} />\n            }\n          </div>\n        </>}\n        <div className={styles.seperator}>\n          <span className={styles.info}>{'Card dimensions are 747w × 1038h'}</span>\n          {currentCropSetter &&\n            <>\n              <div className={styles.cropperWrapper}>\n                <Cropper\n                  image={cropImage}\n                  crop={cropArea}\n                  zoom={cropZoom}\n                  cropSize={{ width: 320, height: 444.66 }} // Based on aspect ratio\n                  maxZoom={100}\n                  minZoom={.1}\n                  restrictPosition={false}\n                  zoomSpeed={.1}\n                  aspect={747 / 1038}\n                  onCropChange={(location: Point) => setCropArea(location)}\n                  onCropComplete={async (croppedArea: Area, cap: Area) => setCroppedAreaPixels(cap)}\n                  onZoomChange={(newZoom: number) => setCropZoom(newZoom)}\n                />\n                <img alt='' src={getCardImage({baseSet: baseSet?.shortName, type: type?.shortName, rarity: rarity?.shortName, subtype: subtype?.shortName, supertype: supertype?.shortName, variation: variation?.shortName})} className={styles.cropperImage} />\n              </div>\n              <Button icon={faCheckSquare} className={styles.buttonCrop} onClick={async () => {\n                const croppedImage = await getCroppedImg(cropImage, croppedAreaPixels);\n                currentCropSetter && currentCropSetter(croppedImage);\n              }}>\n                {'Apply crop'}\n              </Button>\n            </>\n          }\n          <ImageInput name='Background Image' shortName='backgroundImage' info='Placed behind everything'\n            setter={setBackgroundImage}\n            croppable cropperSetter={resetCropper}\n          />\n          <ImageInput name='Card Image' shortName='imageLayer1' info='Placed in front of background'\n            setter={setImageLayer1}\n            croppable cropperSetter={resetCropper}\n          />\n          <ImageInput name='Top Image' shortName='imageLayer2' info='Placed on top of the card image'\n            setter={setImageLayer2}\n            croppable cropperSetter={resetCropper}\n          />\n          {supertype?.shortName === 'Energy' &&\n            <ImageInput name='Type Image' shortName='typeImage' info=\"The energy's top right icon\" setter={setTypeImage} />\n          }\n        </div>\n        <div className={styles.seperator}>\n          <Button icon={faFileDownload} className={styles.buttonDownload} onClick={downloadCard}>{'Download as image'}</Button>\n          <Button icon={faClipboard} onClick={exportCard}>{'Export to clipboard'}</Button>\n        </div>\n      </div>\n      <div className={styles.cardWrapper}>\n        <CardDisplay card={makeCard()} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: State) => ({ cardOptionsState: state.cardOptions });\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ requestCardOptions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCreatorPage);\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport CardCreatorPage from 'pages/CardCreator';\r\nimport styles from './App.module.scss';\r\nimport { Switch, BrowserRouter as Router, Route, } from 'react-router-dom';\r\nimport garbodor from './garbodor.json';\r\nimport pikachu from './pikachu.json';\r\nimport { ImportedCard } from 'interfaces';\r\nimport { relativePathPrefix } from 'services';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className={styles.wrapper}>\r\n        <header className={styles.header}>\r\n          <div className={styles.headerCircle} />\r\n        </header>\r\n        <div className={styles.content}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/pokemon'>\r\n                <CardCreatorPage card={garbodor as ImportedCard} />\r\n              </Route>\r\n              <Route exact path='/raid-boss'>\r\n                <CardCreatorPage card={pikachu as ImportedCard} />\r\n              </Route>\r\n              <Route path=''>\r\n                <CardCreatorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n        <div className={styles.background} style={{ background: `url(${relativePathPrefix('/img/line-pattern.svg')})` }} />\r\n        <footer className={styles.footer} />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/main.global.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__GBXSi\",\"horizontal\":\"Form_horizontal__2UtlA\",\"inputField\":\"Form_inputField__1HngE\",\"inputLabel\":\"Form_inputLabel__322yj\",\"inputLabelButton\":\"Form_inputLabelButton__DsbXy\",\"inputTextarea\":\"Form_inputTextarea__3XaZo\",\"info\":\"Form_info__3KnDV\",\"button\":\"Form_button__3v2gH\",\"file\":\"Form_file__wr5HX\",\"buttonIcon\":\"Form_buttonIcon__2lEBi\",\"checkbox\":\"Form_checkbox__NPniS\",\"checkboxFake\":\"Form_checkboxFake__1Fe8j\",\"checkboxIcon\":\"Form_checkboxIcon__YOTi1\",\"select\":\"Form_select__2LyEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardCreator_wrapper__1xK8r\",\"form\":\"CardCreator_form__2CplI\",\"seperator\":\"CardCreator_seperator__1YR8e\",\"info\":\"CardCreator_info__2jpEw\",\"cardWrapper\":\"CardCreator_cardWrapper__2nTPg\",\"cropperWrapper\":\"CardCreator_cropperWrapper__37W8W\",\"cropperImage\":\"CardCreator_cropperImage__1AZT-\",\"buttonCrop\":\"CardCreator_buttonCrop__1PZQz\",\"buttonDownload\":\"CardCreator_buttonDownload__1ZwpE\"};"],"sourceRoot":""}